android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.a:
    void invalidateOptionsMenu(android.app.Activity) -> a
android.support.v4.app.BackStackRecord -> android.support.v4.app.b:
    android.support.v4.app.FragmentManagerImpl mManager -> a
    android.support.v4.app.BackStackRecord$Op mHead -> b
    android.support.v4.app.BackStackRecord$Op mTail -> c
    int mNumOp -> d
    int mEnterAnim -> e
    int mExitAnim -> f
    int mPopEnterAnim -> g
    int mPopExitAnim -> h
    int mTransition -> i
    int mTransitionStyle -> j
    boolean mAddToBackStack -> k
    boolean mAllowAddToBackStack -> l
    java.lang.String mName -> m
    boolean mCommitted -> n
    int mIndex -> o
    int mBreadCrumbTitleRes -> p
    java.lang.CharSequence mBreadCrumbTitleText -> q
    int mBreadCrumbShortTitleRes -> r
    java.lang.CharSequence mBreadCrumbShortTitleText -> s
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> a
    void addOp(android.support.v4.app.BackStackRecord$Op) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> b
    void bumpBackStackNesting(int) -> a
    int commit() -> a
    int commitInternal(boolean) -> a
    void run() -> run
    void popFromBackStack(boolean) -> b
    java.lang.String getName() -> b
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.c:
    android.support.v4.app.BackStackRecord$Op next -> a
    android.support.v4.app.BackStackRecord$Op prev -> b
    int cmd -> c
    android.support.v4.app.Fragment fragment -> d
    int enterAnim -> e
    int exitAnim -> f
    int popEnterAnim -> g
    int popExitAnim -> h
    java.util.ArrayList removed -> i
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> a
    int mTransition -> b
    int mTransitionStyle -> c
    java.lang.String mName -> d
    int mIndex -> e
    int mBreadCrumbTitleRes -> f
    java.lang.CharSequence mBreadCrumbTitleText -> g
    int mBreadCrumbShortTitleRes -> h
    java.lang.CharSequence mBreadCrumbShortTitleText -> i
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.d:
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.BackStackState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    java.util.HashMap sClassMap -> P
    int mState -> a
    android.view.View mAnimatingAway -> b
    int mStateAfterAnimating -> c
    android.os.Bundle mSavedFragmentState -> d
    android.util.SparseArray mSavedViewState -> e
    int mIndex -> f
    java.lang.String mWho -> g
    android.os.Bundle mArguments -> h
    android.support.v4.app.Fragment mTarget -> i
    int mTargetIndex -> j
    int mTargetRequestCode -> k
    boolean mAdded -> l
    boolean mRemoving -> m
    boolean mResumed -> n
    boolean mFromLayout -> o
    boolean mInLayout -> p
    boolean mRestored -> q
    int mBackStackNesting -> r
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> s
    android.support.v4.app.FragmentActivity mActivity -> t
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> u
    android.support.v4.app.Fragment mParentFragment -> v
    int mFragmentId -> w
    int mContainerId -> x
    java.lang.String mTag -> y
    boolean mHidden -> z
    boolean mDetached -> A
    boolean mRetainInstance -> B
    boolean mRetaining -> C
    boolean mHasMenu -> D
    boolean mMenuVisible -> E
    boolean mCalled -> F
    int mNextAnim -> G
    android.view.ViewGroup mContainer -> H
    android.view.View mView -> I
    android.view.View mInnerView -> J
    boolean mDeferStart -> K
    boolean mUserVisibleHint -> L
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> M
    boolean mLoadersStarted -> N
    boolean mCheckedForLoaderManager -> O
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> a
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> a
    void restoreViewState(android.os.Bundle) -> a
    void setIndex(int,android.support.v4.app.Fragment) -> a
    boolean isInBackStack() -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    android.support.v4.app.FragmentActivity getActivity() -> b
    android.content.res.Resources getResources() -> c
    boolean isDetached() -> d
    void onHiddenChanged(boolean) -> a
    void onActivityResult(int,int,android.content.Intent) -> a
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> b
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> a
    void onAttach(android.app.Activity) -> a
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> a
    void onCreate(android.os.Bundle) -> c
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onViewCreated(android.view.View,android.os.Bundle) -> a
    void onActivityCreated(android.os.Bundle) -> d
    void onViewStateRestored(android.os.Bundle) -> e
    void onStart() -> e
    void onResume() -> f
    void onSaveInstanceState(android.os.Bundle) -> f
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> g
    void onStop() -> h
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> i
    void onDestroy() -> j
    void initState() -> k
    void onDetach() -> l
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    void onPrepareOptionsMenu(android.view.Menu) -> a
    void onDestroyOptionsMenu() -> m
    boolean onOptionsItemSelected(android.view.MenuItem) -> a
    void onOptionsMenuClosed(android.view.Menu) -> b
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> b
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void instantiateChildFragmentManager() -> n
    void performCreate(android.os.Bundle) -> g
    android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> b
    void performActivityCreated(android.os.Bundle) -> h
    void performStart() -> o
    void performResume() -> p
    void performConfigurationChanged(android.content.res.Configuration) -> a
    void performLowMemory() -> q
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> b
    boolean performPrepareOptionsMenu(android.view.Menu) -> c
    boolean performOptionsItemSelected(android.view.MenuItem) -> c
    boolean performContextItemSelected(android.view.MenuItem) -> d
    void performOptionsMenuClosed(android.view.Menu) -> d
    void performSaveInstanceState(android.os.Bundle) -> i
    void performPause() -> r
    void performStop() -> s
    void performReallyStop() -> t
    void performDestroyView() -> u
    void performDestroy() -> v
android.support.v4.app.Fragment$1 -> android.support.v4.app.e:
    android.support.v4.app.Fragment this$0 -> a
    android.view.View findViewById(int) -> a
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.f:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.g:
    android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.Fragment$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.h:
    android.os.Handler mHandler -> a
    android.support.v4.app.FragmentManagerImpl mFragments -> b
    android.support.v4.app.FragmentContainer mContainer -> c
    boolean mCreated -> d
    boolean mResumed -> e
    boolean mStopped -> f
    boolean mReallyStopped -> g
    boolean mRetaining -> h
    boolean mOptionsMenuInvalidated -> i
    boolean mCheckedForLoaderManager -> j
    boolean mLoadersStarted -> k
    java.util.HashMap mAllLoaderManagers -> l
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> m
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> a
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> b
    void supportInvalidateOptionsMenu() -> c
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String viewToString(android.view.View) -> a
    void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> a
    void doReallyStop(boolean) -> a
    void onReallyStop() -> d
    void onAttachFragment(android.support.v4.app.Fragment) -> a
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void invalidateSupportFragment(java.lang.String) -> a
    android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> a
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.app.i:
    int[] Fragment -> a
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.j:
    java.lang.Object activity -> a
    java.lang.Object custom -> b
    java.util.HashMap children -> c
    java.util.ArrayList fragments -> d
    java.util.HashMap loaders -> e
android.support.v4.app.FragmentContainer -> android.support.v4.app.k:
    android.view.View findViewById(int) -> a
android.support.v4.app.FragmentManager -> android.support.v4.app.l:
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.m:
    void onBackStackChanged() -> a
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.n:
    boolean DEBUG -> a
    boolean HONEYCOMB -> b
    java.util.ArrayList mPendingActions -> c
    java.lang.Runnable[] mTmpActions -> d
    boolean mExecutingActions -> e
    java.util.ArrayList mActive -> f
    java.util.ArrayList mAdded -> g
    java.util.ArrayList mAvailIndices -> h
    java.util.ArrayList mBackStack -> i
    java.util.ArrayList mCreatedMenus -> j
    java.util.ArrayList mBackStackIndices -> k
    java.util.ArrayList mAvailBackStackIndices -> l
    java.util.ArrayList mBackStackChangeListeners -> m
    int mCurState -> n
    android.support.v4.app.FragmentActivity mActivity -> o
    android.support.v4.app.FragmentContainer mContainer -> p
    android.support.v4.app.Fragment mParent -> q
    boolean mNeedMenuInvalidate -> r
    boolean mStateSaved -> s
    boolean mDestroyed -> t
    java.lang.String mNoTransactionsBecause -> u
    boolean mHavePendingDeferredStart -> v
    android.os.Bundle mStateBundle -> w
    android.util.SparseArray mStateArray -> x
    java.lang.Runnable mExecCommit -> y
    android.view.animation.Interpolator DECELERATE_QUINT -> z
    android.view.animation.Interpolator DECELERATE_CUBIC -> A
    android.view.animation.Interpolator ACCELERATE_QUINT -> B
    android.view.animation.Interpolator ACCELERATE_CUBIC -> C
    void throwException(java.lang.RuntimeException) -> a
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    boolean popBackStackImmediate() -> c
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> a
    android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> a
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> a
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> a
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> a
    void moveToState(android.support.v4.app.Fragment) -> b
    void moveToState(int,boolean) -> a
    void moveToState(int,int,int,boolean) -> a
    void startPendingDeferredFragments() -> d
    void makeActive(android.support.v4.app.Fragment) -> c
    void makeInactive(android.support.v4.app.Fragment) -> d
    void addFragment(android.support.v4.app.Fragment,boolean) -> a
    void removeFragment(android.support.v4.app.Fragment,int,int) -> a
    void hideFragment(android.support.v4.app.Fragment,int,int) -> b
    void showFragment(android.support.v4.app.Fragment,int,int) -> c
    void detachFragment(android.support.v4.app.Fragment,int,int) -> d
    void attachFragment(android.support.v4.app.Fragment,int,int) -> e
    android.support.v4.app.Fragment findFragmentById(int) -> a
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    void checkStateLoss() -> t
    void enqueueAction(java.lang.Runnable,boolean) -> a
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> a
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> a
    void freeBackStackIndex(int) -> b
    boolean execPendingActions() -> e
    void reportBackStackChanged() -> f
    void addBackStackState(android.support.v4.app.BackStackRecord) -> b
    boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> a
    java.util.ArrayList retainNonConfig() -> g
    void saveFragmentViewState(android.support.v4.app.Fragment) -> e
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> f
    android.os.Parcelable saveAllState() -> h
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> a
    void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> a
    void noteStateNotSaved() -> i
    void dispatchCreate() -> j
    void dispatchActivityCreated() -> k
    void dispatchStart() -> l
    void dispatchResume() -> m
    void dispatchPause() -> n
    void dispatchStop() -> o
    void dispatchReallyStop() -> p
    void dispatchDestroyView() -> q
    void dispatchDestroy() -> r
    void dispatchConfigurationChanged(android.content.res.Configuration) -> a
    void dispatchLowMemory() -> s
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> a
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> a
    boolean dispatchContextItemSelected(android.view.MenuItem) -> b
    void dispatchOptionsMenuClosed(android.view.Menu) -> b
    int reverseTransit(int) -> c
    int transitToStyleIndex(int,boolean) -> b
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.o:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.p:
    android.support.v4.app.Fragment val$fragment -> a
    android.support.v4.app.FragmentManagerImpl this$0 -> b
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> a
    int[] mAdded -> b
    android.support.v4.app.BackStackState[] mBackStack -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.q:
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentManagerState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> a
    int mIndex -> b
    boolean mFromLayout -> c
    int mFragmentId -> d
    int mContainerId -> e
    java.lang.String mTag -> f
    boolean mRetainInstance -> g
    boolean mDetached -> h
    android.os.Bundle mArguments -> i
    android.os.Bundle mSavedFragmentState -> j
    android.support.v4.app.Fragment mInstance -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.r:
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> a
    android.content.Context mContext -> b
    android.support.v4.app.FragmentManager mFragmentManager -> c
    int mContainerId -> d
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> e
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> f
    boolean mAttached -> g
    void setup() -> setup
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> a
android.support.v4.app.FragmentTabHost$1 -> android.support.v4.app.s:
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.app.FragmentTabHost$SavedState$1 -> android.support.v4.app.t:
    android.support.v4.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentTabHost$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> android.support.v4.app.u:
    java.lang.String tag -> a
    java.lang.Class clss -> b
    android.os.Bundle args -> c
    android.support.v4.app.Fragment fragment -> d
    android.support.v4.app.Fragment access$102(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment access$100(android.support.v4.app.FragmentTabHost$TabInfo) -> a
    java.lang.String access$200(android.support.v4.app.FragmentTabHost$TabInfo) -> b
    java.lang.Class access$300(android.support.v4.app.FragmentTabHost$TabInfo) -> c
    android.os.Bundle access$400(android.support.v4.app.FragmentTabHost$TabInfo) -> d
android.support.v4.app.FragmentTransaction -> android.support.v4.app.v:
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> b
    int commit() -> a
android.support.v4.app.LoaderManager -> android.support.v4.app.w:
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.x:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.y:
    boolean DEBUG -> a
    android.support.v4.util.SparseArrayCompat mLoaders -> b
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> c
    java.lang.String mWho -> d
    android.support.v4.app.FragmentActivity mActivity -> e
    boolean mStarted -> f
    boolean mRetaining -> g
    void updateActivity(android.support.v4.app.FragmentActivity) -> a
    void doStart() -> b
    void doStop() -> c
    void doRetain() -> d
    void finishRetain() -> e
    void doReportNextStart() -> f
    void doReportStart() -> g
    void doDestroy() -> h
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.z:
    int mId -> a
    android.os.Bundle mArgs -> b
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> c
    android.support.v4.content.Loader mLoader -> d
    boolean mHaveData -> e
    boolean mDeliveredData -> f
    java.lang.Object mData -> g
    boolean mStarted -> h
    boolean mRetaining -> i
    boolean mRetainingStarted -> j
    boolean mReportNextStart -> k
    boolean mDestroyed -> l
    boolean mListenerRegistered -> m
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> n
    android.support.v4.app.LoaderManagerImpl this$0 -> o
    void start() -> a
    void retain() -> b
    void finishRetain() -> c
    void reportStart() -> d
    void stop() -> e
    void destroy() -> f
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.aa:
    android.view.ViewGroup wrap(android.view.View) -> a
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.ab:
android.support.v4.content.Loader -> android.support.v4.a.a:
    int mId -> a
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> b
    boolean mStarted -> c
    boolean mAbandoned -> d
    boolean mReset -> e
    boolean mContentChanged -> f
    boolean mProcessingChange -> g
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void startLoading() -> a
    void onStartLoading() -> b
    void stopLoading() -> c
    void onStopLoading() -> d
    void reset() -> e
    void onReset() -> f
    java.lang.String dataToString(java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.a.b:
android.support.v4.os.ParcelableCompat -> android.support.v4.b.a:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.b.b:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.b.c:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    java.lang.Object[] newArray(int) -> a
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.b.d:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub -> android.support.v4.b.e:
    android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.util.DebugUtils -> android.support.v4.c.a:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> a
android.support.v4.util.LogWriter -> android.support.v4.c.b:
    java.lang.String mTag -> a
    java.lang.StringBuilder mBuilder -> b
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> a
android.support.v4.util.SparseArrayCompat -> android.support.v4.c.c:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    int[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    void gc() -> c
    int size() -> a
    int keyAt(int) -> a
    java.lang.Object valueAt(int) -> b
    void clear() -> b
    int idealByteArraySize(int) -> c
    int idealIntArraySize(int) -> d
android.support.v4.view.GravityCompat -> android.support.v4.view.a:
    android.support.v4.view.GravityCompat$GravityCompatImpl IMPL -> a
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImpl -> android.support.v4.view.b:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImplBase -> android.support.v4.view.c:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1 -> android.support.v4.view.d:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompatJellybeanMr1 -> android.support.v4.view.e:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.KeyEventCompat -> android.support.v4.view.f:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> a
    boolean hasModifiers(android.view.KeyEvent,int) -> a
    boolean hasNoModifiers(android.view.KeyEvent) -> a
    void startTracking(android.view.KeyEvent) -> b
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.g:
    int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> a
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl -> android.support.v4.view.h:
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.i:
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.j:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompatEclair -> android.support.v4.view.k:
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompatHoneycomb -> android.support.v4.view.l:
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.MotionEventCompat -> android.support.v4.view.m:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> a
    int getActionMasked(android.view.MotionEvent) -> a
    int getActionIndex(android.view.MotionEvent) -> b
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> c
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.n:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.o:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.p:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompatEclair -> android.support.v4.view.q:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.PagerAdapter -> android.support.v4.view.r:
    android.database.DataSetObservable mObservable -> a
    int getCount() -> a
    void startUpdate(android.view.ViewGroup) -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> b
    void finishUpdate(android.view.ViewGroup) -> b
    void startUpdate(android.view.View) -> a
    java.lang.Object instantiateItem(android.view.View,int) -> a
    void destroyItem(android.view.View,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> b
    void finishUpdate(android.view.View) -> b
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    android.os.Parcelable saveState() -> b
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
    int getItemPosition(java.lang.Object) -> a
    void registerDataSetObserver(android.database.DataSetObserver) -> a
    void unregisterDataSetObserver(android.database.DataSetObserver) -> b
    float getPageWidth(int) -> a
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.s:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> a
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.t:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.u:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.v:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompatHoneycomb -> android.support.v4.view.w:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.ViewCompat -> android.support.v4.view.x:
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> a
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> c
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> d
    boolean isOpaque(android.view.View) -> e
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.y:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> c
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> d
    boolean isOpaque(android.view.View) -> e
android.support.v4.view.ViewCompat$EclairMr1ViewCompatImpl -> android.support.v4.view.z:
    boolean isOpaque(android.view.View) -> e
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.aa:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.ab:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> c
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.ac:
    boolean canScrollHorizontally(android.view.View,int) -> a
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.ad:
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> android.support.v4.view.ae:
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> d
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.af:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> c
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> d
    boolean isOpaque(android.view.View) -> e
android.support.v4.view.ViewCompatEclairMr1 -> android.support.v4.view.ag:
    boolean isOpaque(android.view.View) -> a
android.support.v4.view.ViewCompatGingerbread -> android.support.v4.view.ah:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompatHC -> android.support.v4.view.ai:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> a
android.support.v4.view.ViewCompatICS -> android.support.v4.view.aj:
    boolean canScrollHorizontally(android.view.View,int) -> a
android.support.v4.view.ViewCompatJB -> android.support.v4.view.ak:
    void postInvalidateOnAnimation(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
android.support.v4.view.ViewCompatJellybeanMr1 -> android.support.v4.view.al:
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> a
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    int[] LAYOUT_ATTRS -> a
    int mExpectedAdapterCount -> b
    java.util.Comparator COMPARATOR -> c
    android.view.animation.Interpolator sInterpolator -> d
    java.util.ArrayList mItems -> e
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> f
    android.graphics.Rect mTempRect -> g
    android.support.v4.view.PagerAdapter mAdapter -> h
    int mCurItem -> i
    int mRestoredCurItem -> j
    android.os.Parcelable mRestoredAdapterState -> k
    java.lang.ClassLoader mRestoredClassLoader -> l
    android.widget.Scroller mScroller -> m
    android.support.v4.view.ViewPager$PagerObserver mObserver -> n
    int mPageMargin -> o
    android.graphics.drawable.Drawable mMarginDrawable -> p
    int mTopPageBounds -> q
    int mBottomPageBounds -> r
    float mFirstOffset -> s
    float mLastOffset -> t
    int mChildWidthMeasureSpec -> u
    int mChildHeightMeasureSpec -> v
    boolean mInLayout -> w
    boolean mScrollingCacheEnabled -> x
    boolean mPopulatePending -> y
    int mOffscreenPageLimit -> z
    boolean mIsBeingDragged -> A
    boolean mIsUnableToDrag -> B
    int mDefaultGutterSize -> C
    int mGutterSize -> D
    int mTouchSlop -> E
    float mLastMotionX -> F
    float mLastMotionY -> G
    float mInitialMotionX -> H
    float mInitialMotionY -> I
    int mActivePointerId -> J
    android.view.VelocityTracker mVelocityTracker -> K
    int mMinimumVelocity -> L
    int mMaximumVelocity -> M
    int mFlingDistance -> N
    int mCloseEnough -> O
    boolean mFakeDragging -> P
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> Q
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> R
    boolean mFirstLayout -> S
    boolean mNeedCalculatePageOffsets -> T
    boolean mCalledSuper -> U
    int mDecorChildCount -> V
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> W
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> Z
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> aa
    android.support.v4.view.ViewPager$PageTransformer mPageTransformer -> ab
    java.lang.reflect.Method mSetChildrenDrawingOrderEnabled -> ac
    int mDrawingOrder -> ad
    java.util.ArrayList mDrawingOrderedChildren -> ae
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> af
    java.lang.Runnable mEndScrollRunnable -> ag
    int mScrollState -> ah
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setScrollState(int) -> setScrollState
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    void removeNonDecorViews() -> f
    android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> setOnAdapterChangeListener
    int getClientWidth() -> getClientWidth
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> a
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> a
    void setCurrentItemInternal(int,boolean,boolean,int) -> a
    void scrollToItem(int,boolean,int,boolean) -> a
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void setChildrenDrawingOrderEnabledCompat(boolean) -> setChildrenDrawingOrderEnabledCompat
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    int getOffscreenPageLimit() -> getOffscreenPageLimit
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    int getPageMargin() -> getPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    float distanceInfluenceForSnapDuration(float) -> a
    void smoothScrollTo(int,int,int) -> a
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> a
    void dataSetChanged() -> a
    void populate() -> b
    void populate(int) -> a
    void sortChildDrawingOrder() -> g
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> a
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> a
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> b
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> d
    void onPageScrolled(int,float,int) -> a
    void completeScroll(boolean) -> a
    boolean isGutterDrag(float,float) -> a
    void enableLayers(boolean) -> b
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean performDrag(float) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> h
    int determineTargetPage(int,float,int,int) -> a
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    void endDrag() -> i
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean canScrollHorizontally(int) -> canScrollHorizontally
    boolean canScroll(android.view.View,boolean,int,int,int) -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> a
    boolean arrowScroll(int) -> c
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> a
    boolean pageLeft() -> c
    boolean pageRight() -> d
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    int[] access$400() -> e
android.support.v4.view.ViewPager$1 -> android.support.v4.view.am:
    int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.an:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.ao:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.ap:
    java.lang.Object object -> a
    int position -> b
    boolean scrolling -> c
    float widthFactor -> d
    float offset -> e
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.aq:
    boolean isDecor -> a
    int gravity -> b
    float widthFactor -> c
    boolean needsMeasure -> d
    int position -> e
    int childIndex -> f
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.ar:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.as:
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
    void onPageScrollStateChanged(int) -> b
android.support.v4.view.ViewPager$PageTransformer -> android.support.v4.view.at:
    void transformPage(android.view.View,float) -> a
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.au:
    android.support.v4.view.ViewPager this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> a
    android.os.Parcelable adapterState -> b
    java.lang.ClassLoader loader -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.av:
    android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> b
    android.support.v4.view.ViewPager$SavedState[] newArray(int) -> b
    java.lang.Object[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
android.support.v4.view.ViewPager$ViewPositionComparator -> android.support.v4.view.aw:
    int compare(android.view.View,android.view.View) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.widget.DrawerLayout -> android.support.v4.widget.DrawerLayout:
    int[] LAYOUT_ATTRS -> a
    int mMinDrawerMargin -> b
    int mScrimColor -> c
    float mScrimOpacity -> d
    android.graphics.Paint mScrimPaint -> e
    android.support.v4.widget.ViewDragHelper mLeftDragger -> f
    android.support.v4.widget.ViewDragHelper mRightDragger -> g
    android.support.v4.widget.DrawerLayout$ViewDragCallback mLeftCallback -> h
    android.support.v4.widget.DrawerLayout$ViewDragCallback mRightCallback -> i
    int mDrawerState -> j
    boolean mInLayout -> k
    boolean mFirstLayout -> l
    int mLockModeLeft -> m
    int mLockModeRight -> n
    boolean mDisallowInterceptRequested -> o
    boolean mChildrenCanceledTouch -> p
    android.support.v4.widget.DrawerLayout$DrawerListener mListener -> q
    float mInitialMotionX -> r
    float mInitialMotionY -> s
    android.graphics.drawable.Drawable mShadowLeft -> t
    android.graphics.drawable.Drawable mShadowRight -> u
    void setScrimColor(int) -> setScrimColor
    void setDrawerListener(android.support.v4.widget.DrawerLayout$DrawerListener) -> setDrawerListener
    void setDrawerLockMode(int) -> setDrawerLockMode
    void setDrawerLockMode(int,int) -> a
    int getDrawerLockMode(android.view.View) -> a
    void updateDrawerState(int,int,android.view.View) -> a
    void dispatchOnDrawerClosed(android.view.View) -> b
    void dispatchOnDrawerOpened(android.view.View) -> c
    void dispatchOnDrawerSlide(android.view.View,float) -> a
    void setDrawerViewOffset(android.view.View,float) -> b
    float getDrawerViewOffset(android.view.View) -> d
    int getDrawerViewGravity(android.view.View) -> e
    boolean checkDrawerViewGravity(android.view.View,int) -> a
    android.view.View findOpenDrawer() -> a
    android.view.View findDrawerWithGravity(int) -> a
    java.lang.String gravityToString(int) -> b
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void requestLayout() -> requestLayout
    void computeScroll() -> computeScroll
    boolean hasOpaqueBackground(android.view.View) -> k
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    boolean isContentView(android.view.View) -> f
    boolean isDrawerView(android.view.View) -> g
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    void closeDrawers() -> b
    void closeDrawers(boolean) -> a
    void openDrawer(android.view.View) -> h
    void closeDrawer(android.view.View) -> i
    boolean isDrawerVisible(android.view.View) -> j
    boolean hasPeekingDrawer() -> d
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    boolean hasVisibleDrawer() -> e
    android.view.View findVisibleDrawer() -> f
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    int[] access$100() -> c
android.support.v4.widget.DrawerLayout$DrawerListener -> android.support.v4.widget.a:
    void onDrawerSlide(android.view.View,float) -> a
    void onDrawerOpened(android.view.View) -> a
    void onDrawerClosed(android.view.View) -> b
    void onDrawerStateChanged(int) -> a
android.support.v4.widget.DrawerLayout$LayoutParams -> android.support.v4.widget.b:
    int gravity -> a
    float onScreen -> b
    boolean isPeeking -> c
    boolean knownOpen -> d
android.support.v4.widget.DrawerLayout$SavedState -> android.support.v4.widget.DrawerLayout$SavedState:
    int openDrawerGravity -> a
    int lockModeLeft -> b
    int lockModeRight -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.DrawerLayout$SavedState$1 -> android.support.v4.widget.c:
    android.support.v4.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.widget.DrawerLayout$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.DrawerLayout$ViewDragCallback -> android.support.v4.widget.d:
    int mGravity -> b
    android.support.v4.widget.ViewDragHelper mDragger -> c
    java.lang.Runnable mPeekRunnable -> d
    android.support.v4.widget.DrawerLayout this$0 -> a
    void removeCallbacks() -> a
    boolean tryCaptureView(android.view.View,int) -> a
    void onViewDragStateChanged(int) -> a
    void onViewPositionChanged(android.view.View,int,int,int,int) -> a
    void onViewCaptured(android.view.View,int) -> b
    void closeOtherDrawer() -> b
    void onViewReleased(android.view.View,float,float) -> a
    void onEdgeTouched(int,int) -> a
    boolean onEdgeLock(int) -> b
    void onEdgeDragStarted(int,int) -> b
    int getViewHorizontalDragRange(android.view.View) -> a
    int clampViewPositionHorizontal(android.view.View,int,int) -> a
    int clampViewPositionVertical(android.view.View,int,int) -> b
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.widget.e:
    java.lang.Object mEdgeEffect -> a
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> b
    void setSize(int,int) -> a
    boolean isFinished() -> a
    void finish() -> b
    boolean onPull(float) -> a
    boolean onRelease() -> c
    boolean draw(android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.widget.f:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.widget.g:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.widget.h:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompatIcs -> android.support.v4.widget.i:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.ScrollerCompat -> android.support.v4.widget.j:
    java.lang.Object mScroller -> a
    android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl IMPL -> b
    boolean isFinished() -> a
    int getCurrX() -> b
    int getCurrY() -> c
    int getFinalX() -> d
    int getFinalY() -> e
    boolean computeScrollOffset() -> f
    void startScroll(int,int,int,int,int) -> a
    void abortAnimation() -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl -> android.support.v4.widget.k:
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase -> android.support.v4.widget.l:
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread -> android.support.v4.widget.m:
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs -> android.support.v4.widget.n:
android.support.v4.widget.ScrollerCompatGingerbread -> android.support.v4.widget.o:
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.SlidingPaneLayout -> android.support.v4.widget.SlidingPaneLayout:
    int mSliderFadeColor -> b
    int mCoveredFadeColor -> c
    android.graphics.drawable.Drawable mShadowDrawable -> d
    int mOverhangSize -> e
    boolean mCanSlide -> f
    android.view.View mSlideableView -> g
    float mSlideOffset -> h
    float mParallaxOffset -> i
    int mSlideRange -> j
    boolean mIsUnableToDrag -> k
    int mParallaxBy -> l
    float mInitialMotionX -> m
    float mInitialMotionY -> n
    android.support.v4.widget.SlidingPaneLayout$PanelSlideListener mPanelSlideListener -> o
    android.support.v4.widget.ViewDragHelper mDragHelper -> p
    boolean mPreservedOpenState -> q
    boolean mFirstLayout -> r
    android.graphics.Rect mTmpRect -> s
    java.util.ArrayList mPostedRunnables -> t
    android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl IMPL -> a
    void setParallaxDistance(int) -> setParallaxDistance
    int getParallaxDistance() -> getParallaxDistance
    void setSliderFadeColor(int) -> setSliderFadeColor
    int getSliderFadeColor() -> getSliderFadeColor
    void setCoveredFadeColor(int) -> setCoveredFadeColor
    int getCoveredFadeColor() -> getCoveredFadeColor
    void setPanelSlideListener(android.support.v4.widget.SlidingPaneLayout$PanelSlideListener) -> setPanelSlideListener
    void updateObscuredViewsVisibility(android.view.View) -> a
    void setAllChildrenVisible() -> a
    boolean viewIsOpaque(android.view.View) -> c
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean closePane(android.view.View,int) -> a
    boolean openPane(android.view.View,int) -> b
    boolean openPane() -> b
    boolean closePane() -> c
    boolean isOpen() -> d
    boolean isSlideable() -> e
    void dimChildView(android.view.View,float,int) -> a
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    void invalidateChildRegion(android.view.View) -> d
    boolean smoothSlideTo(float,int) -> a
    void computeScroll() -> computeScroll
    void setShadowDrawable(android.graphics.drawable.Drawable) -> setShadowDrawable
    void setShadowResource(int) -> setShadowResource
    void draw(android.graphics.Canvas) -> draw
    void parallaxOtherViews(float) -> a
    boolean isDimmed(android.view.View) -> b
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void access$900(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
    java.util.ArrayList access$1000(android.support.v4.widget.SlidingPaneLayout) -> a
android.support.v4.widget.SlidingPaneLayout$1 -> android.support.v4.widget.p:
android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable -> android.support.v4.widget.q:
    android.view.View mChildView -> a
    android.support.v4.widget.SlidingPaneLayout this$0 -> b
    void run() -> run
android.support.v4.widget.SlidingPaneLayout$LayoutParams -> android.support.v4.widget.r:
    int[] ATTRS -> e
    float weight -> a
    boolean slideable -> b
    boolean dimWhenOffset -> c
    android.graphics.Paint dimPaint -> d
android.support.v4.widget.SlidingPaneLayout$PanelSlideListener -> android.support.v4.widget.s:
android.support.v4.widget.SlidingPaneLayout$SavedState -> android.support.v4.widget.SlidingPaneLayout$SavedState:
    boolean isOpen -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.SlidingPaneLayout$SavedState$1 -> android.support.v4.widget.t:
    android.support.v4.widget.SlidingPaneLayout$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.widget.SlidingPaneLayout$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl -> android.support.v4.widget.u:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase -> android.support.v4.widget.v:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB -> android.support.v4.widget.w:
    java.lang.reflect.Method mGetDisplayList -> a
    java.lang.reflect.Field mRecreateDisplayList -> b
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1 -> android.support.v4.widget.x:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.ViewDragHelper -> android.support.v4.widget.y:
    int mDragState -> a
    int mTouchSlop -> b
    int mActivePointerId -> c
    float[] mInitialMotionX -> d
    float[] mInitialMotionY -> e
    float[] mLastMotionX -> f
    float[] mLastMotionY -> g
    int[] mInitialEdgesTouched -> h
    int[] mEdgeDragsInProgress -> i
    int[] mEdgeDragsLocked -> j
    int mPointersDown -> k
    android.view.VelocityTracker mVelocityTracker -> l
    float mMaxVelocity -> m
    float mMinVelocity -> n
    int mEdgeSize -> o
    int mTrackingEdges -> p
    android.support.v4.widget.ScrollerCompat mScroller -> q
    android.support.v4.widget.ViewDragHelper$Callback mCallback -> r
    android.view.View mCapturedView -> s
    boolean mReleaseInProgress -> t
    android.view.ViewGroup mParentView -> u
    android.view.animation.Interpolator sInterpolator -> v
    java.lang.Runnable mSetIdleRunnable -> w
    int getViewDragState() -> a
    int getEdgeSize() -> b
    void captureChildView(android.view.View,int) -> a
    android.view.View getCapturedView() -> c
    int getTouchSlop() -> d
    void cancel() -> e
    void abort() -> f
    boolean smoothSlideViewTo(android.view.View,int,int) -> a
    boolean settleCapturedViewAt(int,int) -> a
    boolean forceSettleCapturedViewAt(int,int,int,int) -> a
    int computeSettleDuration(android.view.View,int,int,int,int) -> a
    int computeAxisDuration(int,int,int) -> a
    int clampMag(int,int,int) -> b
    float clampMag(float,float,float) -> a
    float distanceInfluenceForSnapDuration(float) -> a
    boolean continueSettling(boolean) -> a
    void dispatchViewReleased(float,float) -> a
    void clearMotionHistory() -> g
    void clearMotionHistory(int) -> d
    void ensureMotionHistorySizeForId(int) -> e
    void saveInitialMotion(float,float,int) -> a
    void saveLastMotion(android.view.MotionEvent) -> c
    boolean isPointerDown(int) -> a
    void setDragState(int) -> b
    boolean tryCaptureViewForDrag(android.view.View,int) -> b
    boolean shouldInterceptTouchEvent(android.view.MotionEvent) -> a
    void processTouchEvent(android.view.MotionEvent) -> b
    void reportNewEdgeDrags(float,float,int) -> b
    boolean checkNewEdgeDrag(float,float,int,int) -> a
    boolean checkTouchSlop(android.view.View,float,float) -> a
    boolean checkTouchSlop(int) -> c
    boolean checkTouchSlop(int,int) -> b
    void releaseViewForPointerUp() -> h
    void dragTo(int,int,int,int) -> b
    boolean isCapturedViewUnder(int,int) -> c
    boolean isViewUnder(android.view.View,int,int) -> b
    android.view.View findTopChildUnder(int,int) -> d
    int getEdgesTouched(int,int) -> e
android.support.v4.widget.ViewDragHelper$1 -> android.support.v4.widget.z:
    float getInterpolation(float) -> getInterpolation
android.support.v4.widget.ViewDragHelper$Callback -> android.support.v4.widget.aa:
    void onViewDragStateChanged(int) -> a
    void onViewPositionChanged(android.view.View,int,int,int,int) -> a
    void onViewCaptured(android.view.View,int) -> b
    void onViewReleased(android.view.View,float,float) -> a
    void onEdgeTouched(int,int) -> a
    boolean onEdgeLock(int) -> b
    void onEdgeDragStarted(int,int) -> b
    int getOrderedChildIndex(int) -> c
    int getViewHorizontalDragRange(android.view.View) -> a
    int getViewVerticalDragRange(android.view.View) -> b
    boolean tryCaptureView(android.view.View,int) -> a
    int clampViewPositionHorizontal(android.view.View,int,int) -> a
    int clampViewPositionVertical(android.view.View,int,int) -> b
com.torusworks.android.db.PreferencePersister -> com.torusworks.a.a.a:
    int getInt(android.content.Context,java.lang.String,int) -> a
    boolean putInt(android.content.Context,java.lang.String,int) -> b
    java.lang.String getString(android.content.Context,java.lang.String,java.lang.String) -> a
    boolean putString(android.content.Context,java.lang.String,java.lang.String) -> b
    boolean getBoolean(android.content.Context,java.lang.String,boolean) -> a
    boolean putBoolean(android.content.Context,java.lang.String,boolean) -> b
    java.lang.String[] getArray(android.content.Context,java.lang.String,java.lang.String) -> c
    boolean putInArray(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> a
com.torusworks.android.shoutcast.OnFetchComplete -> com.torusworks.a.b.a:
    void handleFetchComplete(com.torusworks.android.shoutcast.StreamMetaDataReader) -> a
com.torusworks.android.shoutcast.StreamMetaDataReader -> com.torusworks.a.b.b:
    java.lang.StringBuilder rawHtmlResponse -> a
    java.lang.String responseBody -> b
    java.lang.String[] streamInfo -> c
    com.torusworks.android.shoutcast.OnFetchComplete onFetchComplete -> d
    java.lang.String streamUrl -> e
    java.lang.String fetchSevenHtml() -> a
    java.lang.String getArtistAndSong() -> b
    void setOnFetchComplete(com.torusworks.android.shoutcast.OnFetchComplete) -> a
    void run() -> run
com.torusworks.android.visualizers.AudioOutVisualizer -> com.torusworks.a.c.a:
    android.media.audiofx.Visualizer mVisualizer -> a
    int[] formattedVizData -> b
    byte[] vizBuffer -> c
    int DEFAULT_CAPTURE_SIZE -> d
    int[] getFormattedData(byte[]) -> a
    double getRms() -> a
    void release() -> b
com.torusworks.game.panel.GamePanel -> com.torusworks.b.a.a:
    void render(android.graphics.Canvas) -> a
    void update() -> a
    void setAvgFps(java.lang.String) -> setAvgFps
com.torusworks.game.panel.MainThread -> com.torusworks.b.a.b:
    java.lang.String TAG -> a
    java.text.DecimalFormat df -> b
    long lastStatusStore -> c
    long statusIntervalTimer -> d
    long totalFramesSkipped -> e
    long framesSkippedPerStatCycle -> f
    int frameCountPerStatCycle -> g
    long totalFrameCount -> h
    double[] fpsStore -> i
    long statsCount -> j
    double averageFps -> k
    android.view.SurfaceHolder surfaceHolder -> l
    com.torusworks.game.panel.GamePanel gamePanel -> m
    boolean running -> n
    void setRunning(boolean) -> a
    void run() -> run
    void storeStats() -> a
    void initTimingElements() -> b
com.torusworks.game.panel.SurfaceViewGamePanel -> com.torusworks.b.a.c:
    java.lang.String TAG -> a
    com.torusworks.game.panel.MainThread thread -> b
    com.torusworks.skroller.Skroller skroller -> c
    java.lang.String avgFps -> d
    void setAvgFps(java.lang.String) -> setAvgFps
    void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void render(android.graphics.Canvas) -> a
    void update() -> a
    void displayFps(android.graphics.Canvas,java.lang.String) -> a
    boolean onDown(android.view.MotionEvent) -> onDown
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    void onLongPress(android.view.MotionEvent) -> onLongPress
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    void onShowPress(android.view.MotionEvent) -> onShowPress
    boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
com.torusworks.scriptengine.JavaScriptEngine -> com.torusworks.c.a:
    org.mozilla.javascript.Context cx -> a
    org.mozilla.javascript.Scriptable scope -> b
    java.lang.String execute(java.lang.String) -> a
com.torusworks.skroller.MainActivity -> com.torusworks.skroller.MainActivity:
    int colorRed -> a
    int colorGreen -> b
    int colorBlue -> c
    void onCreate(android.os.Bundle) -> onCreate
    void setupHistory(int,java.lang.String,java.lang.String) -> a
    void updateColor() -> a
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    void onClick(android.view.View) -> onClick
    void launchSkrollerActivity() -> b
    void access$0(com.torusworks.skroller.MainActivity) -> a
    void access$1(com.torusworks.skroller.MainActivity,int) -> a
    void access$2(com.torusworks.skroller.MainActivity,int) -> b
    void access$3(com.torusworks.skroller.MainActivity,int) -> c
    void access$4(com.torusworks.skroller.MainActivity) -> b
com.torusworks.skroller.MainActivity$1 -> com.torusworks.skroller.a:
    com.torusworks.skroller.MainActivity this$0 -> a
    boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
com.torusworks.skroller.MainActivity$2 -> com.torusworks.skroller.b:
    com.torusworks.skroller.MainActivity this$0 -> a
    void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
    void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
com.torusworks.skroller.MainActivity$3 -> com.torusworks.skroller.c:
    com.torusworks.skroller.MainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.torusworks.skroller.Skroller -> com.torusworks.skroller.d:
    java.lang.String TAG -> a
    boolean touched -> b
    com.torusworks.skroller.model.SkrollContent content -> c
    boolean clean_start -> d
    int idx -> e
    int pathOffsetX -> f
    com.torusworks.skroller.model.TorusVisualizer mVisualizer -> g
    android.view.SurfaceView view -> h
    int touchIdx -> i
    int touchX -> j
    com.torusworks.android.shoutcast.StreamMetaDataReader streamMetaDataReader -> k
    java.lang.String displayMessage -> l
    com.torusworks.scriptengine.JavaScriptEngine jse -> m
    java.lang.String lastDisplayMessage -> n
    android.graphics.Path pathBackText -> o
    android.graphics.Path pathFrontText -> p
    int lastHeight -> q
    boolean isTouched() -> a
    void setTouched(boolean,int) -> a
    void draw(android.graphics.Canvas) -> a
    void updateDisplayMesage() -> e
    void backgroundPollStreamInfo() -> b
    void update() -> c
    void handleActionDown(int,int) -> a
    void release() -> d
    void move(int,int) -> b
    void handleFetchComplete(com.torusworks.android.shoutcast.StreamMetaDataReader) -> a
com.torusworks.skroller.SkrollerActivity -> com.torusworks.skroller.SkrollerActivity:
    java.lang.String TAG -> b
    com.torusworks.skroller.model.TorusVisualizer mVisualizer -> c
    android.media.MediaPlayer mp -> d
    com.torusworks.skroller.model.SkrollContent content -> a
    int PERCENT_BUFFER -> e
    void onCreate(android.os.Bundle) -> onCreate
    void startStream() -> b
    void onDestroy() -> onDestroy
    void onStop() -> onStop
    void onStart() -> onStart
    void onRestart() -> onRestart
    void onResume() -> onResume
    void onPause() -> onPause
    java.lang.String access$0() -> a
com.torusworks.skroller.SkrollerActivity$1 -> com.torusworks.skroller.e:
    com.torusworks.skroller.SkrollerActivity this$0 -> a
    boolean onError(android.media.MediaPlayer,int,int) -> onError
com.torusworks.skroller.SkrollerActivity$2 -> com.torusworks.skroller.f:
    com.torusworks.skroller.SkrollerActivity this$0 -> a
    void onCompletion(android.media.MediaPlayer) -> onCompletion
com.torusworks.skroller.SkrollerActivity$3 -> com.torusworks.skroller.g:
    com.torusworks.skroller.SkrollerActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.torusworks.skroller.SkrollerActivity$4 -> com.torusworks.skroller.h:
    com.torusworks.skroller.SkrollerActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.torusworks.skroller.model.SkrollContent -> com.torusworks.skroller.a.a:
    double velocity -> a
    java.lang.String message -> b
    int frontTextColor -> c
    int backTextColor -> d
    int frontTextAlpha -> e
    int backTextAlpha -> f
    double backTextRadiusMultiplier -> g
    java.lang.String streamURL -> h
    java.util.Queue messageQueue -> i
    void pushMessage(java.lang.String) -> a
    java.lang.String popMessage() -> a
    java.lang.String getStreamURL() -> b
    void setStreamURL(java.lang.String) -> b
    double getVelocity() -> c
    int getFrontTextColor() -> d
    void setFrontTextColor(int) -> a
    int getBackTextColor() -> e
    int getFrontTextAlpha() -> f
    int getBackTextAlpha() -> g
    java.lang.String getMessage() -> h
com.torusworks.skroller.model.TorusVisualizer -> com.torusworks.skroller.a.b:
    double getRms() -> a
    void release() -> b
org.mozilla.classfile.ByteCode -> org.mozilla.classfile.ByteCode:
    int NOP -> NOP
    int ACONST_NULL -> ACONST_NULL
    int ICONST_M1 -> ICONST_M1
    int ICONST_0 -> ICONST_0
    int ICONST_1 -> ICONST_1
    int ICONST_2 -> ICONST_2
    int ICONST_3 -> ICONST_3
    int ICONST_4 -> ICONST_4
    int ICONST_5 -> ICONST_5
    int LCONST_0 -> LCONST_0
    int LCONST_1 -> LCONST_1
    int FCONST_0 -> FCONST_0
    int FCONST_1 -> FCONST_1
    int FCONST_2 -> FCONST_2
    int DCONST_0 -> DCONST_0
    int DCONST_1 -> DCONST_1
    int BIPUSH -> BIPUSH
    int SIPUSH -> SIPUSH
    int LDC -> LDC
    int LDC_W -> LDC_W
    int LDC2_W -> LDC2_W
    int ILOAD -> ILOAD
    int LLOAD -> LLOAD
    int FLOAD -> FLOAD
    int DLOAD -> DLOAD
    int ALOAD -> ALOAD
    int ILOAD_0 -> ILOAD_0
    int ILOAD_1 -> ILOAD_1
    int ILOAD_2 -> ILOAD_2
    int ILOAD_3 -> ILOAD_3
    int LLOAD_0 -> LLOAD_0
    int LLOAD_1 -> LLOAD_1
    int LLOAD_2 -> LLOAD_2
    int LLOAD_3 -> LLOAD_3
    int FLOAD_0 -> FLOAD_0
    int FLOAD_1 -> FLOAD_1
    int FLOAD_2 -> FLOAD_2
    int FLOAD_3 -> FLOAD_3
    int DLOAD_0 -> DLOAD_0
    int DLOAD_1 -> DLOAD_1
    int DLOAD_2 -> DLOAD_2
    int DLOAD_3 -> DLOAD_3
    int ALOAD_0 -> ALOAD_0
    int ALOAD_1 -> ALOAD_1
    int ALOAD_2 -> ALOAD_2
    int ALOAD_3 -> ALOAD_3
    int IALOAD -> IALOAD
    int LALOAD -> LALOAD
    int FALOAD -> FALOAD
    int DALOAD -> DALOAD
    int AALOAD -> AALOAD
    int BALOAD -> BALOAD
    int CALOAD -> CALOAD
    int SALOAD -> SALOAD
    int ISTORE -> ISTORE
    int LSTORE -> LSTORE
    int FSTORE -> FSTORE
    int DSTORE -> DSTORE
    int ASTORE -> ASTORE
    int ISTORE_0 -> ISTORE_0
    int ISTORE_1 -> ISTORE_1
    int ISTORE_2 -> ISTORE_2
    int ISTORE_3 -> ISTORE_3
    int LSTORE_0 -> LSTORE_0
    int LSTORE_1 -> LSTORE_1
    int LSTORE_2 -> LSTORE_2
    int LSTORE_3 -> LSTORE_3
    int FSTORE_0 -> FSTORE_0
    int FSTORE_1 -> FSTORE_1
    int FSTORE_2 -> FSTORE_2
    int FSTORE_3 -> FSTORE_3
    int DSTORE_0 -> DSTORE_0
    int DSTORE_1 -> DSTORE_1
    int DSTORE_2 -> DSTORE_2
    int DSTORE_3 -> DSTORE_3
    int ASTORE_0 -> ASTORE_0
    int ASTORE_1 -> ASTORE_1
    int ASTORE_2 -> ASTORE_2
    int ASTORE_3 -> ASTORE_3
    int IASTORE -> IASTORE
    int LASTORE -> LASTORE
    int FASTORE -> FASTORE
    int DASTORE -> DASTORE
    int AASTORE -> AASTORE
    int BASTORE -> BASTORE
    int CASTORE -> CASTORE
    int SASTORE -> SASTORE
    int POP -> POP
    int POP2 -> POP2
    int DUP -> DUP
    int DUP_X1 -> DUP_X1
    int DUP_X2 -> DUP_X2
    int DUP2 -> DUP2
    int DUP2_X1 -> DUP2_X1
    int DUP2_X2 -> DUP2_X2
    int SWAP -> SWAP
    int IADD -> IADD
    int LADD -> LADD
    int FADD -> FADD
    int DADD -> DADD
    int ISUB -> ISUB
    int LSUB -> LSUB
    int FSUB -> FSUB
    int DSUB -> DSUB
    int IMUL -> IMUL
    int LMUL -> LMUL
    int FMUL -> FMUL
    int DMUL -> DMUL
    int IDIV -> IDIV
    int LDIV -> LDIV
    int FDIV -> FDIV
    int DDIV -> DDIV
    int IREM -> IREM
    int LREM -> LREM
    int FREM -> FREM
    int DREM -> DREM
    int INEG -> INEG
    int LNEG -> LNEG
    int FNEG -> FNEG
    int DNEG -> DNEG
    int ISHL -> ISHL
    int LSHL -> LSHL
    int ISHR -> ISHR
    int LSHR -> LSHR
    int IUSHR -> IUSHR
    int LUSHR -> LUSHR
    int IAND -> IAND
    int LAND -> LAND
    int IOR -> IOR
    int LOR -> LOR
    int IXOR -> IXOR
    int LXOR -> LXOR
    int IINC -> IINC
    int I2L -> I2L
    int I2F -> I2F
    int I2D -> I2D
    int L2I -> L2I
    int L2F -> L2F
    int L2D -> L2D
    int F2I -> F2I
    int F2L -> F2L
    int F2D -> F2D
    int D2I -> D2I
    int D2L -> D2L
    int D2F -> D2F
    int I2B -> I2B
    int I2C -> I2C
    int I2S -> I2S
    int LCMP -> LCMP
    int FCMPL -> FCMPL
    int FCMPG -> FCMPG
    int DCMPL -> DCMPL
    int DCMPG -> DCMPG
    int IFEQ -> IFEQ
    int IFNE -> IFNE
    int IFLT -> IFLT
    int IFGE -> IFGE
    int IFGT -> IFGT
    int IFLE -> IFLE
    int IF_ICMPEQ -> IF_ICMPEQ
    int IF_ICMPNE -> IF_ICMPNE
    int IF_ICMPLT -> IF_ICMPLT
    int IF_ICMPGE -> IF_ICMPGE
    int IF_ICMPGT -> IF_ICMPGT
    int IF_ICMPLE -> IF_ICMPLE
    int IF_ACMPEQ -> IF_ACMPEQ
    int IF_ACMPNE -> IF_ACMPNE
    int GOTO -> GOTO
    int JSR -> JSR
    int RET -> RET
    int TABLESWITCH -> TABLESWITCH
    int LOOKUPSWITCH -> LOOKUPSWITCH
    int IRETURN -> IRETURN
    int LRETURN -> LRETURN
    int FRETURN -> FRETURN
    int DRETURN -> DRETURN
    int ARETURN -> ARETURN
    int RETURN -> RETURN
    int GETSTATIC -> GETSTATIC
    int PUTSTATIC -> PUTSTATIC
    int GETFIELD -> GETFIELD
    int PUTFIELD -> PUTFIELD
    int INVOKEVIRTUAL -> INVOKEVIRTUAL
    int INVOKESPECIAL -> INVOKESPECIAL
    int INVOKESTATIC -> INVOKESTATIC
    int INVOKEINTERFACE -> INVOKEINTERFACE
    int NEW -> NEW
    int NEWARRAY -> NEWARRAY
    int ANEWARRAY -> ANEWARRAY
    int ARRAYLENGTH -> ARRAYLENGTH
    int ATHROW -> ATHROW
    int CHECKCAST -> CHECKCAST
    int INSTANCEOF -> INSTANCEOF
    int MONITORENTER -> MONITORENTER
    int MONITOREXIT -> MONITOREXIT
    int WIDE -> WIDE
    int MULTIANEWARRAY -> MULTIANEWARRAY
    int IFNULL -> IFNULL
    int IFNONNULL -> IFNONNULL
    int GOTO_W -> GOTO_W
    int JSR_W -> JSR_W
    int BREAKPOINT -> BREAKPOINT
    int IMPDEP1 -> IMPDEP1
    int IMPDEP2 -> IMPDEP2
    byte T_BOOLEAN -> T_BOOLEAN
    byte T_CHAR -> T_CHAR
    byte T_FLOAT -> T_FLOAT
    byte T_DOUBLE -> T_DOUBLE
    byte T_BYTE -> T_BYTE
    byte T_SHORT -> T_SHORT
    byte T_INT -> T_INT
    byte T_LONG -> T_LONG
org.mozilla.classfile.ClassFileField -> org.mozilla.classfile.ClassFileField:
    short itsNameIndex -> itsNameIndex
    short itsTypeIndex -> itsTypeIndex
    short itsFlags -> itsFlags
    boolean itsHasAttributes -> itsHasAttributes
    short itsAttr1 -> itsAttr1
    short itsAttr2 -> itsAttr2
    short itsAttr3 -> itsAttr3
    int itsIndex -> itsIndex
    void setAttributes(short,short,short,int) -> setAttributes
    int write(byte[],int) -> write
    int getWriteSize() -> getWriteSize
org.mozilla.classfile.ClassFileMethod -> org.mozilla.classfile.ClassFileMethod:
    java.lang.String itsName -> itsName
    java.lang.String itsType -> itsType
    short itsNameIndex -> itsNameIndex
    short itsTypeIndex -> itsTypeIndex
    short itsFlags -> itsFlags
    byte[] itsCodeAttribute -> itsCodeAttribute
    void setCodeAttribute(byte[]) -> setCodeAttribute
    int write(byte[],int) -> write
    int getWriteSize() -> getWriteSize
    java.lang.String getName() -> getName
    java.lang.String getType() -> getType
    short getFlags() -> getFlags
org.mozilla.classfile.ClassFileWriter -> org.mozilla.classfile.ClassFileWriter:
    short ACC_PUBLIC -> ACC_PUBLIC
    short ACC_PRIVATE -> ACC_PRIVATE
    short ACC_PROTECTED -> ACC_PROTECTED
    short ACC_STATIC -> ACC_STATIC
    short ACC_FINAL -> ACC_FINAL
    short ACC_SUPER -> ACC_SUPER
    short ACC_SYNCHRONIZED -> ACC_SYNCHRONIZED
    short ACC_VOLATILE -> ACC_VOLATILE
    short ACC_TRANSIENT -> ACC_TRANSIENT
    short ACC_NATIVE -> ACC_NATIVE
    short ACC_ABSTRACT -> ACC_ABSTRACT
    int[] itsSuperBlockStarts -> itsSuperBlockStarts
    int itsSuperBlockStartsTop -> itsSuperBlockStartsTop
    int SuperBlockStartsSize -> SuperBlockStartsSize
    org.mozilla.javascript.UintMap itsJumpFroms -> itsJumpFroms
    int LineNumberTableSize -> LineNumberTableSize
    int ExceptionTableSize -> ExceptionTableSize
    int MajorVersion -> MajorVersion
    int MinorVersion -> MinorVersion
    boolean GenerateStackMap -> GenerateStackMap
    int FileHeaderConstant -> FileHeaderConstant
    boolean DEBUGSTACK -> DEBUGSTACK
    boolean DEBUGLABELS -> DEBUGLABELS
    boolean DEBUGCODE -> DEBUGCODE
    java.lang.String generatedClassName -> generatedClassName
    org.mozilla.classfile.ExceptionTableEntry[] itsExceptionTable -> itsExceptionTable
    int itsExceptionTableTop -> itsExceptionTableTop
    int[] itsLineNumberTable -> itsLineNumberTable
    int itsLineNumberTableTop -> itsLineNumberTableTop
    byte[] itsCodeBuffer -> itsCodeBuffer
    int itsCodeBufferTop -> itsCodeBufferTop
    org.mozilla.classfile.ConstantPool itsConstantPool -> itsConstantPool
    org.mozilla.classfile.ClassFileMethod itsCurrentMethod -> itsCurrentMethod
    short itsStackTop -> itsStackTop
    short itsMaxStack -> itsMaxStack
    short itsMaxLocals -> itsMaxLocals
    org.mozilla.javascript.ObjArray itsMethods -> itsMethods
    org.mozilla.javascript.ObjArray itsFields -> itsFields
    org.mozilla.javascript.ObjArray itsInterfaces -> itsInterfaces
    short itsFlags -> itsFlags
    short itsThisClassIndex -> itsThisClassIndex
    short itsSuperClassIndex -> itsSuperClassIndex
    short itsSourceFileNameIndex -> itsSourceFileNameIndex
    int MIN_LABEL_TABLE_SIZE -> MIN_LABEL_TABLE_SIZE
    int[] itsLabelTable -> itsLabelTable
    int itsLabelTableTop -> itsLabelTableTop
    int MIN_FIXUP_TABLE_SIZE -> MIN_FIXUP_TABLE_SIZE
    long[] itsFixupTable -> itsFixupTable
    int itsFixupTableTop -> itsFixupTableTop
    org.mozilla.javascript.ObjArray itsVarDescriptors -> itsVarDescriptors
    char[] tmpCharBuffer -> tmpCharBuffer
    java.lang.String getClassName() -> getClassName
    void addInterface(java.lang.String) -> addInterface
    void setFlags(short) -> setFlags
    java.lang.String getSlashedForm(java.lang.String) -> getSlashedForm
    java.lang.String classNameToSignature(java.lang.String) -> classNameToSignature
    void addField(java.lang.String,java.lang.String,short) -> addField
    void addField(java.lang.String,java.lang.String,short,int) -> addField
    void addField(java.lang.String,java.lang.String,short,long) -> addField
    void addField(java.lang.String,java.lang.String,short,double) -> addField
    void addVariableDescriptor(java.lang.String,java.lang.String,int,int) -> addVariableDescriptor
    void startMethod(java.lang.String,java.lang.String,short) -> startMethod
    void stopMethod(short) -> stopMethod
    void add(int) -> add
    void add(int,int) -> add
    void addLoadConstant(int) -> addLoadConstant
    void addLoadConstant(long) -> addLoadConstant
    void addLoadConstant(float) -> addLoadConstant
    void addLoadConstant(double) -> addLoadConstant
    void addLoadConstant(java.lang.String) -> addLoadConstant
    void add(int,int,int) -> add
    void add(int,java.lang.String) -> add
    void add(int,java.lang.String,java.lang.String,java.lang.String) -> add
    void addInvoke(int,java.lang.String,java.lang.String,java.lang.String) -> addInvoke
    void addPush(int) -> addPush
    void addPush(boolean) -> addPush
    void addPush(long) -> addPush
    void addPush(double) -> addPush
    void addPush(java.lang.String) -> addPush
    boolean isUnderStringSizeLimit(java.lang.String) -> isUnderStringSizeLimit
    void addIStore(int) -> addIStore
    void addLStore(int) -> addLStore
    void addFStore(int) -> addFStore
    void addDStore(int) -> addDStore
    void addAStore(int) -> addAStore
    void addILoad(int) -> addILoad
    void addLLoad(int) -> addLLoad
    void addFLoad(int) -> addFLoad
    void addDLoad(int) -> addDLoad
    void addALoad(int) -> addALoad
    void addLoadThis() -> addLoadThis
    void xop(int,int,int) -> xop
    int addTableSwitch(int,int) -> addTableSwitch
    void markTableSwitchDefault(int) -> markTableSwitchDefault
    void markTableSwitchCase(int,int) -> markTableSwitchCase
    void markTableSwitchCase(int,int,int) -> markTableSwitchCase
    void setTableSwitchJump(int,int,int) -> setTableSwitchJump
    int acquireLabel() -> acquireLabel
    void markLabel(int) -> markLabel
    void markLabel(int,short) -> markLabel
    void markHandler(int) -> markHandler
    int getLabelPC(int) -> getLabelPC
    void addLabelFixup(int,int) -> addLabelFixup
    void fixLabelGotos() -> fixLabelGotos
    int getCurrentCodeOffset() -> getCurrentCodeOffset
    short getStackTop() -> getStackTop
    void setStackTop(short) -> setStackTop
    void adjustStackTop(int) -> adjustStackTop
    void addToCodeBuffer(int) -> addToCodeBuffer
    void addToCodeInt16(int) -> addToCodeInt16
    int addReservedCodeSpace(int) -> addReservedCodeSpace
    void addExceptionHandler(int,int,int,java.lang.String) -> addExceptionHandler
    void addLineNumberEntry(short) -> addLineNumberEntry
    char arrayTypeToName(int) -> arrayTypeToName
    java.lang.String classDescriptorToInternalName(java.lang.String) -> classDescriptorToInternalName
    java.lang.String descriptorToInternalName(java.lang.String) -> descriptorToInternalName
    int[] createInitialLocals() -> createInitialLocals
    void write(java.io.OutputStream) -> write
    int getWriteSize() -> getWriteSize
    byte[] toByteArray() -> toByteArray
    int putInt64(long,byte[],int) -> putInt64
    void badStack(int) -> badStack
    int sizeOfParameters(java.lang.String) -> sizeOfParameters
    int putInt16(int,byte[],int) -> putInt16
    int putInt32(int,byte[],int) -> putInt32
    int opcodeLength(int,boolean) -> opcodeLength
    int opcodeCount(int) -> opcodeCount
    int stackChange(int) -> stackChange
    java.lang.String bytecodeStr(int) -> bytecodeStr
    char[] getCharBuffer(int) -> getCharBuffer
    void addSuperBlockStart(int) -> addSuperBlockStart
    void finalizeSuperBlockStarts() -> finalizeSuperBlockStarts
    int access$000(org.mozilla.classfile.ClassFileWriter) -> access$000
    int[] access$100(org.mozilla.classfile.ClassFileWriter) -> access$100
    int[] access$200(org.mozilla.classfile.ClassFileWriter) -> access$200
    int access$300(org.mozilla.classfile.ClassFileWriter) -> access$300
    int access$400(org.mozilla.classfile.ClassFileWriter) -> access$400
    org.mozilla.classfile.ExceptionTableEntry[] access$500(org.mozilla.classfile.ClassFileWriter) -> access$500
    org.mozilla.javascript.UintMap access$600(org.mozilla.classfile.ClassFileWriter) -> access$600
    byte[] access$700(org.mozilla.classfile.ClassFileWriter) -> access$700
    org.mozilla.classfile.ConstantPool access$800(org.mozilla.classfile.ClassFileWriter) -> access$800
    int access$410(org.mozilla.classfile.ClassFileWriter) -> access$410
    char access$900(int) -> access$900
    int access$1000(java.lang.String) -> access$1000
    short access$1100(org.mozilla.classfile.ClassFileWriter) -> access$1100
    java.lang.String access$1200(java.lang.String) -> access$1200
    short access$1300(org.mozilla.classfile.ClassFileWriter) -> access$1300
    short access$1400(org.mozilla.classfile.ClassFileWriter) -> access$1400
org.mozilla.classfile.ClassFileWriter$ClassFileFormatException -> org.mozilla.classfile.ClassFileWriter$ClassFileFormatException:
    long serialVersionUID -> serialVersionUID
org.mozilla.classfile.ClassFileWriter$StackMapTable -> org.mozilla.classfile.ClassFileWriter$StackMapTable:
    int[] locals -> locals
    int localsTop -> localsTop
    int[] stack -> stack
    int stackTop -> stackTop
    org.mozilla.classfile.SuperBlock[] workList -> workList
    int workListTop -> workListTop
    org.mozilla.classfile.SuperBlock[] superBlocks -> superBlocks
    org.mozilla.classfile.SuperBlock[] superBlockDeps -> superBlockDeps
    byte[] rawStackMap -> rawStackMap
    int rawStackMapTop -> rawStackMapTop
    boolean wide -> wide
    boolean DEBUGSTACKMAP -> DEBUGSTACKMAP
    org.mozilla.classfile.ClassFileWriter this$0 -> this$0
    void generate() -> generate
    org.mozilla.classfile.SuperBlock getSuperBlockFromOffset(int) -> getSuperBlockFromOffset
    boolean isSuperBlockEnd(int) -> isSuperBlockEnd
    org.mozilla.classfile.SuperBlock[] getSuperBlockDependencies() -> getSuperBlockDependencies
    org.mozilla.classfile.SuperBlock getBranchTarget(int) -> getBranchTarget
    boolean isBranch(int) -> isBranch
    int getOperand(int) -> getOperand
    int getOperand(int,int) -> getOperand
    void verify() -> verify
    void killSuperBlock(org.mozilla.classfile.SuperBlock) -> killSuperBlock
    void executeWorkList() -> executeWorkList
    void executeBlock(org.mozilla.classfile.SuperBlock) -> executeBlock
    void flowInto(org.mozilla.classfile.SuperBlock) -> flowInto
    void addToWorkList(org.mozilla.classfile.SuperBlock) -> addToWorkList
    int execute(int) -> execute
    void executeALoad(int) -> executeALoad
    void executeAStore(int) -> executeAStore
    void executeStore(int,int) -> executeStore
    void initializeTypeInfo(int,int) -> initializeTypeInfo
    void initializeTypeInfo(int,int,int[],int) -> initializeTypeInfo
    int getLocal(int) -> getLocal
    void setLocal(int,int) -> setLocal
    void push(int) -> push
    int pop() -> pop
    void push2(long) -> push2
    long pop2() -> pop2
    void clearStack() -> clearStack
    int computeWriteSize() -> computeWriteSize
    int write(byte[],int) -> write
    void computeRawStackMap() -> computeRawStackMap
    int getWorstCaseWriteSize() -> getWorstCaseWriteSize
    void writeSameFrame(int[],int) -> writeSameFrame
    void writeSameLocalsOneStackItemFrame(int[],int[],int) -> writeSameLocalsOneStackItemFrame
    void writeFullFrame(int[],int[],int) -> writeFullFrame
    void writeAppendFrame(int[],int,int) -> writeAppendFrame
    void writeChopFrame(int,int) -> writeChopFrame
    int writeTypes(int[]) -> writeTypes
    int writeTypes(int[],int) -> writeTypes
    int writeType(int) -> writeType
org.mozilla.classfile.ConstantPool -> org.mozilla.classfile.ConstantPool:
    int ConstantPoolSize -> ConstantPoolSize
    byte CONSTANT_Class -> CONSTANT_Class
    byte CONSTANT_Fieldref -> CONSTANT_Fieldref
    byte CONSTANT_Methodref -> CONSTANT_Methodref
    byte CONSTANT_InterfaceMethodref -> CONSTANT_InterfaceMethodref
    byte CONSTANT_String -> CONSTANT_String
    byte CONSTANT_Integer -> CONSTANT_Integer
    byte CONSTANT_Float -> CONSTANT_Float
    byte CONSTANT_Long -> CONSTANT_Long
    byte CONSTANT_Double -> CONSTANT_Double
    byte CONSTANT_NameAndType -> CONSTANT_NameAndType
    byte CONSTANT_Utf8 -> CONSTANT_Utf8
    org.mozilla.classfile.ClassFileWriter cfw -> cfw
    int MAX_UTF_ENCODING_SIZE -> MAX_UTF_ENCODING_SIZE
    org.mozilla.javascript.UintMap itsStringConstHash -> itsStringConstHash
    org.mozilla.javascript.ObjToIntMap itsUtf8Hash -> itsUtf8Hash
    org.mozilla.javascript.ObjToIntMap itsFieldRefHash -> itsFieldRefHash
    org.mozilla.javascript.ObjToIntMap itsMethodRefHash -> itsMethodRefHash
    org.mozilla.javascript.ObjToIntMap itsClassHash -> itsClassHash
    int itsTop -> itsTop
    int itsTopIndex -> itsTopIndex
    org.mozilla.javascript.UintMap itsConstantData -> itsConstantData
    org.mozilla.javascript.UintMap itsPoolTypes -> itsPoolTypes
    byte[] itsPool -> itsPool
    int write(byte[],int) -> write
    int getWriteSize() -> getWriteSize
    int addConstant(int) -> addConstant
    int addConstant(long) -> addConstant
    int addConstant(float) -> addConstant
    int addConstant(double) -> addConstant
    int addConstant(java.lang.String) -> addConstant
    boolean isUnderUtfEncodingLimit(java.lang.String) -> isUnderUtfEncodingLimit
    int getUtfEncodingLimit(java.lang.String,int,int) -> getUtfEncodingLimit
    short addUtf8(java.lang.String) -> addUtf8
    short addNameAndType(java.lang.String,java.lang.String) -> addNameAndType
    short addClass(java.lang.String) -> addClass
    short addFieldRef(java.lang.String,java.lang.String,java.lang.String) -> addFieldRef
    short addMethodRef(java.lang.String,java.lang.String,java.lang.String) -> addMethodRef
    short addInterfaceMethodRef(java.lang.String,java.lang.String,java.lang.String) -> addInterfaceMethodRef
    java.lang.Object getConstantData(int) -> getConstantData
    void setConstantData(int,java.lang.Object) -> setConstantData
    byte getConstantType(int) -> getConstantType
    void ensure(int) -> ensure
org.mozilla.classfile.ExceptionTableEntry -> org.mozilla.classfile.ExceptionTableEntry:
    int itsStartLabel -> itsStartLabel
    int itsEndLabel -> itsEndLabel
    int itsHandlerLabel -> itsHandlerLabel
    short itsCatchType -> itsCatchType
org.mozilla.classfile.FieldOrMethodRef -> org.mozilla.classfile.FieldOrMethodRef:
    java.lang.String className -> className
    java.lang.String name -> name
    java.lang.String type -> type
    int hashCode -> hashCode
    java.lang.String getClassName() -> getClassName
    java.lang.String getName() -> getName
    java.lang.String getType() -> getType
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.mozilla.classfile.SuperBlock -> org.mozilla.classfile.SuperBlock:
    int index -> index
    int start -> start
    int end -> end
    int[] locals -> locals
    int[] stack -> stack
    boolean isInitialized -> isInitialized
    boolean isInQueue -> isInQueue
    int getIndex() -> getIndex
    int[] getLocals() -> getLocals
    int[] getTrimmedLocals() -> getTrimmedLocals
    int[] getStack() -> getStack
    boolean merge(int[],int,int[],int,org.mozilla.classfile.ConstantPool) -> merge
    boolean mergeState(int[],int[],int,org.mozilla.classfile.ConstantPool) -> mergeState
    int getStart() -> getStart
    int getEnd() -> getEnd
    java.lang.String toString() -> toString
    boolean isInitialized() -> isInitialized
    void setInitialized(boolean) -> setInitialized
    boolean isInQueue() -> isInQueue
    void setInQueue(boolean) -> setInQueue
org.mozilla.classfile.TypeInfo -> org.mozilla.classfile.TypeInfo:
    int TOP -> TOP
    int INTEGER -> INTEGER
    int FLOAT -> FLOAT
    int DOUBLE -> DOUBLE
    int LONG -> LONG
    int NULL -> NULL
    int UNINITIALIZED_THIS -> UNINITIALIZED_THIS
    int OBJECT_TAG -> OBJECT_TAG
    int UNINITIALIZED_VAR_TAG -> UNINITIALIZED_VAR_TAG
    int OBJECT(int) -> OBJECT
    int OBJECT(java.lang.String,org.mozilla.classfile.ConstantPool) -> OBJECT
    int UNINITIALIZED_VARIABLE(int) -> UNINITIALIZED_VARIABLE
    int getTag(int) -> getTag
    int getPayload(int) -> getPayload
    java.lang.String getPayloadAsType(int,org.mozilla.classfile.ConstantPool) -> getPayloadAsType
    int fromType(java.lang.String,org.mozilla.classfile.ConstantPool) -> fromType
    boolean isTwoWords(int) -> isTwoWords
    int merge(int,int,org.mozilla.classfile.ConstantPool) -> merge
    java.lang.String toString(int,org.mozilla.classfile.ConstantPool) -> toString
    java.lang.Class getClassFromInternalName(java.lang.String) -> getClassFromInternalName
    java.lang.String toString(int[],org.mozilla.classfile.ConstantPool) -> toString
    java.lang.String toString(int[],int,org.mozilla.classfile.ConstantPool) -> toString
    void print(int[],int[],org.mozilla.classfile.ConstantPool) -> print
    void print(int[],int,int[],int,org.mozilla.classfile.ConstantPool) -> print
org.mozilla.javascript.Arguments -> org.mozilla.javascript.Arguments:
    long serialVersionUID -> serialVersionUID
    java.lang.String FTAG -> FTAG
    int Id_callee -> Id_callee
    int Id_length -> Id_length
    int Id_caller -> Id_caller
    int Id_constructor -> Id_constructor
    int MAX_INSTANCE_ID -> MAX_INSTANCE_ID
    java.lang.Object callerObj -> callerObj
    java.lang.Object calleeObj -> calleeObj
    java.lang.Object lengthObj -> lengthObj
    java.lang.Object constructor -> constructor
    org.mozilla.javascript.NativeCall activation -> activation
    java.lang.Object[] args -> args
    java.lang.String getClassName() -> getClassName
    java.lang.Object arg(int) -> arg
    void putIntoActivation(int,java.lang.Object) -> putIntoActivation
    java.lang.Object getFromActivation(int) -> getFromActivation
    void replaceArg(int,java.lang.Object) -> replaceArg
    void removeArg(int) -> removeArg
    boolean has(int,org.mozilla.javascript.Scriptable) -> has
    java.lang.Object get(int,org.mozilla.javascript.Scriptable) -> get
    boolean sharedWithActivation(int) -> sharedWithActivation
    void put(int,org.mozilla.javascript.Scriptable,java.lang.Object) -> put
    void delete(int) -> delete
    int getMaxInstanceId() -> getMaxInstanceId
    int findInstanceIdInfo(java.lang.String) -> findInstanceIdInfo
    java.lang.String getInstanceIdName(int) -> getInstanceIdName
    java.lang.Object getInstanceIdValue(int) -> getInstanceIdValue
    void setInstanceIdValue(int,java.lang.Object) -> setInstanceIdValue
    java.lang.Object[] getIds(boolean) -> getIds
    org.mozilla.javascript.ScriptableObject getOwnPropertyDescriptor(org.mozilla.javascript.Context,java.lang.Object) -> getOwnPropertyDescriptor
    void defineOwnProperty(org.mozilla.javascript.Context,java.lang.Object,org.mozilla.javascript.ScriptableObject,boolean) -> defineOwnProperty
org.mozilla.javascript.BaseFunction -> org.mozilla.javascript.BaseFunction:
    long serialVersionUID -> serialVersionUID
    java.lang.Object FUNCTION_TAG -> FUNCTION_TAG
    int Id_length -> Id_length
    int Id_arity -> Id_arity
    int Id_name -> Id_name
    int Id_prototype -> Id_prototype
    int Id_arguments -> Id_arguments
    int MAX_INSTANCE_ID -> MAX_INSTANCE_ID
    int Id_constructor -> Id_constructor
    int Id_toString -> Id_toString
    int Id_toSource -> Id_toSource
    int Id_apply -> Id_apply
    int Id_call -> Id_call
    int Id_bind -> Id_bind
    int MAX_PROTOTYPE_ID -> MAX_PROTOTYPE_ID
    java.lang.Object prototypeProperty -> prototypeProperty
    int prototypePropertyAttributes -> prototypePropertyAttributes
    void init(org.mozilla.javascript.Scriptable,boolean) -> init
    java.lang.String getClassName() -> getClassName
    java.lang.String getTypeOf() -> getTypeOf
    boolean hasInstance(org.mozilla.javascript.Scriptable) -> hasInstance
    int getMaxInstanceId() -> getMaxInstanceId
    int findInstanceIdInfo(java.lang.String) -> findInstanceIdInfo
    java.lang.String getInstanceIdName(int) -> getInstanceIdName
    java.lang.Object getInstanceIdValue(int) -> getInstanceIdValue
    void setInstanceIdValue(int,java.lang.Object) -> setInstanceIdValue
    void fillConstructorProperties(org.mozilla.javascript.IdFunctionObject) -> fillConstructorProperties
    void initPrototypeId(int) -> initPrototypeId
    boolean isApply(org.mozilla.javascript.IdFunctionObject) -> isApply
    boolean isApplyOrCall(org.mozilla.javascript.IdFunctionObject) -> isApplyOrCall
    java.lang.Object execIdCall(org.mozilla.javascript.IdFunctionObject,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> execIdCall
    org.mozilla.javascript.BaseFunction realFunction(org.mozilla.javascript.Scriptable,org.mozilla.javascript.IdFunctionObject) -> realFunction
    void setImmunePrototypeProperty(java.lang.Object) -> setImmunePrototypeProperty
    org.mozilla.javascript.Scriptable getClassPrototype() -> getClassPrototype
    java.lang.Object call(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> call
    org.mozilla.javascript.Scriptable construct(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> construct
    org.mozilla.javascript.Scriptable createObject(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable) -> createObject
    java.lang.String decompile(int,int) -> decompile
    int getArity() -> getArity
    int getLength() -> getLength
    java.lang.String getFunctionName() -> getFunctionName
    boolean hasPrototypeProperty() -> hasPrototypeProperty
    java.lang.Object getPrototypeProperty() -> getPrototypeProperty
    java.lang.Object setupDefaultPrototype() -> setupDefaultPrototype
    java.lang.Object getArguments() -> getArguments
    java.lang.Object jsConstructor(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> jsConstructor
    int findPrototypeId(java.lang.String) -> findPrototypeId
org.mozilla.javascript.BeanProperty -> org.mozilla.javascript.BeanProperty:
    org.mozilla.javascript.MemberBox getter -> getter
    org.mozilla.javascript.MemberBox setter -> setter
    org.mozilla.javascript.NativeJavaMethod setters -> setters
org.mozilla.javascript.BoundFunction -> org.mozilla.javascript.BoundFunction:
    long serialVersionUID -> serialVersionUID
    org.mozilla.javascript.Callable targetFunction -> targetFunction
    org.mozilla.javascript.Scriptable boundThis -> boundThis
    java.lang.Object[] boundArgs -> boundArgs
    int length -> length
    java.lang.Object call(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> call
    org.mozilla.javascript.Scriptable construct(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> construct
    boolean hasInstance(org.mozilla.javascript.Scriptable) -> hasInstance
    int getLength() -> getLength
    java.lang.Object[] concat(java.lang.Object[],java.lang.Object[]) -> concat
org.mozilla.javascript.Callable -> org.mozilla.javascript.Callable:
    java.lang.Object call(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> call
org.mozilla.javascript.ClassCache -> org.mozilla.javascript.ClassCache:
    long serialVersionUID -> serialVersionUID
    java.lang.Object AKEY -> AKEY
    boolean cachingIsEnabled -> cachingIsEnabled
    java.util.HashMap classTable -> classTable
    java.util.HashMap classAdapterCache -> classAdapterCache
    java.util.HashMap interfaceAdapterCache -> interfaceAdapterCache
    int generatedClassSerial -> generatedClassSerial
    org.mozilla.javascript.Scriptable associatedScope -> associatedScope
    org.mozilla.javascript.ClassCache get(org.mozilla.javascript.Scriptable) -> get
    boolean associate(org.mozilla.javascript.ScriptableObject) -> associate
    void clearCaches() -> clearCaches
    boolean isCachingEnabled() -> isCachingEnabled
    void setCachingEnabled(boolean) -> setCachingEnabled
    java.util.Map getClassCacheMap() -> getClassCacheMap
    java.util.Map getInterfaceAdapterCacheMap() -> getInterfaceAdapterCacheMap
    boolean isInvokerOptimizationEnabled() -> isInvokerOptimizationEnabled
    void setInvokerOptimizationEnabled(boolean) -> setInvokerOptimizationEnabled
    int newClassSerialNumber() -> newClassSerialNumber
    java.lang.Object getInterfaceAdapter(java.lang.Class) -> getInterfaceAdapter
    void cacheInterfaceAdapter(java.lang.Class,java.lang.Object) -> cacheInterfaceAdapter
    org.mozilla.javascript.Scriptable getAssociatedScope() -> getAssociatedScope
org.mozilla.javascript.ClassDefinitionException -> org.mozilla.javascript.ClassDefinitionException:
    long serialVersionUID -> serialVersionUID
org.mozilla.javascript.ClassShutter -> org.mozilla.javascript.ClassShutter:
    boolean visibleToScripts(java.lang.String) -> visibleToScripts
org.mozilla.javascript.CodeGenerator -> org.mozilla.javascript.CodeGenerator:
    int MIN_LABEL_TABLE_SIZE -> MIN_LABEL_TABLE_SIZE
    int MIN_FIXUP_TABLE_SIZE -> MIN_FIXUP_TABLE_SIZE
    org.mozilla.javascript.CompilerEnvirons compilerEnv -> compilerEnv
    boolean itsInFunctionFlag -> itsInFunctionFlag
    boolean itsInTryFlag -> itsInTryFlag
    org.mozilla.javascript.InterpreterData itsData -> itsData
    org.mozilla.javascript.ast.ScriptNode scriptOrFn -> scriptOrFn
    int iCodeTop -> iCodeTop
    int stackDepth -> stackDepth
    int lineNumber -> lineNumber
    int doubleTableTop -> doubleTableTop
    org.mozilla.javascript.ObjToIntMap strings -> strings
    int localTop -> localTop
    int[] labelTable -> labelTable
    int labelTableTop -> labelTableTop
    long[] fixupTable -> fixupTable
    int fixupTableTop -> fixupTableTop
    org.mozilla.javascript.ObjArray literalIds -> literalIds
    int exceptionTableTop -> exceptionTableTop
    int ECF_TAIL -> ECF_TAIL
    org.mozilla.javascript.InterpreterData compile(org.mozilla.javascript.CompilerEnvirons,org.mozilla.javascript.ast.ScriptNode,java.lang.String,boolean) -> compile
    void generateFunctionICode() -> generateFunctionICode
    void generateICodeFromTree(org.mozilla.javascript.Node) -> generateICodeFromTree
    void generateNestedFunctions() -> generateNestedFunctions
    void generateRegExpLiterals() -> generateRegExpLiterals
    void updateLineNumber(org.mozilla.javascript.Node) -> updateLineNumber
    java.lang.RuntimeException badTree(org.mozilla.javascript.Node) -> badTree
    void visitStatement(org.mozilla.javascript.Node,int) -> visitStatement
    void visitExpression(org.mozilla.javascript.Node,int) -> visitExpression
    void generateCallFunAndThis(org.mozilla.javascript.Node) -> generateCallFunAndThis
    void visitIncDec(org.mozilla.javascript.Node,org.mozilla.javascript.Node) -> visitIncDec
    void visitLiteral(org.mozilla.javascript.Node,org.mozilla.javascript.Node) -> visitLiteral
    void visitArrayComprehension(org.mozilla.javascript.Node,org.mozilla.javascript.Node,org.mozilla.javascript.Node) -> visitArrayComprehension
    int getLocalBlockRef(org.mozilla.javascript.Node) -> getLocalBlockRef
    int getTargetLabel(org.mozilla.javascript.Node) -> getTargetLabel
    void markTargetLabel(org.mozilla.javascript.Node) -> markTargetLabel
    void addGoto(org.mozilla.javascript.Node,int) -> addGoto
    void fixLabelGotos() -> fixLabelGotos
    void addBackwardGoto(int,int) -> addBackwardGoto
    void resolveForwardGoto(int) -> resolveForwardGoto
    void resolveGoto(int,int) -> resolveGoto
    void addToken(int) -> addToken
    void addIcode(int) -> addIcode
    void addUint8(int) -> addUint8
    void addUint16(int) -> addUint16
    void addInt(int) -> addInt
    int getDoubleIndex(double) -> getDoubleIndex
    void addGotoOp(int) -> addGotoOp
    void addVarOp(int,int) -> addVarOp
    void addStringOp(int,java.lang.String) -> addStringOp
    void addIndexOp(int,int) -> addIndexOp
    void addStringPrefix(java.lang.String) -> addStringPrefix
    void addIndexPrefix(int) -> addIndexPrefix
    void addExceptionHandler(int,int,int,boolean,int,int) -> addExceptionHandler
    byte[] increaseICodeCapacity(int) -> increaseICodeCapacity
    void stackChange(int) -> stackChange
    int allocLocal() -> allocLocal
    void releaseLocal(int) -> releaseLocal
org.mozilla.javascript.CompilerEnvirons -> org.mozilla.javascript.CompilerEnvirons:
    org.mozilla.javascript.ErrorReporter errorReporter -> errorReporter
    int languageVersion -> languageVersion
    boolean generateDebugInfo -> generateDebugInfo
    boolean reservedKeywordAsIdentifier -> reservedKeywordAsIdentifier
    boolean allowMemberExprAsFunctionName -> allowMemberExprAsFunctionName
    boolean xmlAvailable -> xmlAvailable
    int optimizationLevel -> optimizationLevel
    boolean generatingSource -> generatingSource
    boolean strictMode -> strictMode
    boolean warningAsError -> warningAsError
    boolean generateObserverCount -> generateObserverCount
    boolean recordingComments -> recordingComments
    boolean recordingLocalJsDocComments -> recordingLocalJsDocComments
    boolean recoverFromErrors -> recoverFromErrors
    boolean warnTrailingComma -> warnTrailingComma
    boolean ideMode -> ideMode
    boolean allowSharpComments -> allowSharpComments
    java.util.Set activationNames -> activationNames
    void initFromContext(org.mozilla.javascript.Context) -> initFromContext
    org.mozilla.javascript.ErrorReporter getErrorReporter() -> getErrorReporter
    void setErrorReporter(org.mozilla.javascript.ErrorReporter) -> setErrorReporter
    int getLanguageVersion() -> getLanguageVersion
    void setLanguageVersion(int) -> setLanguageVersion
    boolean isGenerateDebugInfo() -> isGenerateDebugInfo
    void setGenerateDebugInfo(boolean) -> setGenerateDebugInfo
    boolean isReservedKeywordAsIdentifier() -> isReservedKeywordAsIdentifier
    void setReservedKeywordAsIdentifier(boolean) -> setReservedKeywordAsIdentifier
    boolean isAllowMemberExprAsFunctionName() -> isAllowMemberExprAsFunctionName
    void setAllowMemberExprAsFunctionName(boolean) -> setAllowMemberExprAsFunctionName
    boolean isXmlAvailable() -> isXmlAvailable
    void setXmlAvailable(boolean) -> setXmlAvailable
    int getOptimizationLevel() -> getOptimizationLevel
    void setOptimizationLevel(int) -> setOptimizationLevel
    boolean isGeneratingSource() -> isGeneratingSource
    boolean getWarnTrailingComma() -> getWarnTrailingComma
    void setWarnTrailingComma(boolean) -> setWarnTrailingComma
    boolean isStrictMode() -> isStrictMode
    void setStrictMode(boolean) -> setStrictMode
    boolean reportWarningAsError() -> reportWarningAsError
    void setGeneratingSource(boolean) -> setGeneratingSource
    boolean isGenerateObserverCount() -> isGenerateObserverCount
    void setGenerateObserverCount(boolean) -> setGenerateObserverCount
    boolean isRecordingComments() -> isRecordingComments
    void setRecordingComments(boolean) -> setRecordingComments
    boolean isRecordingLocalJsDocComments() -> isRecordingLocalJsDocComments
    void setRecordingLocalJsDocComments(boolean) -> setRecordingLocalJsDocComments
    void setRecoverFromErrors(boolean) -> setRecoverFromErrors
    boolean recoverFromErrors() -> recoverFromErrors
    void setIdeMode(boolean) -> setIdeMode
    boolean isIdeMode() -> isIdeMode
    java.util.Set getActivationNames() -> getActivationNames
    void setActivationNames(java.util.Set) -> setActivationNames
    void setAllowSharpComments(boolean) -> setAllowSharpComments
    boolean getAllowSharpComments() -> getAllowSharpComments
    org.mozilla.javascript.CompilerEnvirons ideEnvirons() -> ideEnvirons
org.mozilla.javascript.ConsString -> org.mozilla.javascript.ConsString:
    long serialVersionUID -> serialVersionUID
    java.lang.CharSequence s1 -> s1
    java.lang.CharSequence s2 -> s2
    int length -> length
    int depth -> depth
    java.lang.Object writeReplace() -> writeReplace
    java.lang.String toString() -> toString
    java.lang.String flatten() -> flatten
    void appendTo(java.lang.StringBuilder) -> appendTo
    void appendFragment(java.lang.CharSequence,java.lang.StringBuilder) -> appendFragment
    int length() -> length
    char charAt(int) -> charAt
    java.lang.CharSequence subSequence(int,int) -> subSequence
org.mozilla.javascript.ConstProperties -> org.mozilla.javascript.ConstProperties:
    void putConst(java.lang.String,org.mozilla.javascript.Scriptable,java.lang.Object) -> putConst
    void defineConst(java.lang.String,org.mozilla.javascript.Scriptable) -> defineConst
    boolean isConst(java.lang.String) -> isConst
org.mozilla.javascript.Context -> org.mozilla.javascript.Context:
    int VERSION_UNKNOWN -> VERSION_UNKNOWN
    int VERSION_DEFAULT -> VERSION_DEFAULT
    int VERSION_1_0 -> VERSION_1_0
    int VERSION_1_1 -> VERSION_1_1
    int VERSION_1_2 -> VERSION_1_2
    int VERSION_1_3 -> VERSION_1_3
    int VERSION_1_4 -> VERSION_1_4
    int VERSION_1_5 -> VERSION_1_5
    int VERSION_1_6 -> VERSION_1_6
    int VERSION_1_7 -> VERSION_1_7
    int VERSION_1_8 -> VERSION_1_8
    int FEATURE_NON_ECMA_GET_YEAR -> FEATURE_NON_ECMA_GET_YEAR
    int FEATURE_MEMBER_EXPR_AS_FUNCTION_NAME -> FEATURE_MEMBER_EXPR_AS_FUNCTION_NAME
    int FEATURE_RESERVED_KEYWORD_AS_IDENTIFIER -> FEATURE_RESERVED_KEYWORD_AS_IDENTIFIER
    int FEATURE_TO_STRING_AS_SOURCE -> FEATURE_TO_STRING_AS_SOURCE
    int FEATURE_PARENT_PROTO_PROPERTIES -> FEATURE_PARENT_PROTO_PROPERTIES
    int FEATURE_PARENT_PROTO_PROPRTIES -> FEATURE_PARENT_PROTO_PROPRTIES
    int FEATURE_E4X -> FEATURE_E4X
    int FEATURE_DYNAMIC_SCOPE -> FEATURE_DYNAMIC_SCOPE
    int FEATURE_STRICT_VARS -> FEATURE_STRICT_VARS
    int FEATURE_STRICT_EVAL -> FEATURE_STRICT_EVAL
    int FEATURE_LOCATION_INFORMATION_IN_ERROR -> FEATURE_LOCATION_INFORMATION_IN_ERROR
    int FEATURE_STRICT_MODE -> FEATURE_STRICT_MODE
    int FEATURE_WARNING_AS_ERROR -> FEATURE_WARNING_AS_ERROR
    int FEATURE_ENHANCED_JAVA_ACCESS -> FEATURE_ENHANCED_JAVA_ACCESS
    java.lang.String languageVersionProperty -> languageVersionProperty
    java.lang.String errorReporterProperty -> errorReporterProperty
    java.lang.Object[] emptyArgs -> emptyArgs
    java.lang.Class codegenClass -> codegenClass
    java.lang.Class interpreterClass -> interpreterClass
    java.lang.String implementationVersion -> implementationVersion
    org.mozilla.javascript.ContextFactory factory -> factory
    boolean sealed -> sealed
    java.lang.Object sealKey -> sealKey
    org.mozilla.javascript.Scriptable topCallScope -> topCallScope
    boolean isContinuationsTopCall -> isContinuationsTopCall
    org.mozilla.javascript.NativeCall currentActivationCall -> currentActivationCall
    org.mozilla.javascript.xml.XMLLib cachedXMLLib -> cachedXMLLib
    org.mozilla.javascript.ObjToIntMap iterating -> iterating
    java.lang.Object interpreterSecurityDomain -> interpreterSecurityDomain
    int version -> version
    org.mozilla.javascript.SecurityController securityController -> securityController
    boolean hasClassShutter -> hasClassShutter
    org.mozilla.javascript.ClassShutter classShutter -> classShutter
    org.mozilla.javascript.ErrorReporter errorReporter -> errorReporter
    org.mozilla.javascript.RegExpProxy regExpProxy -> regExpProxy
    java.util.Locale locale -> locale
    boolean generatingDebug -> generatingDebug
    boolean generatingDebugChanged -> generatingDebugChanged
    boolean generatingSource -> generatingSource
    boolean useDynamicScope -> useDynamicScope
    int optimizationLevel -> optimizationLevel
    int maximumInterpreterStackDepth -> maximumInterpreterStackDepth
    org.mozilla.javascript.WrapFactory wrapFactory -> wrapFactory
    org.mozilla.javascript.debug.Debugger debugger -> debugger
    java.lang.Object debuggerData -> debuggerData
    int enterCount -> enterCount
    java.lang.Object propertyListeners -> propertyListeners
    java.util.Map threadLocalMap -> threadLocalMap
    java.lang.ClassLoader applicationClassLoader -> applicationClassLoader
    java.util.Set activationNames -> activationNames
    java.lang.Object lastInterpreterFrame -> lastInterpreterFrame
    org.mozilla.javascript.ObjArray previousInterpreterInvocations -> previousInterpreterInvocations
    int instructionCount -> instructionCount
    int instructionThreshold -> instructionThreshold
    int scratchIndex -> scratchIndex
    long scratchUint32 -> scratchUint32
    org.mozilla.javascript.Scriptable scratchScriptable -> scratchScriptable
    boolean generateObserverCount -> generateObserverCount
    org.mozilla.javascript.Context getCurrentContext() -> getCurrentContext
    org.mozilla.javascript.Context enter() -> enter
    org.mozilla.javascript.Context enter(org.mozilla.javascript.Context) -> enter
    org.mozilla.javascript.Context enter(org.mozilla.javascript.Context,org.mozilla.javascript.ContextFactory) -> enter
    void exit() -> exit
    java.lang.Object call(org.mozilla.javascript.ContextAction) -> call
    java.lang.Object call(org.mozilla.javascript.ContextFactory,org.mozilla.javascript.Callable,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> call
    java.lang.Object call(org.mozilla.javascript.ContextFactory,org.mozilla.javascript.ContextAction) -> call
    void addContextListener(org.mozilla.javascript.ContextListener) -> addContextListener
    void removeContextListener(org.mozilla.javascript.ContextListener) -> removeContextListener
    org.mozilla.javascript.ContextFactory getFactory() -> getFactory
    boolean isSealed() -> isSealed
    void seal(java.lang.Object) -> seal
    void unseal(java.lang.Object) -> unseal
    void onSealedMutation() -> onSealedMutation
    int getLanguageVersion() -> getLanguageVersion
    void setLanguageVersion(int) -> setLanguageVersion
    boolean isValidLanguageVersion(int) -> isValidLanguageVersion
    void checkLanguageVersion(int) -> checkLanguageVersion
    java.lang.String getImplementationVersion() -> getImplementationVersion
    org.mozilla.javascript.ErrorReporter getErrorReporter() -> getErrorReporter
    org.mozilla.javascript.ErrorReporter setErrorReporter(org.mozilla.javascript.ErrorReporter) -> setErrorReporter
    java.util.Locale getLocale() -> getLocale
    java.util.Locale setLocale(java.util.Locale) -> setLocale
    void addPropertyChangeListener(java.beans.PropertyChangeListener) -> addPropertyChangeListener
    void removePropertyChangeListener(java.beans.PropertyChangeListener) -> removePropertyChangeListener
    void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object) -> firePropertyChange
    void firePropertyChangeImpl(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object) -> firePropertyChangeImpl
    void reportWarning(java.lang.String,java.lang.String,int,java.lang.String,int) -> reportWarning
    void reportWarning(java.lang.String) -> reportWarning
    void reportWarning(java.lang.String,java.lang.Throwable) -> reportWarning
    void reportError(java.lang.String,java.lang.String,int,java.lang.String,int) -> reportError
    void reportError(java.lang.String) -> reportError
    org.mozilla.javascript.EvaluatorException reportRuntimeError(java.lang.String,java.lang.String,int,java.lang.String,int) -> reportRuntimeError
    org.mozilla.javascript.EvaluatorException reportRuntimeError0(java.lang.String) -> reportRuntimeError0
    org.mozilla.javascript.EvaluatorException reportRuntimeError1(java.lang.String,java.lang.Object) -> reportRuntimeError1
    org.mozilla.javascript.EvaluatorException reportRuntimeError2(java.lang.String,java.lang.Object,java.lang.Object) -> reportRuntimeError2
    org.mozilla.javascript.EvaluatorException reportRuntimeError3(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> reportRuntimeError3
    org.mozilla.javascript.EvaluatorException reportRuntimeError4(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> reportRuntimeError4
    org.mozilla.javascript.EvaluatorException reportRuntimeError(java.lang.String) -> reportRuntimeError
    org.mozilla.javascript.ScriptableObject initStandardObjects() -> initStandardObjects
    org.mozilla.javascript.Scriptable initStandardObjects(org.mozilla.javascript.ScriptableObject) -> initStandardObjects
    org.mozilla.javascript.ScriptableObject initStandardObjects(org.mozilla.javascript.ScriptableObject,boolean) -> initStandardObjects
    java.lang.Object getUndefinedValue() -> getUndefinedValue
    java.lang.Object evaluateString(org.mozilla.javascript.Scriptable,java.lang.String,java.lang.String,int,java.lang.Object) -> evaluateString
    java.lang.Object evaluateReader(org.mozilla.javascript.Scriptable,java.io.Reader,java.lang.String,int,java.lang.Object) -> evaluateReader
    java.lang.Object executeScriptWithContinuations(org.mozilla.javascript.Script,org.mozilla.javascript.Scriptable) -> executeScriptWithContinuations
    java.lang.Object callFunctionWithContinuations(org.mozilla.javascript.Callable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> callFunctionWithContinuations
    org.mozilla.javascript.ContinuationPending captureContinuation() -> captureContinuation
    java.lang.Object resumeContinuation(java.lang.Object,org.mozilla.javascript.Scriptable,java.lang.Object) -> resumeContinuation
    boolean stringIsCompilableUnit(java.lang.String) -> stringIsCompilableUnit
    org.mozilla.javascript.Script compileReader(org.mozilla.javascript.Scriptable,java.io.Reader,java.lang.String,int,java.lang.Object) -> compileReader
    org.mozilla.javascript.Script compileReader(java.io.Reader,java.lang.String,int,java.lang.Object) -> compileReader
    org.mozilla.javascript.Script compileString(java.lang.String,java.lang.String,int,java.lang.Object) -> compileString
    org.mozilla.javascript.Script compileString(java.lang.String,org.mozilla.javascript.Evaluator,org.mozilla.javascript.ErrorReporter,java.lang.String,int,java.lang.Object) -> compileString
    org.mozilla.javascript.Function compileFunction(org.mozilla.javascript.Scriptable,java.lang.String,java.lang.String,int,java.lang.Object) -> compileFunction
    org.mozilla.javascript.Function compileFunction(org.mozilla.javascript.Scriptable,java.lang.String,org.mozilla.javascript.Evaluator,org.mozilla.javascript.ErrorReporter,java.lang.String,int,java.lang.Object) -> compileFunction
    java.lang.String decompileScript(org.mozilla.javascript.Script,int) -> decompileScript
    java.lang.String decompileFunction(org.mozilla.javascript.Function,int) -> decompileFunction
    java.lang.String decompileFunctionBody(org.mozilla.javascript.Function,int) -> decompileFunctionBody
    org.mozilla.javascript.Scriptable newObject(org.mozilla.javascript.Scriptable) -> newObject
    org.mozilla.javascript.Scriptable newObject(org.mozilla.javascript.Scriptable,java.lang.String) -> newObject
    org.mozilla.javascript.Scriptable newObject(org.mozilla.javascript.Scriptable,java.lang.String,java.lang.Object[]) -> newObject
    org.mozilla.javascript.Scriptable newArray(org.mozilla.javascript.Scriptable,int) -> newArray
    org.mozilla.javascript.Scriptable newArray(org.mozilla.javascript.Scriptable,java.lang.Object[]) -> newArray
    java.lang.Object[] getElements(org.mozilla.javascript.Scriptable) -> getElements
    boolean toBoolean(java.lang.Object) -> toBoolean
    double toNumber(java.lang.Object) -> toNumber
    java.lang.String toString(java.lang.Object) -> toString
    org.mozilla.javascript.Scriptable toObject(java.lang.Object,org.mozilla.javascript.Scriptable) -> toObject
    org.mozilla.javascript.Scriptable toObject(java.lang.Object,org.mozilla.javascript.Scriptable,java.lang.Class) -> toObject
    java.lang.Object javaToJS(java.lang.Object,org.mozilla.javascript.Scriptable) -> javaToJS
    java.lang.Object jsToJava(java.lang.Object,java.lang.Class) -> jsToJava
    java.lang.Object toType(java.lang.Object,java.lang.Class) -> toType
    java.lang.RuntimeException throwAsScriptRuntimeEx(java.lang.Throwable) -> throwAsScriptRuntimeEx
    boolean isGeneratingDebug() -> isGeneratingDebug
    void setGeneratingDebug(boolean) -> setGeneratingDebug
    boolean isGeneratingSource() -> isGeneratingSource
    void setGeneratingSource(boolean) -> setGeneratingSource
    int getOptimizationLevel() -> getOptimizationLevel
    void setOptimizationLevel(int) -> setOptimizationLevel
    boolean isValidOptimizationLevel(int) -> isValidOptimizationLevel
    void checkOptimizationLevel(int) -> checkOptimizationLevel
    int getMaximumInterpreterStackDepth() -> getMaximumInterpreterStackDepth
    void setMaximumInterpreterStackDepth(int) -> setMaximumInterpreterStackDepth
    void setSecurityController(org.mozilla.javascript.SecurityController) -> setSecurityController
    void setClassShutter(org.mozilla.javascript.ClassShutter) -> setClassShutter
    org.mozilla.javascript.ClassShutter getClassShutter() -> getClassShutter
    org.mozilla.javascript.Context$ClassShutterSetter getClassShutterSetter() -> getClassShutterSetter
    java.lang.Object getThreadLocal(java.lang.Object) -> getThreadLocal
    void putThreadLocal(java.lang.Object,java.lang.Object) -> putThreadLocal
    void removeThreadLocal(java.lang.Object) -> removeThreadLocal
    void setCachingEnabled(boolean) -> setCachingEnabled
    void setWrapFactory(org.mozilla.javascript.WrapFactory) -> setWrapFactory
    org.mozilla.javascript.WrapFactory getWrapFactory() -> getWrapFactory
    org.mozilla.javascript.debug.Debugger getDebugger() -> getDebugger
    java.lang.Object getDebuggerContextData() -> getDebuggerContextData
    void setDebugger(org.mozilla.javascript.debug.Debugger,java.lang.Object) -> setDebugger
    org.mozilla.javascript.debug.DebuggableScript getDebuggableView(org.mozilla.javascript.Script) -> getDebuggableView
    boolean hasFeature(int) -> hasFeature
    org.mozilla.javascript.xml.XMLLib$Factory getE4xImplementationFactory() -> getE4xImplementationFactory
    int getInstructionObserverThreshold() -> getInstructionObserverThreshold
    void setInstructionObserverThreshold(int) -> setInstructionObserverThreshold
    void setGenerateObserverCount(boolean) -> setGenerateObserverCount
    void observeInstructionCount(int) -> observeInstructionCount
    org.mozilla.javascript.GeneratedClassLoader createClassLoader(java.lang.ClassLoader) -> createClassLoader
    java.lang.ClassLoader getApplicationClassLoader() -> getApplicationClassLoader
    void setApplicationClassLoader(java.lang.ClassLoader) -> setApplicationClassLoader
    org.mozilla.javascript.Context getContext() -> getContext
    java.lang.Object compileImpl(org.mozilla.javascript.Scriptable,java.io.Reader,java.lang.String,java.lang.String,int,java.lang.Object,boolean,org.mozilla.javascript.Evaluator,org.mozilla.javascript.ErrorReporter) -> compileImpl
    void notifyDebugger_r(org.mozilla.javascript.Context,org.mozilla.javascript.debug.DebuggableScript,java.lang.String) -> notifyDebugger_r
    org.mozilla.javascript.Evaluator createCompiler() -> createCompiler
    org.mozilla.javascript.Evaluator createInterpreter() -> createInterpreter
    java.lang.String getSourcePositionFromStack(int[]) -> getSourcePositionFromStack
    org.mozilla.javascript.RegExpProxy getRegExpProxy() -> getRegExpProxy
    boolean isVersionECMA1() -> isVersionECMA1
    org.mozilla.javascript.SecurityController getSecurityController() -> getSecurityController
    boolean isGeneratingDebugChanged() -> isGeneratingDebugChanged
    void addActivationName(java.lang.String) -> addActivationName
    boolean isActivationNeeded(java.lang.String) -> isActivationNeeded
    void removeActivationName(java.lang.String) -> removeActivationName
    org.mozilla.javascript.ClassShutter access$002(org.mozilla.javascript.Context,org.mozilla.javascript.ClassShutter) -> access$002
    org.mozilla.javascript.ClassShutter access$000(org.mozilla.javascript.Context) -> access$000
org.mozilla.javascript.Context$1 -> org.mozilla.javascript.Context$1:
    org.mozilla.javascript.Callable val$callable -> val$callable
    org.mozilla.javascript.Scriptable val$scope -> val$scope
    org.mozilla.javascript.Scriptable val$thisObj -> val$thisObj
    java.lang.Object[] val$args -> val$args
    java.lang.Object run(org.mozilla.javascript.Context) -> run
org.mozilla.javascript.Context$2 -> org.mozilla.javascript.Context$2:
    org.mozilla.javascript.Context this$0 -> this$0
    void setClassShutter(org.mozilla.javascript.ClassShutter) -> setClassShutter
    org.mozilla.javascript.ClassShutter getClassShutter() -> getClassShutter
org.mozilla.javascript.Context$ClassShutterSetter -> org.mozilla.javascript.Context$ClassShutterSetter:
    void setClassShutter(org.mozilla.javascript.ClassShutter) -> setClassShutter
    org.mozilla.javascript.ClassShutter getClassShutter() -> getClassShutter
org.mozilla.javascript.ContextAction -> org.mozilla.javascript.ContextAction:
    java.lang.Object run(org.mozilla.javascript.Context) -> run
org.mozilla.javascript.ContextFactory -> org.mozilla.javascript.ContextFactory:
    boolean hasCustomGlobal -> hasCustomGlobal
    org.mozilla.javascript.ContextFactory global -> global
    boolean sealed -> sealed
    java.lang.Object listenersLock -> listenersLock
    java.lang.Object listeners -> listeners
    boolean disabledListening -> disabledListening
    java.lang.ClassLoader applicationClassLoader -> applicationClassLoader
    org.mozilla.javascript.ContextFactory getGlobal() -> getGlobal
    boolean hasExplicitGlobal() -> hasExplicitGlobal
    void initGlobal(org.mozilla.javascript.ContextFactory) -> initGlobal
    org.mozilla.javascript.ContextFactory$GlobalSetter getGlobalSetter() -> getGlobalSetter
    org.mozilla.javascript.Context makeContext() -> makeContext
    boolean hasFeature(org.mozilla.javascript.Context,int) -> hasFeature
    boolean isDom3Present() -> isDom3Present
    org.mozilla.javascript.xml.XMLLib$Factory getE4xImplementationFactory() -> getE4xImplementationFactory
    org.mozilla.javascript.GeneratedClassLoader createClassLoader(java.lang.ClassLoader) -> createClassLoader
    java.lang.ClassLoader getApplicationClassLoader() -> getApplicationClassLoader
    void initApplicationClassLoader(java.lang.ClassLoader) -> initApplicationClassLoader
    java.lang.Object doTopCall(org.mozilla.javascript.Callable,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> doTopCall
    void observeInstructionCount(org.mozilla.javascript.Context,int) -> observeInstructionCount
    void onContextCreated(org.mozilla.javascript.Context) -> onContextCreated
    void onContextReleased(org.mozilla.javascript.Context) -> onContextReleased
    void addListener(org.mozilla.javascript.ContextFactory$Listener) -> addListener
    void removeListener(org.mozilla.javascript.ContextFactory$Listener) -> removeListener
    void disableContextListening() -> disableContextListening
    boolean isSealed() -> isSealed
    void seal() -> seal
    void checkNotSealed() -> checkNotSealed
    java.lang.Object call(org.mozilla.javascript.ContextAction) -> call
    org.mozilla.javascript.Context enterContext() -> enterContext
    org.mozilla.javascript.Context enter() -> enter
    void exit() -> exit
    org.mozilla.javascript.Context enterContext(org.mozilla.javascript.Context) -> enterContext
    org.mozilla.javascript.ContextFactory access$002(org.mozilla.javascript.ContextFactory) -> access$002
    org.mozilla.javascript.ContextFactory access$000() -> access$000
org.mozilla.javascript.ContextFactory$1 -> org.mozilla.javascript.ContextFactory$1:
    java.lang.ClassLoader val$parent -> val$parent
    org.mozilla.javascript.ContextFactory this$0 -> this$0
    org.mozilla.javascript.DefiningClassLoader run() -> run
    java.lang.Object run() -> run
org.mozilla.javascript.ContextFactory$1GlobalSetterImpl -> org.mozilla.javascript.ContextFactory$1GlobalSetterImpl:
    void setContextFactoryGlobal(org.mozilla.javascript.ContextFactory) -> setContextFactoryGlobal
    org.mozilla.javascript.ContextFactory getContextFactoryGlobal() -> getContextFactoryGlobal
org.mozilla.javascript.ContextFactory$GlobalSetter -> org.mozilla.javascript.ContextFactory$GlobalSetter:
    void setContextFactoryGlobal(org.mozilla.javascript.ContextFactory) -> setContextFactoryGlobal
    org.mozilla.javascript.ContextFactory getContextFactoryGlobal() -> getContextFactoryGlobal
org.mozilla.javascript.ContextFactory$Listener -> org.mozilla.javascript.ContextFactory$Listener:
    void contextCreated(org.mozilla.javascript.Context) -> contextCreated
    void contextReleased(org.mozilla.javascript.Context) -> contextReleased
org.mozilla.javascript.ContextListener -> org.mozilla.javascript.ContextListener:
    void contextEntered(org.mozilla.javascript.Context) -> contextEntered
    void contextExited(org.mozilla.javascript.Context) -> contextExited
org.mozilla.javascript.ContinuationPending -> org.mozilla.javascript.ContinuationPending:
    long serialVersionUID -> serialVersionUID
    org.mozilla.javascript.NativeContinuation continuationState -> continuationState
    java.lang.Object applicationState -> applicationState
    java.lang.Object getContinuation() -> getContinuation
    org.mozilla.javascript.NativeContinuation getContinuationState() -> getContinuationState
    void setApplicationState(java.lang.Object) -> setApplicationState
    java.lang.Object getApplicationState() -> getApplicationState
org.mozilla.javascript.DToA -> org.mozilla.javascript.DToA:
    int DTOSTR_STANDARD -> DTOSTR_STANDARD
    int DTOSTR_STANDARD_EXPONENTIAL -> DTOSTR_STANDARD_EXPONENTIAL
    int DTOSTR_FIXED -> DTOSTR_FIXED
    int DTOSTR_EXPONENTIAL -> DTOSTR_EXPONENTIAL
    int DTOSTR_PRECISION -> DTOSTR_PRECISION
    int Frac_mask -> Frac_mask
    int Exp_shift -> Exp_shift
    int Exp_msk1 -> Exp_msk1
    long Frac_maskL -> Frac_maskL
    int Exp_shiftL -> Exp_shiftL
    long Exp_msk1L -> Exp_msk1L
    int Bias -> Bias
    int P -> P
    int Exp_shift1 -> Exp_shift1
    int Exp_mask -> Exp_mask
    int Exp_mask_shifted -> Exp_mask_shifted
    int Bndry_mask -> Bndry_mask
    int Log2P -> Log2P
    int Sign_bit -> Sign_bit
    int Exp_11 -> Exp_11
    int Ten_pmax -> Ten_pmax
    int Quick_max -> Quick_max
    int Bletch -> Bletch
    int Frac_mask1 -> Frac_mask1
    int Int_max -> Int_max
    int n_bigtens -> n_bigtens
    double[] tens -> tens
    double[] bigtens -> bigtens
    int[] dtoaModes -> dtoaModes
    char BASEDIGIT(int) -> BASEDIGIT
    int lo0bits(int) -> lo0bits
    int hi0bits(int) -> hi0bits
    void stuffBits(byte[],int,int) -> stuffBits
    java.math.BigInteger d2b(double,int[],int[]) -> d2b
    java.lang.String JS_dtobasestr(int,double) -> JS_dtobasestr
    int word0(double) -> word0
    double setWord0(double,int) -> setWord0
    int word1(double) -> word1
    java.math.BigInteger pow5mult(java.math.BigInteger,int) -> pow5mult
    boolean roundOff(java.lang.StringBuilder) -> roundOff
    int JS_dtoa(double,int,boolean,int,boolean[],java.lang.StringBuilder) -> JS_dtoa
    void stripTrailingZeroes(java.lang.StringBuilder) -> stripTrailingZeroes
    void JS_dtostr(java.lang.StringBuilder,int,int,double) -> JS_dtostr
org.mozilla.javascript.Decompiler -> org.mozilla.javascript.Decompiler:
    int ONLY_BODY_FLAG -> ONLY_BODY_FLAG
    int TO_SOURCE_FLAG -> TO_SOURCE_FLAG
    int INITIAL_INDENT_PROP -> INITIAL_INDENT_PROP
    int INDENT_GAP_PROP -> INDENT_GAP_PROP
    int CASE_GAP_PROP -> CASE_GAP_PROP
    int FUNCTION_END -> FUNCTION_END
    char[] sourceBuffer -> sourceBuffer
    int sourceTop -> sourceTop
    boolean printSource -> printSource
    java.lang.String getEncodedSource() -> getEncodedSource
    int getCurrentOffset() -> getCurrentOffset
    int markFunctionStart(int) -> markFunctionStart
    int markFunctionEnd(int) -> markFunctionEnd
    void addToken(int) -> addToken
    void addEOL(int) -> addEOL
    void addName(java.lang.String) -> addName
    void addString(java.lang.String) -> addString
    void addRegexp(java.lang.String,java.lang.String) -> addRegexp
    void addNumber(double) -> addNumber
    void appendString(java.lang.String) -> appendString
    void append(char) -> append
    void increaseSourceCapacity(int) -> increaseSourceCapacity
    java.lang.String sourceToString(int) -> sourceToString
    java.lang.String decompile(java.lang.String,int,org.mozilla.javascript.UintMap) -> decompile
    int getNext(java.lang.String,int,int) -> getNext
    int getSourceStringEnd(java.lang.String,int) -> getSourceStringEnd
    int printSourceString(java.lang.String,int,boolean,java.lang.StringBuffer) -> printSourceString
    int printSourceNumber(java.lang.String,int,java.lang.StringBuffer) -> printSourceNumber
org.mozilla.javascript.DefaultErrorReporter -> org.mozilla.javascript.DefaultErrorReporter:
    org.mozilla.javascript.DefaultErrorReporter instance -> instance
    boolean forEval -> forEval
    org.mozilla.javascript.ErrorReporter chainedReporter -> chainedReporter
    org.mozilla.javascript.ErrorReporter forEval(org.mozilla.javascript.ErrorReporter) -> forEval
    void warning(java.lang.String,java.lang.String,int,java.lang.String,int) -> warning
    void error(java.lang.String,java.lang.String,int,java.lang.String,int) -> error
    org.mozilla.javascript.EvaluatorException runtimeError(java.lang.String,java.lang.String,int,java.lang.String,int) -> runtimeError
org.mozilla.javascript.DefiningClassLoader -> org.mozilla.javascript.DefiningClassLoader:
    java.lang.ClassLoader parentLoader -> parentLoader
    java.lang.Class defineClass(java.lang.String,byte[]) -> defineClass
    void linkClass(java.lang.Class) -> linkClass
    java.lang.Class loadClass(java.lang.String,boolean) -> loadClass
org.mozilla.javascript.Delegator -> org.mozilla.javascript.Delegator:
    org.mozilla.javascript.Scriptable obj -> obj
    org.mozilla.javascript.Delegator newInstance() -> newInstance
    org.mozilla.javascript.Scriptable getDelegee() -> getDelegee
    void setDelegee(org.mozilla.javascript.Scriptable) -> setDelegee
    java.lang.String getClassName() -> getClassName
    java.lang.Object get(java.lang.String,org.mozilla.javascript.Scriptable) -> get
    java.lang.Object get(int,org.mozilla.javascript.Scriptable) -> get
    boolean has(java.lang.String,org.mozilla.javascript.Scriptable) -> has
    boolean has(int,org.mozilla.javascript.Scriptable) -> has
    void put(java.lang.String,org.mozilla.javascript.Scriptable,java.lang.Object) -> put
    void put(int,org.mozilla.javascript.Scriptable,java.lang.Object) -> put
    void delete(java.lang.String) -> delete
    void delete(int) -> delete
    org.mozilla.javascript.Scriptable getPrototype() -> getPrototype
    void setPrototype(org.mozilla.javascript.Scriptable) -> setPrototype
    org.mozilla.javascript.Scriptable getParentScope() -> getParentScope
    void setParentScope(org.mozilla.javascript.Scriptable) -> setParentScope
    java.lang.Object[] getIds() -> getIds
    java.lang.Object getDefaultValue(java.lang.Class) -> getDefaultValue
    boolean hasInstance(org.mozilla.javascript.Scriptable) -> hasInstance
    java.lang.Object call(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> call
    org.mozilla.javascript.Scriptable construct(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> construct
org.mozilla.javascript.EcmaError -> org.mozilla.javascript.EcmaError:
    long serialVersionUID -> serialVersionUID
    java.lang.String errorName -> errorName
    java.lang.String errorMessage -> errorMessage
    java.lang.String details() -> details
    java.lang.String getName() -> getName
    java.lang.String getErrorMessage() -> getErrorMessage
    java.lang.String getSourceName() -> getSourceName
    int getLineNumber() -> getLineNumber
    int getColumnNumber() -> getColumnNumber
    java.lang.String getLineSource() -> getLineSource
    org.mozilla.javascript.Scriptable getErrorObject() -> getErrorObject
org.mozilla.javascript.ErrorReporter -> org.mozilla.javascript.ErrorReporter:
    void warning(java.lang.String,java.lang.String,int,java.lang.String,int) -> warning
    void error(java.lang.String,java.lang.String,int,java.lang.String,int) -> error
    org.mozilla.javascript.EvaluatorException runtimeError(java.lang.String,java.lang.String,int,java.lang.String,int) -> runtimeError
org.mozilla.javascript.Evaluator -> org.mozilla.javascript.Evaluator:
    java.lang.Object compile(org.mozilla.javascript.CompilerEnvirons,org.mozilla.javascript.ast.ScriptNode,java.lang.String,boolean) -> compile
    org.mozilla.javascript.Function createFunctionObject(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object,java.lang.Object) -> createFunctionObject
    org.mozilla.javascript.Script createScriptObject(java.lang.Object,java.lang.Object) -> createScriptObject
    void captureStackInfo(org.mozilla.javascript.RhinoException) -> captureStackInfo
    java.lang.String getSourcePositionFromStack(org.mozilla.javascript.Context,int[]) -> getSourcePositionFromStack
    java.lang.String getPatchedStack(org.mozilla.javascript.RhinoException,java.lang.String) -> getPatchedStack
    java.util.List getScriptStack(org.mozilla.javascript.RhinoException) -> getScriptStack
    void setEvalScriptFlag(org.mozilla.javascript.Script) -> setEvalScriptFlag
org.mozilla.javascript.EvaluatorException -> org.mozilla.javascript.EvaluatorException:
    long serialVersionUID -> serialVersionUID
    java.lang.String getSourceName() -> getSourceName
    int getLineNumber() -> getLineNumber
    int getColumnNumber() -> getColumnNumber
    java.lang.String getLineSource() -> getLineSource
org.mozilla.javascript.FieldAndMethods -> org.mozilla.javascript.FieldAndMethods:
    long serialVersionUID -> serialVersionUID
    java.lang.reflect.Field field -> field
    java.lang.Object javaObject -> javaObject
    java.lang.Object getDefaultValue(java.lang.Class) -> getDefaultValue
org.mozilla.javascript.Function -> org.mozilla.javascript.Function:
    java.lang.Object call(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> call
    org.mozilla.javascript.Scriptable construct(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> construct
org.mozilla.javascript.FunctionObject -> org.mozilla.javascript.FunctionObject:
    long serialVersionUID -> serialVersionUID
    short VARARGS_METHOD -> VARARGS_METHOD
    short VARARGS_CTOR -> VARARGS_CTOR
    boolean sawSecurityException -> sawSecurityException
    int JAVA_UNSUPPORTED_TYPE -> JAVA_UNSUPPORTED_TYPE
    int JAVA_STRING_TYPE -> JAVA_STRING_TYPE
    int JAVA_INT_TYPE -> JAVA_INT_TYPE
    int JAVA_BOOLEAN_TYPE -> JAVA_BOOLEAN_TYPE
    int JAVA_DOUBLE_TYPE -> JAVA_DOUBLE_TYPE
    int JAVA_SCRIPTABLE_TYPE -> JAVA_SCRIPTABLE_TYPE
    int JAVA_OBJECT_TYPE -> JAVA_OBJECT_TYPE
    org.mozilla.javascript.MemberBox member -> member
    java.lang.String functionName -> functionName
    byte[] typeTags -> typeTags
    int parmsLength -> parmsLength
    boolean hasVoidReturn -> hasVoidReturn
    int returnTypeTag -> returnTypeTag
    boolean isStatic -> isStatic
    int getTypeTag(java.lang.Class) -> getTypeTag
    java.lang.Object convertArg(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object,int) -> convertArg
    int getArity() -> getArity
    int getLength() -> getLength
    java.lang.String getFunctionName() -> getFunctionName
    java.lang.reflect.Member getMethodOrConstructor() -> getMethodOrConstructor
    java.lang.reflect.Method findSingleMethod(java.lang.reflect.Method[],java.lang.String) -> findSingleMethod
    java.lang.reflect.Method[] getMethodList(java.lang.Class) -> getMethodList
    void addAsConstructor(org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable) -> addAsConstructor
    void initAsConstructor(org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable) -> initAsConstructor
    java.lang.Object convertArg(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object,java.lang.Class) -> convertArg
    java.lang.Object call(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> call
    org.mozilla.javascript.Scriptable createObject(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable) -> createObject
    boolean isVarArgsMethod() -> isVarArgsMethod
    boolean isVarArgsConstructor() -> isVarArgsConstructor
    void readObject(java.io.ObjectInputStream) -> readObject
org.mozilla.javascript.GeneratedClassLoader -> org.mozilla.javascript.GeneratedClassLoader:
    java.lang.Class defineClass(java.lang.String,byte[]) -> defineClass
    void linkClass(java.lang.Class) -> linkClass
org.mozilla.javascript.IRFactory -> org.mozilla.javascript.IRFactory:
    int LOOP_DO_WHILE -> LOOP_DO_WHILE
    int LOOP_WHILE -> LOOP_WHILE
    int LOOP_FOR -> LOOP_FOR
    int ALWAYS_TRUE_BOOLEAN -> ALWAYS_TRUE_BOOLEAN
    int ALWAYS_FALSE_BOOLEAN -> ALWAYS_FALSE_BOOLEAN
    org.mozilla.javascript.Decompiler decompiler -> decompiler
    org.mozilla.javascript.ast.ScriptNode transformTree(org.mozilla.javascript.ast.AstRoot) -> transformTree
    org.mozilla.javascript.Node transform(org.mozilla.javascript.ast.AstNode) -> transform
    org.mozilla.javascript.Node transformArrayComp(org.mozilla.javascript.ast.ArrayComprehension) -> transformArrayComp
    org.mozilla.javascript.Node arrayCompTransformHelper(org.mozilla.javascript.ast.ArrayComprehension,java.lang.String) -> arrayCompTransformHelper
    org.mozilla.javascript.Node transformArrayLiteral(org.mozilla.javascript.ast.ArrayLiteral) -> transformArrayLiteral
    org.mozilla.javascript.Node transformAssignment(org.mozilla.javascript.ast.Assignment) -> transformAssignment
    org.mozilla.javascript.Node transformBlock(org.mozilla.javascript.ast.AstNode) -> transformBlock
    org.mozilla.javascript.Node transformBreak(org.mozilla.javascript.ast.BreakStatement) -> transformBreak
    org.mozilla.javascript.Node transformCondExpr(org.mozilla.javascript.ast.ConditionalExpression) -> transformCondExpr
    org.mozilla.javascript.Node transformContinue(org.mozilla.javascript.ast.ContinueStatement) -> transformContinue
    org.mozilla.javascript.Node transformDoLoop(org.mozilla.javascript.ast.DoLoop) -> transformDoLoop
    org.mozilla.javascript.Node transformElementGet(org.mozilla.javascript.ast.ElementGet) -> transformElementGet
    org.mozilla.javascript.Node transformExprStmt(org.mozilla.javascript.ast.ExpressionStatement) -> transformExprStmt
    org.mozilla.javascript.Node transformForInLoop(org.mozilla.javascript.ast.ForInLoop) -> transformForInLoop
    org.mozilla.javascript.Node transformForLoop(org.mozilla.javascript.ast.ForLoop) -> transformForLoop
    org.mozilla.javascript.Node transformFunction(org.mozilla.javascript.ast.FunctionNode) -> transformFunction
    org.mozilla.javascript.Node transformFunctionCall(org.mozilla.javascript.ast.FunctionCall) -> transformFunctionCall
    org.mozilla.javascript.Node transformGenExpr(org.mozilla.javascript.ast.GeneratorExpression) -> transformGenExpr
    org.mozilla.javascript.Node genExprTransformHelper(org.mozilla.javascript.ast.GeneratorExpression) -> genExprTransformHelper
    org.mozilla.javascript.Node transformIf(org.mozilla.javascript.ast.IfStatement) -> transformIf
    org.mozilla.javascript.Node transformInfix(org.mozilla.javascript.ast.InfixExpression) -> transformInfix
    org.mozilla.javascript.Node transformLabeledStatement(org.mozilla.javascript.ast.LabeledStatement) -> transformLabeledStatement
    org.mozilla.javascript.Node transformLetNode(org.mozilla.javascript.ast.LetNode) -> transformLetNode
    org.mozilla.javascript.Node transformLiteral(org.mozilla.javascript.ast.AstNode) -> transformLiteral
    org.mozilla.javascript.Node transformName(org.mozilla.javascript.ast.Name) -> transformName
    org.mozilla.javascript.Node transformNewExpr(org.mozilla.javascript.ast.NewExpression) -> transformNewExpr
    org.mozilla.javascript.Node transformNumber(org.mozilla.javascript.ast.NumberLiteral) -> transformNumber
    org.mozilla.javascript.Node transformObjectLiteral(org.mozilla.javascript.ast.ObjectLiteral) -> transformObjectLiteral
    java.lang.Object getPropKey(org.mozilla.javascript.Node) -> getPropKey
    org.mozilla.javascript.Node transformParenExpr(org.mozilla.javascript.ast.ParenthesizedExpression) -> transformParenExpr
    org.mozilla.javascript.Node transformPropertyGet(org.mozilla.javascript.ast.PropertyGet) -> transformPropertyGet
    org.mozilla.javascript.Node transformRegExp(org.mozilla.javascript.ast.RegExpLiteral) -> transformRegExp
    org.mozilla.javascript.Node transformReturn(org.mozilla.javascript.ast.ReturnStatement) -> transformReturn
    org.mozilla.javascript.Node transformScript(org.mozilla.javascript.ast.ScriptNode) -> transformScript
    org.mozilla.javascript.Node transformString(org.mozilla.javascript.ast.StringLiteral) -> transformString
    org.mozilla.javascript.Node transformSwitch(org.mozilla.javascript.ast.SwitchStatement) -> transformSwitch
    org.mozilla.javascript.Node transformThrow(org.mozilla.javascript.ast.ThrowStatement) -> transformThrow
    org.mozilla.javascript.Node transformTry(org.mozilla.javascript.ast.TryStatement) -> transformTry
    org.mozilla.javascript.Node transformUnary(org.mozilla.javascript.ast.UnaryExpression) -> transformUnary
    org.mozilla.javascript.Node transformVariables(org.mozilla.javascript.ast.VariableDeclaration) -> transformVariables
    org.mozilla.javascript.Node transformVariableInitializers(org.mozilla.javascript.ast.VariableDeclaration) -> transformVariableInitializers
    org.mozilla.javascript.Node transformWhileLoop(org.mozilla.javascript.ast.WhileLoop) -> transformWhileLoop
    org.mozilla.javascript.Node transformWith(org.mozilla.javascript.ast.WithStatement) -> transformWith
    org.mozilla.javascript.Node transformYield(org.mozilla.javascript.ast.Yield) -> transformYield
    org.mozilla.javascript.Node transformXmlLiteral(org.mozilla.javascript.ast.XmlLiteral) -> transformXmlLiteral
    org.mozilla.javascript.Node transformXmlMemberGet(org.mozilla.javascript.ast.XmlMemberGet) -> transformXmlMemberGet
    org.mozilla.javascript.Node transformXmlRef(org.mozilla.javascript.ast.XmlRef) -> transformXmlRef
    org.mozilla.javascript.Node transformXmlRef(org.mozilla.javascript.Node,org.mozilla.javascript.ast.XmlRef,int) -> transformXmlRef
    org.mozilla.javascript.Node transformDefaultXmlNamepace(org.mozilla.javascript.ast.UnaryExpression) -> transformDefaultXmlNamepace
    void addSwitchCase(org.mozilla.javascript.Node,org.mozilla.javascript.Node,org.mozilla.javascript.Node) -> addSwitchCase
    void closeSwitch(org.mozilla.javascript.Node) -> closeSwitch
    org.mozilla.javascript.Node createExprStatementNoReturn(org.mozilla.javascript.Node,int) -> createExprStatementNoReturn
    org.mozilla.javascript.Node createString(java.lang.String) -> createString
    org.mozilla.javascript.Node createCatch(java.lang.String,org.mozilla.javascript.Node,org.mozilla.javascript.Node,int) -> createCatch
    org.mozilla.javascript.Node initFunction(org.mozilla.javascript.ast.FunctionNode,int,org.mozilla.javascript.Node,int) -> initFunction
    org.mozilla.javascript.ast.Scope createLoopNode(org.mozilla.javascript.Node,int) -> createLoopNode
    org.mozilla.javascript.Node createFor(org.mozilla.javascript.ast.Scope,org.mozilla.javascript.Node,org.mozilla.javascript.Node,org.mozilla.javascript.Node,org.mozilla.javascript.Node) -> createFor
    org.mozilla.javascript.Node createLoop(org.mozilla.javascript.ast.Jump,int,org.mozilla.javascript.Node,org.mozilla.javascript.Node,org.mozilla.javascript.Node,org.mozilla.javascript.Node) -> createLoop
    org.mozilla.javascript.Node createForIn(int,org.mozilla.javascript.Node,org.mozilla.javascript.Node,org.mozilla.javascript.Node,org.mozilla.javascript.Node,boolean) -> createForIn
    org.mozilla.javascript.Node createTryCatchFinally(org.mozilla.javascript.Node,org.mozilla.javascript.Node,org.mozilla.javascript.Node,int) -> createTryCatchFinally
    org.mozilla.javascript.Node createWith(org.mozilla.javascript.Node,org.mozilla.javascript.Node,int) -> createWith
    org.mozilla.javascript.Node createIf(org.mozilla.javascript.Node,org.mozilla.javascript.Node,org.mozilla.javascript.Node,int) -> createIf
    org.mozilla.javascript.Node createCondExpr(org.mozilla.javascript.Node,org.mozilla.javascript.Node,org.mozilla.javascript.Node) -> createCondExpr
    org.mozilla.javascript.Node createUnary(int,org.mozilla.javascript.Node) -> createUnary
    org.mozilla.javascript.Node createCallOrNew(int,org.mozilla.javascript.Node) -> createCallOrNew
    org.mozilla.javascript.Node createIncDec(int,boolean,org.mozilla.javascript.Node) -> createIncDec
    org.mozilla.javascript.Node createPropertyGet(org.mozilla.javascript.Node,java.lang.String,java.lang.String,int) -> createPropertyGet
    org.mozilla.javascript.Node createElementGet(org.mozilla.javascript.Node,java.lang.String,org.mozilla.javascript.Node,int) -> createElementGet
    org.mozilla.javascript.Node createMemberRefGet(org.mozilla.javascript.Node,java.lang.String,org.mozilla.javascript.Node,int) -> createMemberRefGet
    org.mozilla.javascript.Node createBinary(int,org.mozilla.javascript.Node,org.mozilla.javascript.Node) -> createBinary
    org.mozilla.javascript.Node createAssignment(int,org.mozilla.javascript.Node,org.mozilla.javascript.Node) -> createAssignment
    org.mozilla.javascript.Node createUseLocal(org.mozilla.javascript.Node) -> createUseLocal
    org.mozilla.javascript.ast.Jump makeJump(int,org.mozilla.javascript.Node) -> makeJump
    org.mozilla.javascript.Node makeReference(org.mozilla.javascript.Node) -> makeReference
    int isAlwaysDefinedBoolean(org.mozilla.javascript.Node) -> isAlwaysDefinedBoolean
    boolean isDestructuring(org.mozilla.javascript.Node) -> isDestructuring
    org.mozilla.javascript.Node decompileFunctionHeader(org.mozilla.javascript.ast.FunctionNode) -> decompileFunctionHeader
    void decompile(org.mozilla.javascript.ast.AstNode) -> decompile
    void decompileArrayLiteral(org.mozilla.javascript.ast.ArrayLiteral) -> decompileArrayLiteral
    void decompileObjectLiteral(org.mozilla.javascript.ast.ObjectLiteral) -> decompileObjectLiteral
    void decompilePropertyGet(org.mozilla.javascript.ast.PropertyGet) -> decompilePropertyGet
    void decompileElementGet(org.mozilla.javascript.ast.ElementGet) -> decompileElementGet
org.mozilla.javascript.Icode -> org.mozilla.javascript.Icode:
    int Icode_DELNAME -> Icode_DELNAME
    int Icode_DUP -> Icode_DUP
    int Icode_DUP2 -> Icode_DUP2
    int Icode_SWAP -> Icode_SWAP
    int Icode_POP -> Icode_POP
    int Icode_POP_RESULT -> Icode_POP_RESULT
    int Icode_IFEQ_POP -> Icode_IFEQ_POP
    int Icode_VAR_INC_DEC -> Icode_VAR_INC_DEC
    int Icode_NAME_INC_DEC -> Icode_NAME_INC_DEC
    int Icode_PROP_INC_DEC -> Icode_PROP_INC_DEC
    int Icode_ELEM_INC_DEC -> Icode_ELEM_INC_DEC
    int Icode_REF_INC_DEC -> Icode_REF_INC_DEC
    int Icode_SCOPE_LOAD -> Icode_SCOPE_LOAD
    int Icode_SCOPE_SAVE -> Icode_SCOPE_SAVE
    int Icode_TYPEOFNAME -> Icode_TYPEOFNAME
    int Icode_NAME_AND_THIS -> Icode_NAME_AND_THIS
    int Icode_PROP_AND_THIS -> Icode_PROP_AND_THIS
    int Icode_ELEM_AND_THIS -> Icode_ELEM_AND_THIS
    int Icode_VALUE_AND_THIS -> Icode_VALUE_AND_THIS
    int Icode_CLOSURE_EXPR -> Icode_CLOSURE_EXPR
    int Icode_CLOSURE_STMT -> Icode_CLOSURE_STMT
    int Icode_CALLSPECIAL -> Icode_CALLSPECIAL
    int Icode_RETUNDEF -> Icode_RETUNDEF
    int Icode_GOSUB -> Icode_GOSUB
    int Icode_STARTSUB -> Icode_STARTSUB
    int Icode_RETSUB -> Icode_RETSUB
    int Icode_LINE -> Icode_LINE
    int Icode_SHORTNUMBER -> Icode_SHORTNUMBER
    int Icode_INTNUMBER -> Icode_INTNUMBER
    int Icode_LITERAL_NEW -> Icode_LITERAL_NEW
    int Icode_LITERAL_SET -> Icode_LITERAL_SET
    int Icode_SPARE_ARRAYLIT -> Icode_SPARE_ARRAYLIT
    int Icode_REG_IND_C0 -> Icode_REG_IND_C0
    int Icode_REG_IND_C1 -> Icode_REG_IND_C1
    int Icode_REG_IND_C2 -> Icode_REG_IND_C2
    int Icode_REG_IND_C3 -> Icode_REG_IND_C3
    int Icode_REG_IND_C4 -> Icode_REG_IND_C4
    int Icode_REG_IND_C5 -> Icode_REG_IND_C5
    int Icode_REG_IND1 -> Icode_REG_IND1
    int Icode_REG_IND2 -> Icode_REG_IND2
    int Icode_REG_IND4 -> Icode_REG_IND4
    int Icode_REG_STR_C0 -> Icode_REG_STR_C0
    int Icode_REG_STR_C1 -> Icode_REG_STR_C1
    int Icode_REG_STR_C2 -> Icode_REG_STR_C2
    int Icode_REG_STR_C3 -> Icode_REG_STR_C3
    int Icode_REG_STR1 -> Icode_REG_STR1
    int Icode_REG_STR2 -> Icode_REG_STR2
    int Icode_REG_STR4 -> Icode_REG_STR4
    int Icode_GETVAR1 -> Icode_GETVAR1
    int Icode_SETVAR1 -> Icode_SETVAR1
    int Icode_UNDEF -> Icode_UNDEF
    int Icode_ZERO -> Icode_ZERO
    int Icode_ONE -> Icode_ONE
    int Icode_ENTERDQ -> Icode_ENTERDQ
    int Icode_LEAVEDQ -> Icode_LEAVEDQ
    int Icode_TAIL_CALL -> Icode_TAIL_CALL
    int Icode_LOCAL_CLEAR -> Icode_LOCAL_CLEAR
    int Icode_LITERAL_GETTER -> Icode_LITERAL_GETTER
    int Icode_LITERAL_SETTER -> Icode_LITERAL_SETTER
    int Icode_SETCONST -> Icode_SETCONST
    int Icode_SETCONSTVAR -> Icode_SETCONSTVAR
    int Icode_SETCONSTVAR1 -> Icode_SETCONSTVAR1
    int Icode_GENERATOR -> Icode_GENERATOR
    int Icode_GENERATOR_END -> Icode_GENERATOR_END
    int Icode_DEBUGGER -> Icode_DEBUGGER
    int MIN_ICODE -> MIN_ICODE
    java.lang.String bytecodeName(int) -> bytecodeName
    boolean validIcode(int) -> validIcode
    boolean validTokenCode(int) -> validTokenCode
    boolean validBytecode(int) -> validBytecode
org.mozilla.javascript.IdFunctionCall -> org.mozilla.javascript.IdFunctionCall:
    java.lang.Object execIdCall(org.mozilla.javascript.IdFunctionObject,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> execIdCall
org.mozilla.javascript.IdFunctionObject -> org.mozilla.javascript.IdFunctionObject:
    long serialVersionUID -> serialVersionUID
    org.mozilla.javascript.IdFunctionCall idcall -> idcall
    java.lang.Object tag -> tag
    int methodId -> methodId
    int arity -> arity
    boolean useCallAsConstructor -> useCallAsConstructor
    java.lang.String functionName -> functionName
    void initFunction(java.lang.String,org.mozilla.javascript.Scriptable) -> initFunction
    boolean hasTag(java.lang.Object) -> hasTag
    int methodId() -> methodId
    void markAsConstructor(org.mozilla.javascript.Scriptable) -> markAsConstructor
    void addAsProperty(org.mozilla.javascript.Scriptable) -> addAsProperty
    void exportAsScopeProperty() -> exportAsScopeProperty
    org.mozilla.javascript.Scriptable getPrototype() -> getPrototype
    java.lang.Object call(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> call
    org.mozilla.javascript.Scriptable createObject(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable) -> createObject
    java.lang.String decompile(int,int) -> decompile
    int getArity() -> getArity
    int getLength() -> getLength
    java.lang.String getFunctionName() -> getFunctionName
    java.lang.RuntimeException unknown() -> unknown
org.mozilla.javascript.IdScriptableObject -> org.mozilla.javascript.IdScriptableObject:
    org.mozilla.javascript.IdScriptableObject$PrototypeValues prototypeValues -> prototypeValues
    java.lang.Object defaultGet(java.lang.String) -> defaultGet
    void defaultPut(java.lang.String,java.lang.Object) -> defaultPut
    boolean has(java.lang.String,org.mozilla.javascript.Scriptable) -> has
    java.lang.Object get(java.lang.String,org.mozilla.javascript.Scriptable) -> get
    void put(java.lang.String,org.mozilla.javascript.Scriptable,java.lang.Object) -> put
    void delete(java.lang.String) -> delete
    int getAttributes(java.lang.String) -> getAttributes
    void setAttributes(java.lang.String,int) -> setAttributes
    java.lang.Object[] getIds(boolean) -> getIds
    int getMaxInstanceId() -> getMaxInstanceId
    int instanceIdInfo(int,int) -> instanceIdInfo
    int findInstanceIdInfo(java.lang.String) -> findInstanceIdInfo
    java.lang.String getInstanceIdName(int) -> getInstanceIdName
    java.lang.Object getInstanceIdValue(int) -> getInstanceIdValue
    void setInstanceIdValue(int,java.lang.Object) -> setInstanceIdValue
    void setInstanceIdAttributes(int,int) -> setInstanceIdAttributes
    java.lang.Object execIdCall(org.mozilla.javascript.IdFunctionObject,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> execIdCall
    org.mozilla.javascript.IdFunctionObject exportAsJSClass(int,org.mozilla.javascript.Scriptable,boolean) -> exportAsJSClass
    boolean hasPrototypeMap() -> hasPrototypeMap
    void activatePrototypeMap(int) -> activatePrototypeMap
    void initPrototypeMethod(java.lang.Object,int,java.lang.String,int) -> initPrototypeMethod
    void initPrototypeConstructor(org.mozilla.javascript.IdFunctionObject) -> initPrototypeConstructor
    void initPrototypeValue(int,java.lang.String,java.lang.Object,int) -> initPrototypeValue
    void initPrototypeId(int) -> initPrototypeId
    int findPrototypeId(java.lang.String) -> findPrototypeId
    void fillConstructorProperties(org.mozilla.javascript.IdFunctionObject) -> fillConstructorProperties
    void addIdFunctionProperty(org.mozilla.javascript.Scriptable,java.lang.Object,int,java.lang.String,int) -> addIdFunctionProperty
    org.mozilla.javascript.EcmaError incompatibleCallError(org.mozilla.javascript.IdFunctionObject) -> incompatibleCallError
    org.mozilla.javascript.IdFunctionObject newIdFunction(java.lang.Object,int,java.lang.String,int,org.mozilla.javascript.Scriptable) -> newIdFunction
    void defineOwnProperty(org.mozilla.javascript.Context,java.lang.Object,org.mozilla.javascript.ScriptableObject) -> defineOwnProperty
    org.mozilla.javascript.ScriptableObject getOwnPropertyDescriptor(org.mozilla.javascript.Context,java.lang.Object) -> getOwnPropertyDescriptor
    org.mozilla.javascript.ScriptableObject getBuiltInDescriptor(java.lang.String) -> getBuiltInDescriptor
    void readObject(java.io.ObjectInputStream) -> readObject
    void writeObject(java.io.ObjectOutputStream) -> writeObject
org.mozilla.javascript.IdScriptableObject$PrototypeValues -> org.mozilla.javascript.IdScriptableObject$PrototypeValues:
    long serialVersionUID -> serialVersionUID
    int NAME_SLOT -> NAME_SLOT
    int SLOT_SPAN -> SLOT_SPAN
    org.mozilla.javascript.IdScriptableObject obj -> obj
    int maxId -> maxId
    java.lang.Object[] valueArray -> valueArray
    short[] attributeArray -> attributeArray
    int constructorId -> constructorId
    org.mozilla.javascript.IdFunctionObject constructor -> constructor
    short constructorAttrs -> constructorAttrs
    int getMaxId() -> getMaxId
    void initValue(int,java.lang.String,java.lang.Object,int) -> initValue
    void initSlot(int,java.lang.String,java.lang.Object,int) -> initSlot
    org.mozilla.javascript.IdFunctionObject createPrecachedConstructor() -> createPrecachedConstructor
    int findId(java.lang.String) -> findId
    boolean has(int) -> has
    java.lang.Object get(int) -> get
    void set(int,org.mozilla.javascript.Scriptable,java.lang.Object) -> set
    void delete(int) -> delete
    int getAttributes(int) -> getAttributes
    void setAttributes(int,int) -> setAttributes
    java.lang.Object[] getNames(boolean,java.lang.Object[]) -> getNames
    java.lang.Object ensureId(int) -> ensureId
org.mozilla.javascript.ImporterTopLevel -> org.mozilla.javascript.ImporterTopLevel:
    long serialVersionUID -> serialVersionUID
    java.lang.Object IMPORTER_TAG -> IMPORTER_TAG
    int Id_constructor -> Id_constructor
    int Id_importClass -> Id_importClass
    int Id_importPackage -> Id_importPackage
    int MAX_PROTOTYPE_ID -> MAX_PROTOTYPE_ID
    org.mozilla.javascript.ObjArray importedPackages -> importedPackages
    boolean topScopeFlag -> topScopeFlag
    java.lang.String getClassName() -> getClassName
    void init(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,boolean) -> init
    void initStandardObjects(org.mozilla.javascript.Context,boolean) -> initStandardObjects
    boolean has(java.lang.String,org.mozilla.javascript.Scriptable) -> has
    java.lang.Object get(java.lang.String,org.mozilla.javascript.Scriptable) -> get
    java.lang.Object getPackageProperty(java.lang.String,org.mozilla.javascript.Scriptable) -> getPackageProperty
    void importPackage(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object[],org.mozilla.javascript.Function) -> importPackage
    java.lang.Object js_construct(org.mozilla.javascript.Scriptable,java.lang.Object[]) -> js_construct
    java.lang.Object js_importClass(java.lang.Object[]) -> js_importClass
    java.lang.Object js_importPackage(java.lang.Object[]) -> js_importPackage
    void importPackage(org.mozilla.javascript.NativeJavaPackage) -> importPackage
    void importClass(org.mozilla.javascript.NativeJavaClass) -> importClass
    void initPrototypeId(int) -> initPrototypeId
    java.lang.Object execIdCall(org.mozilla.javascript.IdFunctionObject,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> execIdCall
    org.mozilla.javascript.ImporterTopLevel realThis(org.mozilla.javascript.Scriptable,org.mozilla.javascript.IdFunctionObject) -> realThis
    int findPrototypeId(java.lang.String) -> findPrototypeId
org.mozilla.javascript.InterfaceAdapter -> org.mozilla.javascript.InterfaceAdapter:
    java.lang.Object proxyHelper -> proxyHelper
    java.lang.Object create(org.mozilla.javascript.Context,java.lang.Class,org.mozilla.javascript.ScriptableObject) -> create
    java.lang.Object invoke(org.mozilla.javascript.ContextFactory,java.lang.Object,org.mozilla.javascript.Scriptable,java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> invoke
    java.lang.Object invokeImpl(org.mozilla.javascript.Context,java.lang.Object,org.mozilla.javascript.Scriptable,java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> invokeImpl
org.mozilla.javascript.InterfaceAdapter$1 -> org.mozilla.javascript.InterfaceAdapter$1:
    java.lang.Object val$target -> val$target
    org.mozilla.javascript.Scriptable val$topScope -> val$topScope
    java.lang.Object val$thisObject -> val$thisObject
    java.lang.reflect.Method val$method -> val$method
    java.lang.Object[] val$args -> val$args
    org.mozilla.javascript.InterfaceAdapter this$0 -> this$0
    java.lang.Object run(org.mozilla.javascript.Context) -> run
org.mozilla.javascript.InterpretedFunction -> org.mozilla.javascript.InterpretedFunction:
    long serialVersionUID -> serialVersionUID
    org.mozilla.javascript.InterpreterData idata -> idata
    org.mozilla.javascript.SecurityController securityController -> securityController
    java.lang.Object securityDomain -> securityDomain
    org.mozilla.javascript.InterpretedFunction createScript(org.mozilla.javascript.InterpreterData,java.lang.Object) -> createScript
    org.mozilla.javascript.InterpretedFunction createFunction(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.InterpreterData,java.lang.Object) -> createFunction
    org.mozilla.javascript.InterpretedFunction createFunction(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.InterpretedFunction,int) -> createFunction
    java.lang.String getFunctionName() -> getFunctionName
    java.lang.Object call(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> call
    java.lang.Object exec(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable) -> exec
    boolean isScript() -> isScript
    java.lang.String getEncodedSource() -> getEncodedSource
    org.mozilla.javascript.debug.DebuggableScript getDebuggableView() -> getDebuggableView
    java.lang.Object resumeGenerator(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,int,java.lang.Object,java.lang.Object) -> resumeGenerator
    int getLanguageVersion() -> getLanguageVersion
    int getParamCount() -> getParamCount
    int getParamAndVarCount() -> getParamAndVarCount
    java.lang.String getParamOrVarName(int) -> getParamOrVarName
    boolean getParamOrVarConst(int) -> getParamOrVarConst
org.mozilla.javascript.Interpreter -> org.mozilla.javascript.Interpreter:
    org.mozilla.javascript.InterpreterData itsData -> itsData
    int EXCEPTION_TRY_START_SLOT -> EXCEPTION_TRY_START_SLOT
    int EXCEPTION_TRY_END_SLOT -> EXCEPTION_TRY_END_SLOT
    int EXCEPTION_HANDLER_SLOT -> EXCEPTION_HANDLER_SLOT
    int EXCEPTION_TYPE_SLOT -> EXCEPTION_TYPE_SLOT
    int EXCEPTION_LOCAL_SLOT -> EXCEPTION_LOCAL_SLOT
    int EXCEPTION_SCOPE_SLOT -> EXCEPTION_SCOPE_SLOT
    int EXCEPTION_SLOT_SIZE -> EXCEPTION_SLOT_SIZE
    org.mozilla.javascript.Interpreter$CallFrame captureFrameForGenerator(org.mozilla.javascript.Interpreter$CallFrame) -> captureFrameForGenerator
    java.lang.Object compile(org.mozilla.javascript.CompilerEnvirons,org.mozilla.javascript.ast.ScriptNode,java.lang.String,boolean) -> compile
    org.mozilla.javascript.Script createScriptObject(java.lang.Object,java.lang.Object) -> createScriptObject
    void setEvalScriptFlag(org.mozilla.javascript.Script) -> setEvalScriptFlag
    org.mozilla.javascript.Function createFunctionObject(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object,java.lang.Object) -> createFunctionObject
    int getShort(byte[],int) -> getShort
    int getIndex(byte[],int) -> getIndex
    int getInt(byte[],int) -> getInt
    int getExceptionHandler(org.mozilla.javascript.Interpreter$CallFrame,boolean) -> getExceptionHandler
    void dumpICode(org.mozilla.javascript.InterpreterData) -> dumpICode
    int bytecodeSpan(int) -> bytecodeSpan
    int[] getLineNumbers(org.mozilla.javascript.InterpreterData) -> getLineNumbers
    void captureStackInfo(org.mozilla.javascript.RhinoException) -> captureStackInfo
    java.lang.String getSourcePositionFromStack(org.mozilla.javascript.Context,int[]) -> getSourcePositionFromStack
    java.lang.String getPatchedStack(org.mozilla.javascript.RhinoException,java.lang.String) -> getPatchedStack
    java.util.List getScriptStack(org.mozilla.javascript.RhinoException) -> getScriptStack
    org.mozilla.javascript.ScriptStackElement[][] getScriptStackElements(org.mozilla.javascript.RhinoException) -> getScriptStackElements
    java.lang.String getEncodedSource(org.mozilla.javascript.InterpreterData) -> getEncodedSource
    void initFunction(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.InterpretedFunction,int) -> initFunction
    java.lang.Object interpret(org.mozilla.javascript.InterpretedFunction,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> interpret
    java.lang.Object resumeGenerator(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,int,java.lang.Object,java.lang.Object) -> resumeGenerator
    java.lang.Object restartContinuation(org.mozilla.javascript.NativeContinuation,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> restartContinuation
    java.lang.Object interpretLoop(org.mozilla.javascript.Context,org.mozilla.javascript.Interpreter$CallFrame,java.lang.Object) -> interpretLoop
    int doInOrInstanceof(org.mozilla.javascript.Context,int,java.lang.Object[],double[],int) -> doInOrInstanceof
    int doCompare(org.mozilla.javascript.Interpreter$CallFrame,int,java.lang.Object[],double[],int) -> doCompare
    int doBitOp(org.mozilla.javascript.Interpreter$CallFrame,int,java.lang.Object[],double[],int) -> doBitOp
    int doDelName(org.mozilla.javascript.Context,int,java.lang.Object[],double[],int) -> doDelName
    int doGetElem(org.mozilla.javascript.Context,org.mozilla.javascript.Interpreter$CallFrame,java.lang.Object[],double[],int) -> doGetElem
    int doSetElem(org.mozilla.javascript.Context,java.lang.Object[],double[],int) -> doSetElem
    int doElemIncDec(org.mozilla.javascript.Context,org.mozilla.javascript.Interpreter$CallFrame,byte[],java.lang.Object[],double[],int) -> doElemIncDec
    int doCallSpecial(org.mozilla.javascript.Context,org.mozilla.javascript.Interpreter$CallFrame,java.lang.Object[],double[],int,byte[],int) -> doCallSpecial
    int doSetConstVar(org.mozilla.javascript.Interpreter$CallFrame,java.lang.Object[],double[],int,java.lang.Object[],double[],int[],int) -> doSetConstVar
    int doSetVar(org.mozilla.javascript.Interpreter$CallFrame,java.lang.Object[],double[],int,java.lang.Object[],double[],int[],int) -> doSetVar
    int doGetVar(org.mozilla.javascript.Interpreter$CallFrame,java.lang.Object[],double[],int,java.lang.Object[],double[],int) -> doGetVar
    int doVarIncDec(org.mozilla.javascript.Context,org.mozilla.javascript.Interpreter$CallFrame,java.lang.Object[],double[],int,java.lang.Object[],double[],int) -> doVarIncDec
    int doRefMember(org.mozilla.javascript.Context,java.lang.Object[],double[],int,int) -> doRefMember
    int doRefNsMember(org.mozilla.javascript.Context,java.lang.Object[],double[],int,int) -> doRefNsMember
    int doRefNsName(org.mozilla.javascript.Context,org.mozilla.javascript.Interpreter$CallFrame,java.lang.Object[],double[],int,int) -> doRefNsName
    org.mozilla.javascript.Interpreter$CallFrame initFrameForNoSuchMethod(org.mozilla.javascript.Context,org.mozilla.javascript.Interpreter$CallFrame,int,java.lang.Object[],double[],int,int,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,org.mozilla.javascript.ScriptRuntime$NoSuchMethodShim,org.mozilla.javascript.InterpretedFunction) -> initFrameForNoSuchMethod
    boolean doEquals(java.lang.Object[],double[],int) -> doEquals
    boolean doShallowEquals(java.lang.Object[],double[],int) -> doShallowEquals
    org.mozilla.javascript.Interpreter$CallFrame processThrowable(org.mozilla.javascript.Context,java.lang.Object,org.mozilla.javascript.Interpreter$CallFrame,int,boolean) -> processThrowable
    java.lang.Object freezeGenerator(org.mozilla.javascript.Context,org.mozilla.javascript.Interpreter$CallFrame,int,org.mozilla.javascript.Interpreter$GeneratorState) -> freezeGenerator
    java.lang.Object thawGenerator(org.mozilla.javascript.Interpreter$CallFrame,int,org.mozilla.javascript.Interpreter$GeneratorState,int) -> thawGenerator
    org.mozilla.javascript.Interpreter$CallFrame initFrameForApplyOrCall(org.mozilla.javascript.Context,org.mozilla.javascript.Interpreter$CallFrame,int,java.lang.Object[],double[],int,int,org.mozilla.javascript.Scriptable,org.mozilla.javascript.IdFunctionObject,org.mozilla.javascript.InterpretedFunction) -> initFrameForApplyOrCall
    void initFrame(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[],double[],int,int,org.mozilla.javascript.InterpretedFunction,org.mozilla.javascript.Interpreter$CallFrame,org.mozilla.javascript.Interpreter$CallFrame) -> initFrame
    boolean isFrameEnterExitRequired(org.mozilla.javascript.Interpreter$CallFrame) -> isFrameEnterExitRequired
    void enterFrame(org.mozilla.javascript.Context,org.mozilla.javascript.Interpreter$CallFrame,java.lang.Object[],boolean) -> enterFrame
    void exitFrame(org.mozilla.javascript.Context,org.mozilla.javascript.Interpreter$CallFrame,java.lang.Object) -> exitFrame
    void setCallResult(org.mozilla.javascript.Interpreter$CallFrame,java.lang.Object,double) -> setCallResult
    org.mozilla.javascript.NativeContinuation captureContinuation(org.mozilla.javascript.Context) -> captureContinuation
    org.mozilla.javascript.NativeContinuation captureContinuation(org.mozilla.javascript.Context,org.mozilla.javascript.Interpreter$CallFrame,boolean) -> captureContinuation
    int stack_int32(org.mozilla.javascript.Interpreter$CallFrame,int) -> stack_int32
    double stack_double(org.mozilla.javascript.Interpreter$CallFrame,int) -> stack_double
    boolean stack_boolean(org.mozilla.javascript.Interpreter$CallFrame,int) -> stack_boolean
    void doAdd(java.lang.Object[],double[],int,org.mozilla.javascript.Context) -> doAdd
    int doArithmetic(org.mozilla.javascript.Interpreter$CallFrame,int,java.lang.Object[],double[],int) -> doArithmetic
    java.lang.Object[] getArgsArray(java.lang.Object[],double[],int,int) -> getArgsArray
    void addInstructionCount(org.mozilla.javascript.Context,org.mozilla.javascript.Interpreter$CallFrame,int) -> addInstructionCount
org.mozilla.javascript.Interpreter$1 -> org.mozilla.javascript.Interpreter$1:
org.mozilla.javascript.Interpreter$CallFrame -> org.mozilla.javascript.Interpreter$CallFrame:
    long serialVersionUID -> serialVersionUID
    org.mozilla.javascript.Interpreter$CallFrame parentFrame -> parentFrame
    int frameIndex -> frameIndex
    boolean frozen -> frozen
    org.mozilla.javascript.InterpretedFunction fnOrScript -> fnOrScript
    org.mozilla.javascript.InterpreterData idata -> idata
    java.lang.Object[] stack -> stack
    int[] stackAttributes -> stackAttributes
    double[] sDbl -> sDbl
    org.mozilla.javascript.Interpreter$CallFrame varSource -> varSource
    int localShift -> localShift
    int emptyStackTop -> emptyStackTop
    org.mozilla.javascript.debug.DebugFrame debuggerFrame -> debuggerFrame
    boolean useActivation -> useActivation
    boolean isContinuationsTopFrame -> isContinuationsTopFrame
    org.mozilla.javascript.Scriptable thisObj -> thisObj
    java.lang.Object result -> result
    double resultDbl -> resultDbl
    int pc -> pc
    int pcPrevBranch -> pcPrevBranch
    int pcSourceLineStart -> pcSourceLineStart
    org.mozilla.javascript.Scriptable scope -> scope
    int savedStackTop -> savedStackTop
    int savedCallOp -> savedCallOp
    java.lang.Object throwable -> throwable
    org.mozilla.javascript.Interpreter$CallFrame cloneFrozen() -> cloneFrozen
org.mozilla.javascript.Interpreter$ContinuationJump -> org.mozilla.javascript.Interpreter$ContinuationJump:
    long serialVersionUID -> serialVersionUID
    org.mozilla.javascript.Interpreter$CallFrame capturedFrame -> capturedFrame
    org.mozilla.javascript.Interpreter$CallFrame branchFrame -> branchFrame
    java.lang.Object result -> result
    double resultDbl -> resultDbl
org.mozilla.javascript.Interpreter$GeneratorState -> org.mozilla.javascript.Interpreter$GeneratorState:
    int operation -> operation
    java.lang.Object value -> value
    java.lang.RuntimeException returnedException -> returnedException
org.mozilla.javascript.InterpreterData -> org.mozilla.javascript.InterpreterData:
    long serialVersionUID -> serialVersionUID
    int INITIAL_MAX_ICODE_LENGTH -> INITIAL_MAX_ICODE_LENGTH
    int INITIAL_STRINGTABLE_SIZE -> INITIAL_STRINGTABLE_SIZE
    int INITIAL_NUMBERTABLE_SIZE -> INITIAL_NUMBERTABLE_SIZE
    java.lang.String itsName -> itsName
    java.lang.String itsSourceFile -> itsSourceFile
    boolean itsNeedsActivation -> itsNeedsActivation
    int itsFunctionType -> itsFunctionType
    java.lang.String[] itsStringTable -> itsStringTable
    double[] itsDoubleTable -> itsDoubleTable
    org.mozilla.javascript.InterpreterData[] itsNestedFunctions -> itsNestedFunctions
    java.lang.Object[] itsRegExpLiterals -> itsRegExpLiterals
    byte[] itsICode -> itsICode
    int[] itsExceptionTable -> itsExceptionTable
    int itsMaxVars -> itsMaxVars
    int itsMaxLocals -> itsMaxLocals
    int itsMaxStack -> itsMaxStack
    int itsMaxFrameArray -> itsMaxFrameArray
    java.lang.String[] argNames -> argNames
    boolean[] argIsConst -> argIsConst
    int argCount -> argCount
    int itsMaxCalleeArgs -> itsMaxCalleeArgs
    java.lang.String encodedSource -> encodedSource
    int encodedSourceStart -> encodedSourceStart
    int encodedSourceEnd -> encodedSourceEnd
    int languageVersion -> languageVersion
    boolean isStrict -> isStrict
    boolean topLevel -> topLevel
    java.lang.Object[] literalIds -> literalIds
    org.mozilla.javascript.UintMap longJumps -> longJumps
    int firstLinePC -> firstLinePC
    org.mozilla.javascript.InterpreterData parentData -> parentData
    boolean evalScriptFlag -> evalScriptFlag
    void init() -> init
    boolean isTopLevel() -> isTopLevel
    boolean isFunction() -> isFunction
    java.lang.String getFunctionName() -> getFunctionName
    int getParamCount() -> getParamCount
    int getParamAndVarCount() -> getParamAndVarCount
    java.lang.String getParamOrVarName(int) -> getParamOrVarName
    boolean getParamOrVarConst(int) -> getParamOrVarConst
    java.lang.String getSourceName() -> getSourceName
    boolean isGeneratedScript() -> isGeneratedScript
    int[] getLineNumbers() -> getLineNumbers
    int getFunctionCount() -> getFunctionCount
    org.mozilla.javascript.debug.DebuggableScript getFunction(int) -> getFunction
    org.mozilla.javascript.debug.DebuggableScript getParent() -> getParent
org.mozilla.javascript.JavaAdapter -> org.mozilla.javascript.JavaAdapter:
    java.lang.Object FTAG -> FTAG
    int Id_JavaAdapter -> Id_JavaAdapter
    void init(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,boolean) -> init
    java.lang.Object execIdCall(org.mozilla.javascript.IdFunctionObject,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> execIdCall
    java.lang.Object convertResult(java.lang.Object,java.lang.Class) -> convertResult
    org.mozilla.javascript.Scriptable createAdapterWrapper(org.mozilla.javascript.Scriptable,java.lang.Object) -> createAdapterWrapper
    java.lang.Object getAdapterSelf(java.lang.Class,java.lang.Object) -> getAdapterSelf
    java.lang.Object js_createAdapter(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> js_createAdapter
    void writeAdapterObject(java.lang.Object,java.io.ObjectOutputStream) -> writeAdapterObject
    java.lang.Object readAdapterObject(org.mozilla.javascript.Scriptable,java.io.ObjectInputStream) -> readAdapterObject
    org.mozilla.javascript.ObjToIntMap getObjectFunctionNames(org.mozilla.javascript.Scriptable) -> getObjectFunctionNames
    java.lang.Class getAdapterClass(org.mozilla.javascript.Scriptable,java.lang.Class,java.lang.Class[],org.mozilla.javascript.Scriptable) -> getAdapterClass
    byte[] createAdapterCode(org.mozilla.javascript.ObjToIntMap,java.lang.String,java.lang.Class,java.lang.Class[],java.lang.String) -> createAdapterCode
    java.lang.reflect.Method[] getOverridableMethods(java.lang.Class) -> getOverridableMethods
    void appendOverridableMethods(java.lang.Class,java.util.ArrayList,java.util.HashSet) -> appendOverridableMethods
    java.lang.Class loadAdapterClass(java.lang.String,byte[]) -> loadAdapterClass
    org.mozilla.javascript.Function getFunction(org.mozilla.javascript.Scriptable,java.lang.String) -> getFunction
    java.lang.Object callMethod(org.mozilla.javascript.ContextFactory,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Function,java.lang.Object[],long) -> callMethod
    java.lang.Object doCall(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Function,java.lang.Object[],long) -> doCall
    org.mozilla.javascript.Scriptable runScript(org.mozilla.javascript.Script) -> runScript
    void generateCtor(org.mozilla.classfile.ClassFileWriter,java.lang.String,java.lang.String,java.lang.reflect.Constructor) -> generateCtor
    void generateSerialCtor(org.mozilla.classfile.ClassFileWriter,java.lang.String,java.lang.String) -> generateSerialCtor
    void generateEmptyCtor(org.mozilla.classfile.ClassFileWriter,java.lang.String,java.lang.String,java.lang.String) -> generateEmptyCtor
    void generatePushWrappedArgs(org.mozilla.classfile.ClassFileWriter,java.lang.Class[],int) -> generatePushWrappedArgs
    int generateWrapArg(org.mozilla.classfile.ClassFileWriter,int,java.lang.Class) -> generateWrapArg
    void generateReturnResult(org.mozilla.classfile.ClassFileWriter,java.lang.Class,boolean) -> generateReturnResult
    void generateMethod(org.mozilla.classfile.ClassFileWriter,java.lang.String,java.lang.String,java.lang.Class[],java.lang.Class,boolean) -> generateMethod
    int generatePushParam(org.mozilla.classfile.ClassFileWriter,int,java.lang.Class) -> generatePushParam
    void generatePopResult(org.mozilla.classfile.ClassFileWriter,java.lang.Class) -> generatePopResult
    void generateSuper(org.mozilla.classfile.ClassFileWriter,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Class[],java.lang.Class) -> generateSuper
    java.lang.String getMethodSignature(java.lang.reflect.Method,java.lang.Class[]) -> getMethodSignature
    int appendMethodSignature(java.lang.Class[],java.lang.Class,java.lang.StringBuilder) -> appendMethodSignature
    java.lang.StringBuilder appendTypeString(java.lang.StringBuilder,java.lang.Class) -> appendTypeString
    int[] getArgsToConvert(java.lang.Class[]) -> getArgsToConvert
    java.lang.Object access$000(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Function,java.lang.Object[],long) -> access$000
org.mozilla.javascript.JavaAdapter$1 -> org.mozilla.javascript.JavaAdapter$1:
    org.mozilla.javascript.Scriptable val$scope -> val$scope
    org.mozilla.javascript.Scriptable val$thisObj -> val$thisObj
    org.mozilla.javascript.Function val$f -> val$f
    java.lang.Object[] val$args -> val$args
    long val$argsToWrap -> val$argsToWrap
    java.lang.Object run(org.mozilla.javascript.Context) -> run
org.mozilla.javascript.JavaAdapter$2 -> org.mozilla.javascript.JavaAdapter$2:
    org.mozilla.javascript.Script val$script -> val$script
    java.lang.Object run(org.mozilla.javascript.Context) -> run
org.mozilla.javascript.JavaAdapter$JavaAdapterSignature -> org.mozilla.javascript.JavaAdapter$JavaAdapterSignature:
    java.lang.Class superClass -> superClass
    java.lang.Class[] interfaces -> interfaces
    org.mozilla.javascript.ObjToIntMap names -> names
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.mozilla.javascript.JavaMembers -> org.mozilla.javascript.JavaMembers:
    java.lang.Class cl -> cl
    java.util.Map members -> members
    java.util.Map fieldAndMethods -> fieldAndMethods
    java.util.Map staticMembers -> staticMembers
    java.util.Map staticFieldAndMethods -> staticFieldAndMethods
    org.mozilla.javascript.NativeJavaMethod ctors -> ctors
    boolean has(java.lang.String,boolean) -> has
    java.lang.Object get(org.mozilla.javascript.Scriptable,java.lang.String,java.lang.Object,boolean) -> get
    void put(org.mozilla.javascript.Scriptable,java.lang.String,java.lang.Object,java.lang.Object,boolean) -> put
    java.lang.Object[] getIds(boolean) -> getIds
    java.lang.String javaSignature(java.lang.Class) -> javaSignature
    java.lang.String liveConnectSignature(java.lang.Class[]) -> liveConnectSignature
    org.mozilla.javascript.MemberBox findExplicitFunction(java.lang.String,boolean) -> findExplicitFunction
    java.lang.Object getExplicitFunction(org.mozilla.javascript.Scriptable,java.lang.String,java.lang.Object,boolean) -> getExplicitFunction
    java.lang.reflect.Method[] discoverAccessibleMethods(java.lang.Class,boolean,boolean) -> discoverAccessibleMethods
    void discoverAccessibleMethods(java.lang.Class,java.util.Map,boolean,boolean) -> discoverAccessibleMethods
    void reflect(org.mozilla.javascript.Scriptable,boolean,boolean) -> reflect
    java.lang.reflect.Constructor[] getAccessibleConstructors(boolean) -> getAccessibleConstructors
    java.lang.reflect.Field[] getAccessibleFields(boolean,boolean) -> getAccessibleFields
    org.mozilla.javascript.MemberBox findGetter(boolean,java.util.Map,java.lang.String,java.lang.String) -> findGetter
    org.mozilla.javascript.MemberBox extractGetMethod(org.mozilla.javascript.MemberBox[],boolean) -> extractGetMethod
    org.mozilla.javascript.MemberBox extractSetMethod(java.lang.Class,org.mozilla.javascript.MemberBox[],boolean) -> extractSetMethod
    org.mozilla.javascript.MemberBox extractSetMethod(org.mozilla.javascript.MemberBox[],boolean) -> extractSetMethod
    java.util.Map getFieldAndMethodsObjects(org.mozilla.javascript.Scriptable,java.lang.Object,boolean) -> getFieldAndMethodsObjects
    org.mozilla.javascript.JavaMembers lookupClass(org.mozilla.javascript.Scriptable,java.lang.Class,java.lang.Class,boolean) -> lookupClass
    java.lang.RuntimeException reportMemberNotFound(java.lang.String) -> reportMemberNotFound
org.mozilla.javascript.JavaMembers$MethodSignature -> org.mozilla.javascript.JavaMembers$MethodSignature:
    java.lang.String name -> name
    java.lang.Class[] args -> args
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.mozilla.javascript.JavaScriptException -> org.mozilla.javascript.JavaScriptException:
    long serialVersionUID -> serialVersionUID
    java.lang.Object value -> value
    java.lang.String details() -> details
    java.lang.Object getValue() -> getValue
    java.lang.String getSourceName() -> getSourceName
    int getLineNumber() -> getLineNumber
org.mozilla.javascript.Kit -> org.mozilla.javascript.Kit:
    java.lang.reflect.Method Throwable_initCause -> Throwable_initCause
    java.lang.Class classOrNull(java.lang.String) -> classOrNull
    java.lang.Class classOrNull(java.lang.ClassLoader,java.lang.String) -> classOrNull
    java.lang.Object newInstanceOrNull(java.lang.Class) -> newInstanceOrNull
    boolean testIfCanLoadRhinoClasses(java.lang.ClassLoader) -> testIfCanLoadRhinoClasses
    java.lang.RuntimeException initCause(java.lang.RuntimeException,java.lang.Throwable) -> initCause
    int xDigitToInt(int,int) -> xDigitToInt
    java.lang.Object addListener(java.lang.Object,java.lang.Object) -> addListener
    java.lang.Object removeListener(java.lang.Object,java.lang.Object) -> removeListener
    java.lang.Object getListener(java.lang.Object,int) -> getListener
    java.lang.Object initHash(java.util.Map,java.lang.Object,java.lang.Object) -> initHash
    java.lang.Object makeHashKeyFromPair(java.lang.Object,java.lang.Object) -> makeHashKeyFromPair
    java.lang.String readReader(java.io.Reader) -> readReader
    byte[] readStream(java.io.InputStream,int) -> readStream
    java.lang.RuntimeException codeBug() -> codeBug
    java.lang.RuntimeException codeBug(java.lang.String) -> codeBug
org.mozilla.javascript.Kit$ComplexKey -> org.mozilla.javascript.Kit$ComplexKey:
    java.lang.Object key1 -> key1
    java.lang.Object key2 -> key2
    int hash -> hash
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.mozilla.javascript.LazilyLoadedCtor -> org.mozilla.javascript.LazilyLoadedCtor:
    long serialVersionUID -> serialVersionUID
    int STATE_BEFORE_INIT -> STATE_BEFORE_INIT
    int STATE_INITIALIZING -> STATE_INITIALIZING
    int STATE_WITH_VALUE -> STATE_WITH_VALUE
    org.mozilla.javascript.ScriptableObject scope -> scope
    java.lang.String propertyName -> propertyName
    java.lang.String className -> className
    boolean sealed -> sealed
    boolean privileged -> privileged
    java.lang.Object initializedValue -> initializedValue
    int state -> state
    void init() -> init
    java.lang.Object getValue() -> getValue
    java.lang.Object buildValue() -> buildValue
    java.lang.Object buildValue0() -> buildValue0
    java.lang.Class cast(java.lang.Class) -> cast
    java.lang.Object access$000(org.mozilla.javascript.LazilyLoadedCtor) -> access$000
org.mozilla.javascript.LazilyLoadedCtor$1 -> org.mozilla.javascript.LazilyLoadedCtor$1:
    org.mozilla.javascript.LazilyLoadedCtor this$0 -> this$0
    java.lang.Object run() -> run
org.mozilla.javascript.MemberBox -> org.mozilla.javascript.MemberBox:
    long serialVersionUID -> serialVersionUID
    java.lang.reflect.Member memberObject -> memberObject
    java.lang.Class[] argTypes -> argTypes
    java.lang.Object delegateTo -> delegateTo
    boolean vararg -> vararg
    java.lang.Class[] primitives -> primitives
    void init(java.lang.reflect.Method) -> init
    void init(java.lang.reflect.Constructor) -> init
    java.lang.reflect.Method method() -> method
    java.lang.reflect.Constructor ctor() -> ctor
    java.lang.reflect.Member member() -> member
    boolean isMethod() -> isMethod
    boolean isCtor() -> isCtor
    boolean isStatic() -> isStatic
    java.lang.String getName() -> getName
    java.lang.Class getDeclaringClass() -> getDeclaringClass
    java.lang.String toJavaDeclaration() -> toJavaDeclaration
    java.lang.String toString() -> toString
    java.lang.Object invoke(java.lang.Object,java.lang.Object[]) -> invoke
    java.lang.Object newInstance(java.lang.Object[]) -> newInstance
    java.lang.reflect.Method searchAccessibleMethod(java.lang.reflect.Method,java.lang.Class[]) -> searchAccessibleMethod
    void readObject(java.io.ObjectInputStream) -> readObject
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void writeMember(java.io.ObjectOutputStream,java.lang.reflect.Member) -> writeMember
    java.lang.reflect.Member readMember(java.io.ObjectInputStream) -> readMember
    void writeParameters(java.io.ObjectOutputStream,java.lang.Class[]) -> writeParameters
    java.lang.Class[] readParameters(java.io.ObjectInputStream) -> readParameters
org.mozilla.javascript.NativeArray -> org.mozilla.javascript.NativeArray:
    long serialVersionUID -> serialVersionUID
    java.lang.Object ARRAY_TAG -> ARRAY_TAG
    java.lang.Integer NEGATIVE_ONE -> NEGATIVE_ONE
    int Id_length -> Id_length
    int MAX_INSTANCE_ID -> MAX_INSTANCE_ID
    int Id_constructor -> Id_constructor
    int Id_toString -> Id_toString
    int Id_toLocaleString -> Id_toLocaleString
    int Id_toSource -> Id_toSource
    int Id_join -> Id_join
    int Id_reverse -> Id_reverse
    int Id_sort -> Id_sort
    int Id_push -> Id_push
    int Id_pop -> Id_pop
    int Id_shift -> Id_shift
    int Id_unshift -> Id_unshift
    int Id_splice -> Id_splice
    int Id_concat -> Id_concat
    int Id_slice -> Id_slice
    int Id_indexOf -> Id_indexOf
    int Id_lastIndexOf -> Id_lastIndexOf
    int Id_every -> Id_every
    int Id_filter -> Id_filter
    int Id_forEach -> Id_forEach
    int Id_map -> Id_map
    int Id_some -> Id_some
    int Id_reduce -> Id_reduce
    int Id_reduceRight -> Id_reduceRight
    int MAX_PROTOTYPE_ID -> MAX_PROTOTYPE_ID
    int ConstructorId_join -> ConstructorId_join
    int ConstructorId_reverse -> ConstructorId_reverse
    int ConstructorId_sort -> ConstructorId_sort
    int ConstructorId_push -> ConstructorId_push
    int ConstructorId_pop -> ConstructorId_pop
    int ConstructorId_shift -> ConstructorId_shift
    int ConstructorId_unshift -> ConstructorId_unshift
    int ConstructorId_splice -> ConstructorId_splice
    int ConstructorId_concat -> ConstructorId_concat
    int ConstructorId_slice -> ConstructorId_slice
    int ConstructorId_indexOf -> ConstructorId_indexOf
    int ConstructorId_lastIndexOf -> ConstructorId_lastIndexOf
    int ConstructorId_every -> ConstructorId_every
    int ConstructorId_filter -> ConstructorId_filter
    int ConstructorId_forEach -> ConstructorId_forEach
    int ConstructorId_map -> ConstructorId_map
    int ConstructorId_some -> ConstructorId_some
    int ConstructorId_reduce -> ConstructorId_reduce
    int ConstructorId_reduceRight -> ConstructorId_reduceRight
    int ConstructorId_isArray -> ConstructorId_isArray
    long length -> length
    int lengthAttr -> lengthAttr
    java.lang.Object[] dense -> dense
    boolean denseOnly -> denseOnly
    int maximumInitialCapacity -> maximumInitialCapacity
    int DEFAULT_INITIAL_CAPACITY -> DEFAULT_INITIAL_CAPACITY
    double GROW_FACTOR -> GROW_FACTOR
    int MAX_PRE_GROW_SIZE -> MAX_PRE_GROW_SIZE
    void init(org.mozilla.javascript.Scriptable,boolean) -> init
    int getMaximumInitialCapacity() -> getMaximumInitialCapacity
    void setMaximumInitialCapacity(int) -> setMaximumInitialCapacity
    java.lang.String getClassName() -> getClassName
    int getMaxInstanceId() -> getMaxInstanceId
    void setInstanceIdAttributes(int,int) -> setInstanceIdAttributes
    int findInstanceIdInfo(java.lang.String) -> findInstanceIdInfo
    java.lang.String getInstanceIdName(int) -> getInstanceIdName
    java.lang.Object getInstanceIdValue(int) -> getInstanceIdValue
    void setInstanceIdValue(int,java.lang.Object) -> setInstanceIdValue
    void fillConstructorProperties(org.mozilla.javascript.IdFunctionObject) -> fillConstructorProperties
    void initPrototypeId(int) -> initPrototypeId
    java.lang.Object execIdCall(org.mozilla.javascript.IdFunctionObject,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> execIdCall
    java.lang.Object get(int,org.mozilla.javascript.Scriptable) -> get
    boolean has(int,org.mozilla.javascript.Scriptable) -> has
    long toArrayIndex(java.lang.Object) -> toArrayIndex
    long toArrayIndex(java.lang.String) -> toArrayIndex
    long toArrayIndex(double) -> toArrayIndex
    int toDenseIndex(java.lang.Object) -> toDenseIndex
    void put(java.lang.String,org.mozilla.javascript.Scriptable,java.lang.Object) -> put
    boolean ensureCapacity(int) -> ensureCapacity
    void put(int,org.mozilla.javascript.Scriptable,java.lang.Object) -> put
    void delete(int) -> delete
    java.lang.Object[] getIds() -> getIds
    java.lang.Object[] getAllIds() -> getAllIds
    java.lang.Integer[] getIndexIds() -> getIndexIds
    java.lang.Object getDefaultValue(java.lang.Class) -> getDefaultValue
    org.mozilla.javascript.ScriptableObject defaultIndexPropertyDescriptor(java.lang.Object) -> defaultIndexPropertyDescriptor
    int getAttributes(int) -> getAttributes
    org.mozilla.javascript.ScriptableObject getOwnPropertyDescriptor(org.mozilla.javascript.Context,java.lang.Object) -> getOwnPropertyDescriptor
    void defineOwnProperty(org.mozilla.javascript.Context,java.lang.Object,org.mozilla.javascript.ScriptableObject,boolean) -> defineOwnProperty
    java.lang.Object jsConstructor(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> jsConstructor
    long getLength() -> getLength
    long jsGet_length() -> jsGet_length
    void setDenseOnly(boolean) -> setDenseOnly
    void setLength(java.lang.Object) -> setLength
    long getLengthProperty(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable) -> getLengthProperty
    java.lang.Object setLengthProperty(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,long) -> setLengthProperty
    void deleteElem(org.mozilla.javascript.Scriptable,long) -> deleteElem
    java.lang.Object getElem(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,long) -> getElem
    java.lang.Object getRawElem(org.mozilla.javascript.Scriptable,long) -> getRawElem
    void setElem(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,long,java.lang.Object) -> setElem
    void setRawElem(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,long,java.lang.Object) -> setRawElem
    java.lang.String toStringHelper(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,boolean,boolean) -> toStringHelper
    java.lang.String js_join(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> js_join
    org.mozilla.javascript.Scriptable js_reverse(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> js_reverse
    org.mozilla.javascript.Scriptable js_sort(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> js_sort
    java.lang.Object js_push(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> js_push
    java.lang.Object js_pop(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> js_pop
    java.lang.Object js_shift(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> js_shift
    java.lang.Object js_unshift(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> js_unshift
    java.lang.Object js_splice(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> js_splice
    org.mozilla.javascript.Scriptable js_concat(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> js_concat
    org.mozilla.javascript.Scriptable js_slice(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> js_slice
    long toSliceIndex(double,long) -> toSliceIndex
    java.lang.Object indexOfHelper(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object[],boolean) -> indexOfHelper
    java.lang.Object iterativeMethod(org.mozilla.javascript.Context,int,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> iterativeMethod
    java.lang.Object reduceMethod(org.mozilla.javascript.Context,int,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> reduceMethod
    boolean contains(java.lang.Object) -> contains
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean containsAll(java.util.Collection) -> containsAll
    int size() -> size
    java.lang.Object get(long) -> get
    java.lang.Object get(int) -> get
    int indexOf(java.lang.Object) -> indexOf
    int lastIndexOf(java.lang.Object) -> lastIndexOf
    java.util.Iterator iterator() -> iterator
    java.util.ListIterator listIterator() -> listIterator
    java.util.ListIterator listIterator(int) -> listIterator
    boolean add(java.lang.Object) -> add
    boolean remove(java.lang.Object) -> remove
    boolean addAll(java.util.Collection) -> addAll
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    void clear() -> clear
    void add(int,java.lang.Object) -> add
    boolean addAll(int,java.util.Collection) -> addAll
    java.lang.Object set(int,java.lang.Object) -> set
    java.lang.Object remove(int) -> remove
    java.util.List subList(int,int) -> subList
    int findPrototypeId(java.lang.String) -> findPrototypeId
org.mozilla.javascript.NativeArray$1 -> org.mozilla.javascript.NativeArray$1:
    java.lang.Object[] val$cmpBuf -> val$cmpBuf
    org.mozilla.javascript.Callable val$jsCompareFunction -> val$jsCompareFunction
    org.mozilla.javascript.Context val$cx -> val$cx
    org.mozilla.javascript.Scriptable val$scope -> val$scope
    org.mozilla.javascript.Scriptable val$funThis -> val$funThis
    int compare(java.lang.Object,java.lang.Object) -> compare
org.mozilla.javascript.NativeArray$2 -> org.mozilla.javascript.NativeArray$2:
    int compare(java.lang.Object,java.lang.Object) -> compare
org.mozilla.javascript.NativeArray$3 -> org.mozilla.javascript.NativeArray$3:
    int cursor -> cursor
    int val$start -> val$start
    int val$len -> val$len
    org.mozilla.javascript.NativeArray this$0 -> this$0
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    boolean hasPrevious() -> hasPrevious
    java.lang.Object previous() -> previous
    int nextIndex() -> nextIndex
    int previousIndex() -> previousIndex
    void remove() -> remove
    void add(java.lang.Object) -> add
    void set(java.lang.Object) -> set
org.mozilla.javascript.NativeBoolean -> org.mozilla.javascript.NativeBoolean:
    long serialVersionUID -> serialVersionUID
    java.lang.Object BOOLEAN_TAG -> BOOLEAN_TAG
    int Id_constructor -> Id_constructor
    int Id_toString -> Id_toString
    int Id_toSource -> Id_toSource
    int Id_valueOf -> Id_valueOf
    int MAX_PROTOTYPE_ID -> MAX_PROTOTYPE_ID
    boolean booleanValue -> booleanValue
    void init(org.mozilla.javascript.Scriptable,boolean) -> init
    java.lang.String getClassName() -> getClassName
    java.lang.Object getDefaultValue(java.lang.Class) -> getDefaultValue
    void initPrototypeId(int) -> initPrototypeId
    java.lang.Object execIdCall(org.mozilla.javascript.IdFunctionObject,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> execIdCall
    int findPrototypeId(java.lang.String) -> findPrototypeId
org.mozilla.javascript.NativeCall -> org.mozilla.javascript.NativeCall:
    long serialVersionUID -> serialVersionUID
    java.lang.Object CALL_TAG -> CALL_TAG
    int Id_constructor -> Id_constructor
    int MAX_PROTOTYPE_ID -> MAX_PROTOTYPE_ID
    org.mozilla.javascript.NativeFunction function -> function
    java.lang.Object[] originalArgs -> originalArgs
    org.mozilla.javascript.NativeCall parentActivationCall -> parentActivationCall
    void init(org.mozilla.javascript.Scriptable,boolean) -> init
    java.lang.String getClassName() -> getClassName
    int findPrototypeId(java.lang.String) -> findPrototypeId
    void initPrototypeId(int) -> initPrototypeId
    java.lang.Object execIdCall(org.mozilla.javascript.IdFunctionObject,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> execIdCall
org.mozilla.javascript.NativeContinuation -> org.mozilla.javascript.NativeContinuation:
    long serialVersionUID -> serialVersionUID
    java.lang.Object FTAG -> FTAG
    java.lang.Object implementation -> implementation
    int Id_constructor -> Id_constructor
    int MAX_PROTOTYPE_ID -> MAX_PROTOTYPE_ID
    void init(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,boolean) -> init
    java.lang.Object getImplementation() -> getImplementation
    void initImplementation(java.lang.Object) -> initImplementation
    java.lang.String getClassName() -> getClassName
    org.mozilla.javascript.Scriptable construct(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> construct
    java.lang.Object call(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> call
    boolean isContinuationConstructor(org.mozilla.javascript.IdFunctionObject) -> isContinuationConstructor
    void initPrototypeId(int) -> initPrototypeId
    java.lang.Object execIdCall(org.mozilla.javascript.IdFunctionObject,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> execIdCall
    int findPrototypeId(java.lang.String) -> findPrototypeId
org.mozilla.javascript.NativeDate -> org.mozilla.javascript.NativeDate:
    long serialVersionUID -> serialVersionUID
    java.lang.Object DATE_TAG -> DATE_TAG
    java.lang.String js_NaN_date_str -> js_NaN_date_str
    java.text.DateFormat isoFormat -> isoFormat
    double HalfTimeDomain -> HalfTimeDomain
    double HoursPerDay -> HoursPerDay
    double MinutesPerHour -> MinutesPerHour
    double SecondsPerMinute -> SecondsPerMinute
    double msPerSecond -> msPerSecond
    double MinutesPerDay -> MinutesPerDay
    double SecondsPerDay -> SecondsPerDay
    double SecondsPerHour -> SecondsPerHour
    double msPerDay -> msPerDay
    double msPerHour -> msPerHour
    double msPerMinute -> msPerMinute
    int MAXARGS -> MAXARGS
    int ConstructorId_now -> ConstructorId_now
    int ConstructorId_parse -> ConstructorId_parse
    int ConstructorId_UTC -> ConstructorId_UTC
    int Id_constructor -> Id_constructor
    int Id_toString -> Id_toString
    int Id_toTimeString -> Id_toTimeString
    int Id_toDateString -> Id_toDateString
    int Id_toLocaleString -> Id_toLocaleString
    int Id_toLocaleTimeString -> Id_toLocaleTimeString
    int Id_toLocaleDateString -> Id_toLocaleDateString
    int Id_toUTCString -> Id_toUTCString
    int Id_toSource -> Id_toSource
    int Id_valueOf -> Id_valueOf
    int Id_getTime -> Id_getTime
    int Id_getYear -> Id_getYear
    int Id_getFullYear -> Id_getFullYear
    int Id_getUTCFullYear -> Id_getUTCFullYear
    int Id_getMonth -> Id_getMonth
    int Id_getUTCMonth -> Id_getUTCMonth
    int Id_getDate -> Id_getDate
    int Id_getUTCDate -> Id_getUTCDate
    int Id_getDay -> Id_getDay
    int Id_getUTCDay -> Id_getUTCDay
    int Id_getHours -> Id_getHours
    int Id_getUTCHours -> Id_getUTCHours
    int Id_getMinutes -> Id_getMinutes
    int Id_getUTCMinutes -> Id_getUTCMinutes
    int Id_getSeconds -> Id_getSeconds
    int Id_getUTCSeconds -> Id_getUTCSeconds
    int Id_getMilliseconds -> Id_getMilliseconds
    int Id_getUTCMilliseconds -> Id_getUTCMilliseconds
    int Id_getTimezoneOffset -> Id_getTimezoneOffset
    int Id_setTime -> Id_setTime
    int Id_setMilliseconds -> Id_setMilliseconds
    int Id_setUTCMilliseconds -> Id_setUTCMilliseconds
    int Id_setSeconds -> Id_setSeconds
    int Id_setUTCSeconds -> Id_setUTCSeconds
    int Id_setMinutes -> Id_setMinutes
    int Id_setUTCMinutes -> Id_setUTCMinutes
    int Id_setHours -> Id_setHours
    int Id_setUTCHours -> Id_setUTCHours
    int Id_setDate -> Id_setDate
    int Id_setUTCDate -> Id_setUTCDate
    int Id_setMonth -> Id_setMonth
    int Id_setUTCMonth -> Id_setUTCMonth
    int Id_setFullYear -> Id_setFullYear
    int Id_setUTCFullYear -> Id_setUTCFullYear
    int Id_setYear -> Id_setYear
    int Id_toISOString -> Id_toISOString
    int Id_toJSON -> Id_toJSON
    int MAX_PROTOTYPE_ID -> MAX_PROTOTYPE_ID
    int Id_toGMTString -> Id_toGMTString
    java.util.TimeZone thisTimeZone -> thisTimeZone
    double LocalTZA -> LocalTZA
    java.text.DateFormat timeZoneFormatter -> timeZoneFormatter
    java.text.DateFormat localeDateTimeFormatter -> localeDateTimeFormatter
    java.text.DateFormat localeDateFormatter -> localeDateFormatter
    java.text.DateFormat localeTimeFormatter -> localeTimeFormatter
    double date -> date
    void init(org.mozilla.javascript.Scriptable,boolean) -> init
    java.lang.String getClassName() -> getClassName
    java.lang.Object getDefaultValue(java.lang.Class) -> getDefaultValue
    double getJSTimeValue() -> getJSTimeValue
    void fillConstructorProperties(org.mozilla.javascript.IdFunctionObject) -> fillConstructorProperties
    void initPrototypeId(int) -> initPrototypeId
    java.lang.Object execIdCall(org.mozilla.javascript.IdFunctionObject,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> execIdCall
    java.lang.String toISOString() -> toISOString
    double Day(double) -> Day
    double TimeWithinDay(double) -> TimeWithinDay
    boolean IsLeapYear(int) -> IsLeapYear
    double DayFromYear(double) -> DayFromYear
    double TimeFromYear(double) -> TimeFromYear
    int YearFromTime(double) -> YearFromTime
    double DayFromMonth(int,int) -> DayFromMonth
    int MonthFromTime(double) -> MonthFromTime
    int DateFromTime(double) -> DateFromTime
    int WeekDay(double) -> WeekDay
    double now() -> now
    double DaylightSavingTA(double) -> DaylightSavingTA
    int EquivalentYear(int) -> EquivalentYear
    double LocalTime(double) -> LocalTime
    double internalUTC(double) -> internalUTC
    int HourFromTime(double) -> HourFromTime
    int MinFromTime(double) -> MinFromTime
    int SecFromTime(double) -> SecFromTime
    int msFromTime(double) -> msFromTime
    double MakeTime(double,double,double,double) -> MakeTime
    double MakeDay(double,double,double) -> MakeDay
    double MakeDate(double,double) -> MakeDate
    double TimeClip(double) -> TimeClip
    double date_msecFromDate(double,double,double,double,double,double,double) -> date_msecFromDate
    double date_msecFromArgs(java.lang.Object[]) -> date_msecFromArgs
    double jsStaticFunction_UTC(java.lang.Object[]) -> jsStaticFunction_UTC
    double date_parseString(java.lang.String) -> date_parseString
    java.lang.String date_format(double,int) -> date_format
    java.lang.Object jsConstructor(java.lang.Object[]) -> jsConstructor
    java.lang.String toLocale_helper(double,int) -> toLocale_helper
    java.lang.String js_toUTCString(double) -> js_toUTCString
    void append0PaddedUint(java.lang.StringBuffer,int,int) -> append0PaddedUint
    void appendMonthName(java.lang.StringBuffer,int) -> appendMonthName
    void appendWeekDayName(java.lang.StringBuffer,int) -> appendWeekDayName
    double makeTime(double,java.lang.Object[],int) -> makeTime
    double makeDate(double,java.lang.Object[],int) -> makeDate
    int findPrototypeId(java.lang.String) -> findPrototypeId
org.mozilla.javascript.NativeError -> org.mozilla.javascript.NativeError:
    long serialVersionUID -> serialVersionUID
    java.lang.Object ERROR_TAG -> ERROR_TAG
    org.mozilla.javascript.RhinoException stackProvider -> stackProvider
    int Id_constructor -> Id_constructor
    int Id_toString -> Id_toString
    int Id_toSource -> Id_toSource
    int MAX_PROTOTYPE_ID -> MAX_PROTOTYPE_ID
    void init(org.mozilla.javascript.Scriptable,boolean) -> init
    org.mozilla.javascript.NativeError make(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.IdFunctionObject,java.lang.Object[]) -> make
    java.lang.String getClassName() -> getClassName
    java.lang.String toString() -> toString
    void initPrototypeId(int) -> initPrototypeId
    java.lang.Object execIdCall(org.mozilla.javascript.IdFunctionObject,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> execIdCall
    void setStackProvider(org.mozilla.javascript.RhinoException) -> setStackProvider
    java.lang.Object getStack() -> getStack
    void setStack(java.lang.Object) -> setStack
    java.lang.Object js_toString(org.mozilla.javascript.Scriptable) -> js_toString
    java.lang.String js_toSource(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable) -> js_toSource
    java.lang.String getString(org.mozilla.javascript.Scriptable,java.lang.String) -> getString
    int findPrototypeId(java.lang.String) -> findPrototypeId
org.mozilla.javascript.NativeFunction -> org.mozilla.javascript.NativeFunction:
    long serialVersionUID -> serialVersionUID
    void initScriptFunction(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable) -> initScriptFunction
    java.lang.String decompile(int,int) -> decompile
    int getLength() -> getLength
    int getArity() -> getArity
    java.lang.String jsGet_name() -> jsGet_name
    java.lang.String getEncodedSource() -> getEncodedSource
    org.mozilla.javascript.debug.DebuggableScript getDebuggableView() -> getDebuggableView
    java.lang.Object resumeGenerator(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,int,java.lang.Object,java.lang.Object) -> resumeGenerator
    int getLanguageVersion() -> getLanguageVersion
    int getParamCount() -> getParamCount
    int getParamAndVarCount() -> getParamAndVarCount
    java.lang.String getParamOrVarName(int) -> getParamOrVarName
    boolean getParamOrVarConst(int) -> getParamOrVarConst
org.mozilla.javascript.NativeGenerator -> org.mozilla.javascript.NativeGenerator:
    long serialVersionUID -> serialVersionUID
    java.lang.Object GENERATOR_TAG -> GENERATOR_TAG
    int GENERATOR_SEND -> GENERATOR_SEND
    int GENERATOR_THROW -> GENERATOR_THROW
    int GENERATOR_CLOSE -> GENERATOR_CLOSE
    int Id_close -> Id_close
    int Id_next -> Id_next
    int Id_send -> Id_send
    int Id_throw -> Id_throw
    int Id___iterator__ -> Id___iterator__
    int MAX_PROTOTYPE_ID -> MAX_PROTOTYPE_ID
    org.mozilla.javascript.NativeFunction function -> function
    java.lang.Object savedState -> savedState
    java.lang.String lineSource -> lineSource
    int lineNumber -> lineNumber
    boolean firstTime -> firstTime
    boolean locked -> locked
    org.mozilla.javascript.NativeGenerator init(org.mozilla.javascript.ScriptableObject,boolean) -> init
    java.lang.String getClassName() -> getClassName
    void initPrototypeId(int) -> initPrototypeId
    java.lang.Object execIdCall(org.mozilla.javascript.IdFunctionObject,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> execIdCall
    java.lang.Object resume(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,int,java.lang.Object) -> resume
    int findPrototypeId(java.lang.String) -> findPrototypeId
    java.lang.Object access$000(org.mozilla.javascript.NativeGenerator,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,int,java.lang.Object) -> access$000
org.mozilla.javascript.NativeGenerator$CloseGeneratorAction -> org.mozilla.javascript.NativeGenerator$CloseGeneratorAction:
    org.mozilla.javascript.NativeGenerator generator -> generator
    java.lang.Object run(org.mozilla.javascript.Context) -> run
org.mozilla.javascript.NativeGenerator$CloseGeneratorAction$1 -> org.mozilla.javascript.NativeGenerator$CloseGeneratorAction$1:
    org.mozilla.javascript.NativeGenerator$CloseGeneratorAction this$0 -> this$0
    java.lang.Object call(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> call
org.mozilla.javascript.NativeGenerator$GeneratorClosedException -> org.mozilla.javascript.NativeGenerator$GeneratorClosedException:
    long serialVersionUID -> serialVersionUID
org.mozilla.javascript.NativeGlobal -> org.mozilla.javascript.NativeGlobal:
    long serialVersionUID -> serialVersionUID
    java.lang.String URI_DECODE_RESERVED -> URI_DECODE_RESERVED
    int INVALID_UTF8 -> INVALID_UTF8
    java.lang.Object FTAG -> FTAG
    int Id_decodeURI -> Id_decodeURI
    int Id_decodeURIComponent -> Id_decodeURIComponent
    int Id_encodeURI -> Id_encodeURI
    int Id_encodeURIComponent -> Id_encodeURIComponent
    int Id_escape -> Id_escape
    int Id_eval -> Id_eval
    int Id_isFinite -> Id_isFinite
    int Id_isNaN -> Id_isNaN
    int Id_isXMLName -> Id_isXMLName
    int Id_parseFloat -> Id_parseFloat
    int Id_parseInt -> Id_parseInt
    int Id_unescape -> Id_unescape
    int Id_uneval -> Id_uneval
    int LAST_SCOPE_FUNCTION_ID -> LAST_SCOPE_FUNCTION_ID
    int Id_new_CommonError -> Id_new_CommonError
    void init(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,boolean) -> init
    java.lang.Object execIdCall(org.mozilla.javascript.IdFunctionObject,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> execIdCall
    java.lang.Object js_parseInt(java.lang.Object[]) -> js_parseInt
    java.lang.Object js_parseFloat(java.lang.Object[]) -> js_parseFloat
    java.lang.Object js_escape(java.lang.Object[]) -> js_escape
    java.lang.Object js_unescape(java.lang.Object[]) -> js_unescape
    java.lang.Object js_eval(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> js_eval
    boolean isEvalFunction(java.lang.Object) -> isEvalFunction
    org.mozilla.javascript.EcmaError constructError(org.mozilla.javascript.Context,java.lang.String,java.lang.String,org.mozilla.javascript.Scriptable) -> constructError
    org.mozilla.javascript.EcmaError constructError(org.mozilla.javascript.Context,java.lang.String,java.lang.String,org.mozilla.javascript.Scriptable,java.lang.String,int,int,java.lang.String) -> constructError
    java.lang.String encode(java.lang.String,boolean) -> encode
    char toHexChar(int) -> toHexChar
    int unHex(char) -> unHex
    int unHex(char,char) -> unHex
    java.lang.String decode(java.lang.String,boolean) -> decode
    boolean encodeUnescaped(char,boolean) -> encodeUnescaped
    org.mozilla.javascript.EcmaError uriError() -> uriError
    int oneUcs4ToUtf8Char(byte[],int) -> oneUcs4ToUtf8Char
org.mozilla.javascript.NativeIterator -> org.mozilla.javascript.NativeIterator:
    long serialVersionUID -> serialVersionUID
    java.lang.Object ITERATOR_TAG -> ITERATOR_TAG
    java.lang.String STOP_ITERATION -> STOP_ITERATION
    java.lang.String ITERATOR_PROPERTY_NAME -> ITERATOR_PROPERTY_NAME
    int Id_constructor -> Id_constructor
    int Id_next -> Id_next
    int Id___iterator__ -> Id___iterator__
    int MAX_PROTOTYPE_ID -> MAX_PROTOTYPE_ID
    java.lang.Object objectIterator -> objectIterator
    void init(org.mozilla.javascript.ScriptableObject,boolean) -> init
    java.lang.Object getStopIterationObject(org.mozilla.javascript.Scriptable) -> getStopIterationObject
    java.lang.String getClassName() -> getClassName
    void initPrototypeId(int) -> initPrototypeId
    java.lang.Object execIdCall(org.mozilla.javascript.IdFunctionObject,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> execIdCall
    java.lang.Object jsConstructor(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> jsConstructor
    java.lang.Object next(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable) -> next
    int findPrototypeId(java.lang.String) -> findPrototypeId
org.mozilla.javascript.NativeIterator$StopIteration -> org.mozilla.javascript.NativeIterator$StopIteration:
    long serialVersionUID -> serialVersionUID
    java.lang.String getClassName() -> getClassName
    boolean hasInstance(org.mozilla.javascript.Scriptable) -> hasInstance
org.mozilla.javascript.NativeIterator$WrappedJavaIterator -> org.mozilla.javascript.NativeIterator$WrappedJavaIterator:
    java.util.Iterator iterator -> iterator
    org.mozilla.javascript.Scriptable scope -> scope
    java.lang.Object next() -> next
    java.lang.Object __iterator__(boolean) -> __iterator__
org.mozilla.javascript.NativeJSON -> org.mozilla.javascript.NativeJSON:
    long serialVersionUID -> serialVersionUID
    java.lang.Object JSON_TAG -> JSON_TAG
    int MAX_STRINGIFY_GAP_LENGTH -> MAX_STRINGIFY_GAP_LENGTH
    int Id_toSource -> Id_toSource
    int Id_parse -> Id_parse
    int Id_stringify -> Id_stringify
    int LAST_METHOD_ID -> LAST_METHOD_ID
    int MAX_ID -> MAX_ID
    void init(org.mozilla.javascript.Scriptable,boolean) -> init
    java.lang.String getClassName() -> getClassName
    void initPrototypeId(int) -> initPrototypeId
    java.lang.Object execIdCall(org.mozilla.javascript.IdFunctionObject,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> execIdCall
    java.lang.Object parse(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.String) -> parse
    java.lang.Object parse(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.String,org.mozilla.javascript.Callable) -> parse
    java.lang.Object walk(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Callable,org.mozilla.javascript.Scriptable,java.lang.Object) -> walk
    java.lang.String repeat(char,int) -> repeat
    java.lang.Object stringify(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object,java.lang.Object,java.lang.Object) -> stringify
    java.lang.Object str(java.lang.Object,org.mozilla.javascript.Scriptable,org.mozilla.javascript.NativeJSON$StringifyState) -> str
    java.lang.String join(java.util.Collection,java.lang.String) -> join
    java.lang.String jo(org.mozilla.javascript.Scriptable,org.mozilla.javascript.NativeJSON$StringifyState) -> jo
    java.lang.String ja(org.mozilla.javascript.NativeArray,org.mozilla.javascript.NativeJSON$StringifyState) -> ja
    java.lang.String quote(java.lang.String) -> quote
    int findPrototypeId(java.lang.String) -> findPrototypeId
org.mozilla.javascript.NativeJSON$StringifyState -> org.mozilla.javascript.NativeJSON$StringifyState:
    java.util.Stack stack -> stack
    java.lang.String indent -> indent
    java.lang.String gap -> gap
    org.mozilla.javascript.Callable replacer -> replacer
    java.util.List propertyList -> propertyList
    java.lang.Object space -> space
    org.mozilla.javascript.Context cx -> cx
    org.mozilla.javascript.Scriptable scope -> scope
org.mozilla.javascript.NativeJavaArray -> org.mozilla.javascript.NativeJavaArray:
    long serialVersionUID -> serialVersionUID
    java.lang.Object array -> array
    int length -> length
    java.lang.Class cls -> cls
    java.lang.String getClassName() -> getClassName
    org.mozilla.javascript.NativeJavaArray wrap(org.mozilla.javascript.Scriptable,java.lang.Object) -> wrap
    java.lang.Object unwrap() -> unwrap
    boolean has(java.lang.String,org.mozilla.javascript.Scriptable) -> has
    boolean has(int,org.mozilla.javascript.Scriptable) -> has
    java.lang.Object get(java.lang.String,org.mozilla.javascript.Scriptable) -> get
    java.lang.Object get(int,org.mozilla.javascript.Scriptable) -> get
    void put(java.lang.String,org.mozilla.javascript.Scriptable,java.lang.Object) -> put
    void put(int,org.mozilla.javascript.Scriptable,java.lang.Object) -> put
    java.lang.Object getDefaultValue(java.lang.Class) -> getDefaultValue
    java.lang.Object[] getIds() -> getIds
    boolean hasInstance(org.mozilla.javascript.Scriptable) -> hasInstance
    org.mozilla.javascript.Scriptable getPrototype() -> getPrototype
org.mozilla.javascript.NativeJavaClass -> org.mozilla.javascript.NativeJavaClass:
    long serialVersionUID -> serialVersionUID
    java.lang.String javaClassPropertyName -> javaClassPropertyName
    java.util.Map staticFieldAndMethods -> staticFieldAndMethods
    void initMembers() -> initMembers
    java.lang.String getClassName() -> getClassName
    boolean has(java.lang.String,org.mozilla.javascript.Scriptable) -> has
    java.lang.Object get(java.lang.String,org.mozilla.javascript.Scriptable) -> get
    void put(java.lang.String,org.mozilla.javascript.Scriptable,java.lang.Object) -> put
    java.lang.Object[] getIds() -> getIds
    java.lang.Class getClassObject() -> getClassObject
    java.lang.Object getDefaultValue(java.lang.Class) -> getDefaultValue
    java.lang.Object call(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> call
    org.mozilla.javascript.Scriptable construct(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> construct
    org.mozilla.javascript.Scriptable constructSpecific(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object[],org.mozilla.javascript.MemberBox) -> constructSpecific
    java.lang.Object constructInternal(java.lang.Object[],org.mozilla.javascript.MemberBox) -> constructInternal
    java.lang.String toString() -> toString
    boolean hasInstance(org.mozilla.javascript.Scriptable) -> hasInstance
    java.lang.Class findNestedClass(java.lang.Class,java.lang.String) -> findNestedClass
org.mozilla.javascript.NativeJavaConstructor -> org.mozilla.javascript.NativeJavaConstructor:
    long serialVersionUID -> serialVersionUID
    org.mozilla.javascript.MemberBox ctor -> ctor
    java.lang.Object call(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> call
    java.lang.String getFunctionName() -> getFunctionName
    java.lang.String toString() -> toString
org.mozilla.javascript.NativeJavaMethod -> org.mozilla.javascript.NativeJavaMethod:
    long serialVersionUID -> serialVersionUID
    int PREFERENCE_EQUAL -> PREFERENCE_EQUAL
    int PREFERENCE_FIRST_ARG -> PREFERENCE_FIRST_ARG
    int PREFERENCE_SECOND_ARG -> PREFERENCE_SECOND_ARG
    int PREFERENCE_AMBIGUOUS -> PREFERENCE_AMBIGUOUS
    boolean debug -> debug
    org.mozilla.javascript.MemberBox[] methods -> methods
    java.lang.String functionName -> functionName
    java.util.LinkedList overloadCache -> overloadCache
    java.lang.String getFunctionName() -> getFunctionName
    java.lang.String scriptSignature(java.lang.Object[]) -> scriptSignature
    java.lang.String decompile(int,int) -> decompile
    java.lang.String toString() -> toString
    java.lang.Object call(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> call
    int findCachedFunction(org.mozilla.javascript.Context,java.lang.Object[]) -> findCachedFunction
    int findFunction(org.mozilla.javascript.Context,org.mozilla.javascript.MemberBox[],java.lang.Object[]) -> findFunction
    int preferSignature(java.lang.Object[],java.lang.Class[],boolean,java.lang.Class[],boolean) -> preferSignature
    void printDebug(java.lang.String,org.mozilla.javascript.MemberBox,java.lang.Object[]) -> printDebug
org.mozilla.javascript.NativeJavaObject -> org.mozilla.javascript.NativeJavaObject:
    long serialVersionUID -> serialVersionUID
    int JSTYPE_UNDEFINED -> JSTYPE_UNDEFINED
    int JSTYPE_NULL -> JSTYPE_NULL
    int JSTYPE_BOOLEAN -> JSTYPE_BOOLEAN
    int JSTYPE_NUMBER -> JSTYPE_NUMBER
    int JSTYPE_STRING -> JSTYPE_STRING
    int JSTYPE_JAVA_CLASS -> JSTYPE_JAVA_CLASS
    int JSTYPE_JAVA_OBJECT -> JSTYPE_JAVA_OBJECT
    int JSTYPE_JAVA_ARRAY -> JSTYPE_JAVA_ARRAY
    int JSTYPE_OBJECT -> JSTYPE_OBJECT
    byte CONVERSION_TRIVIAL -> CONVERSION_TRIVIAL
    byte CONVERSION_NONTRIVIAL -> CONVERSION_NONTRIVIAL
    byte CONVERSION_NONE -> CONVERSION_NONE
    org.mozilla.javascript.Scriptable prototype -> prototype
    org.mozilla.javascript.Scriptable parent -> parent
    java.lang.Object javaObject -> javaObject
    java.lang.Class staticType -> staticType
    org.mozilla.javascript.JavaMembers members -> members
    java.util.Map fieldAndMethods -> fieldAndMethods
    boolean isAdapter -> isAdapter
    java.lang.Object COERCED_INTERFACE_KEY -> COERCED_INTERFACE_KEY
    java.lang.reflect.Method adapter_writeAdapterObject -> adapter_writeAdapterObject
    java.lang.reflect.Method adapter_readAdapterObject -> adapter_readAdapterObject
    void initMembers() -> initMembers
    boolean has(java.lang.String,org.mozilla.javascript.Scriptable) -> has
    boolean has(int,org.mozilla.javascript.Scriptable) -> has
    java.lang.Object get(java.lang.String,org.mozilla.javascript.Scriptable) -> get
    java.lang.Object get(int,org.mozilla.javascript.Scriptable) -> get
    void put(java.lang.String,org.mozilla.javascript.Scriptable,java.lang.Object) -> put
    void put(int,org.mozilla.javascript.Scriptable,java.lang.Object) -> put
    boolean hasInstance(org.mozilla.javascript.Scriptable) -> hasInstance
    void delete(java.lang.String) -> delete
    void delete(int) -> delete
    org.mozilla.javascript.Scriptable getPrototype() -> getPrototype
    void setPrototype(org.mozilla.javascript.Scriptable) -> setPrototype
    org.mozilla.javascript.Scriptable getParentScope() -> getParentScope
    void setParentScope(org.mozilla.javascript.Scriptable) -> setParentScope
    java.lang.Object[] getIds() -> getIds
    java.lang.Object wrap(org.mozilla.javascript.Scriptable,java.lang.Object,java.lang.Class) -> wrap
    java.lang.Object unwrap() -> unwrap
    java.lang.String getClassName() -> getClassName
    java.lang.Object getDefaultValue(java.lang.Class) -> getDefaultValue
    boolean canConvert(java.lang.Object,java.lang.Class) -> canConvert
    int getConversionWeight(java.lang.Object,java.lang.Class) -> getConversionWeight
    int getSizeRank(java.lang.Class) -> getSizeRank
    int getJSTypeCode(java.lang.Object) -> getJSTypeCode
    java.lang.Object coerceType(java.lang.Class,java.lang.Object) -> coerceType
    java.lang.Object coerceTypeImpl(java.lang.Class,java.lang.Object) -> coerceTypeImpl
    java.lang.Object createInterfaceAdapter(java.lang.Class,org.mozilla.javascript.ScriptableObject) -> createInterfaceAdapter
    java.lang.Object coerceToNumber(java.lang.Class,java.lang.Object) -> coerceToNumber
    double toDouble(java.lang.Object) -> toDouble
    long toInteger(java.lang.Object,java.lang.Class,double,double) -> toInteger
    void reportConversionError(java.lang.Object,java.lang.Class) -> reportConversionError
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
org.mozilla.javascript.NativeJavaPackage -> org.mozilla.javascript.NativeJavaPackage:
    long serialVersionUID -> serialVersionUID
    java.lang.String packageName -> packageName
    java.lang.ClassLoader classLoader -> classLoader
    java.util.Set negativeCache -> negativeCache
    java.lang.String getClassName() -> getClassName
    boolean has(java.lang.String,org.mozilla.javascript.Scriptable) -> has
    boolean has(int,org.mozilla.javascript.Scriptable) -> has
    void put(java.lang.String,org.mozilla.javascript.Scriptable,java.lang.Object) -> put
    void put(int,org.mozilla.javascript.Scriptable,java.lang.Object) -> put
    java.lang.Object get(java.lang.String,org.mozilla.javascript.Scriptable) -> get
    java.lang.Object get(int,org.mozilla.javascript.Scriptable) -> get
    org.mozilla.javascript.NativeJavaPackage forcePackage(java.lang.String,org.mozilla.javascript.Scriptable) -> forcePackage
    java.lang.Object getPkgProperty(java.lang.String,org.mozilla.javascript.Scriptable,boolean) -> getPkgProperty
    java.lang.Object getDefaultValue(java.lang.Class) -> getDefaultValue
    void readObject(java.io.ObjectInputStream) -> readObject
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.mozilla.javascript.NativeJavaTopPackage -> org.mozilla.javascript.NativeJavaTopPackage:
    long serialVersionUID -> serialVersionUID
    java.lang.String[][] commonPackages -> commonPackages
    java.lang.Object FTAG -> FTAG
    int Id_getClass -> Id_getClass
    java.lang.Object call(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> call
    org.mozilla.javascript.Scriptable construct(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> construct
    void init(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,boolean) -> init
    java.lang.Object execIdCall(org.mozilla.javascript.IdFunctionObject,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> execIdCall
    org.mozilla.javascript.Scriptable js_getClass(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> js_getClass
org.mozilla.javascript.NativeMath -> org.mozilla.javascript.NativeMath:
    long serialVersionUID -> serialVersionUID
    java.lang.Object MATH_TAG -> MATH_TAG
    int Id_toSource -> Id_toSource
    int Id_abs -> Id_abs
    int Id_acos -> Id_acos
    int Id_asin -> Id_asin
    int Id_atan -> Id_atan
    int Id_atan2 -> Id_atan2
    int Id_ceil -> Id_ceil
    int Id_cos -> Id_cos
    int Id_exp -> Id_exp
    int Id_floor -> Id_floor
    int Id_log -> Id_log
    int Id_max -> Id_max
    int Id_min -> Id_min
    int Id_pow -> Id_pow
    int Id_random -> Id_random
    int Id_round -> Id_round
    int Id_sin -> Id_sin
    int Id_sqrt -> Id_sqrt
    int Id_tan -> Id_tan
    int LAST_METHOD_ID -> LAST_METHOD_ID
    int Id_E -> Id_E
    int Id_PI -> Id_PI
    int Id_LN10 -> Id_LN10
    int Id_LN2 -> Id_LN2
    int Id_LOG2E -> Id_LOG2E
    int Id_LOG10E -> Id_LOG10E
    int Id_SQRT1_2 -> Id_SQRT1_2
    int Id_SQRT2 -> Id_SQRT2
    int MAX_ID -> MAX_ID
    void init(org.mozilla.javascript.Scriptable,boolean) -> init
    java.lang.String getClassName() -> getClassName
    void initPrototypeId(int) -> initPrototypeId
    java.lang.Object execIdCall(org.mozilla.javascript.IdFunctionObject,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> execIdCall
    double js_pow(double,double) -> js_pow
    int findPrototypeId(java.lang.String) -> findPrototypeId
org.mozilla.javascript.NativeNumber -> org.mozilla.javascript.NativeNumber:
    long serialVersionUID -> serialVersionUID
    java.lang.Object NUMBER_TAG -> NUMBER_TAG
    int MAX_PRECISION -> MAX_PRECISION
    int Id_constructor -> Id_constructor
    int Id_toString -> Id_toString
    int Id_toLocaleString -> Id_toLocaleString
    int Id_toSource -> Id_toSource
    int Id_valueOf -> Id_valueOf
    int Id_toFixed -> Id_toFixed
    int Id_toExponential -> Id_toExponential
    int Id_toPrecision -> Id_toPrecision
    int MAX_PROTOTYPE_ID -> MAX_PROTOTYPE_ID
    double doubleValue -> doubleValue
    void init(org.mozilla.javascript.Scriptable,boolean) -> init
    java.lang.String getClassName() -> getClassName
    void fillConstructorProperties(org.mozilla.javascript.IdFunctionObject) -> fillConstructorProperties
    void initPrototypeId(int) -> initPrototypeId
    java.lang.Object execIdCall(org.mozilla.javascript.IdFunctionObject,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> execIdCall
    java.lang.String toString() -> toString
    java.lang.String num_to(double,java.lang.Object[],int,int,int,int) -> num_to
    int findPrototypeId(java.lang.String) -> findPrototypeId
org.mozilla.javascript.NativeObject -> org.mozilla.javascript.NativeObject:
    long serialVersionUID -> serialVersionUID
    java.lang.Object OBJECT_TAG -> OBJECT_TAG
    int ConstructorId_getPrototypeOf -> ConstructorId_getPrototypeOf
    int ConstructorId_keys -> ConstructorId_keys
    int ConstructorId_getOwnPropertyNames -> ConstructorId_getOwnPropertyNames
    int ConstructorId_getOwnPropertyDescriptor -> ConstructorId_getOwnPropertyDescriptor
    int ConstructorId_defineProperty -> ConstructorId_defineProperty
    int ConstructorId_isExtensible -> ConstructorId_isExtensible
    int ConstructorId_preventExtensions -> ConstructorId_preventExtensions
    int ConstructorId_defineProperties -> ConstructorId_defineProperties
    int ConstructorId_create -> ConstructorId_create
    int ConstructorId_isSealed -> ConstructorId_isSealed
    int ConstructorId_isFrozen -> ConstructorId_isFrozen
    int ConstructorId_seal -> ConstructorId_seal
    int ConstructorId_freeze -> ConstructorId_freeze
    int Id_constructor -> Id_constructor
    int Id_toString -> Id_toString
    int Id_toLocaleString -> Id_toLocaleString
    int Id_valueOf -> Id_valueOf
    int Id_hasOwnProperty -> Id_hasOwnProperty
    int Id_propertyIsEnumerable -> Id_propertyIsEnumerable
    int Id_isPrototypeOf -> Id_isPrototypeOf
    int Id_toSource -> Id_toSource
    int Id___defineGetter__ -> Id___defineGetter__
    int Id___defineSetter__ -> Id___defineSetter__
    int Id___lookupGetter__ -> Id___lookupGetter__
    int Id___lookupSetter__ -> Id___lookupSetter__
    int MAX_PROTOTYPE_ID -> MAX_PROTOTYPE_ID
    void init(org.mozilla.javascript.Scriptable,boolean) -> init
    java.lang.String getClassName() -> getClassName
    java.lang.String toString() -> toString
    void fillConstructorProperties(org.mozilla.javascript.IdFunctionObject) -> fillConstructorProperties
    void initPrototypeId(int) -> initPrototypeId
    java.lang.Object execIdCall(org.mozilla.javascript.IdFunctionObject,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> execIdCall
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object remove(java.lang.Object) -> remove
    java.util.Set keySet() -> keySet
    java.util.Collection values() -> values
    java.util.Set entrySet() -> entrySet
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void putAll(java.util.Map) -> putAll
    void clear() -> clear
    int findPrototypeId(java.lang.String) -> findPrototypeId
org.mozilla.javascript.NativeObject$EntrySet -> org.mozilla.javascript.NativeObject$EntrySet:
    org.mozilla.javascript.NativeObject this$0 -> this$0
    java.util.Iterator iterator() -> iterator
    int size() -> size
org.mozilla.javascript.NativeObject$EntrySet$1 -> org.mozilla.javascript.NativeObject$EntrySet$1:
    java.lang.Object[] ids -> ids
    java.lang.Object key -> key
    int index -> index
    org.mozilla.javascript.NativeObject$EntrySet this$1 -> this$1
    boolean hasNext() -> hasNext
    java.util.Map$Entry next() -> next
    void remove() -> remove
    java.lang.Object next() -> next
org.mozilla.javascript.NativeObject$EntrySet$1$1 -> org.mozilla.javascript.NativeObject$EntrySet$1$1:
    java.lang.Object val$ekey -> val$ekey
    java.lang.Object val$value -> val$value
    org.mozilla.javascript.NativeObject$EntrySet$1 this$2 -> this$2
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
org.mozilla.javascript.NativeObject$KeySet -> org.mozilla.javascript.NativeObject$KeySet:
    org.mozilla.javascript.NativeObject this$0 -> this$0
    boolean contains(java.lang.Object) -> contains
    java.util.Iterator iterator() -> iterator
    int size() -> size
org.mozilla.javascript.NativeObject$KeySet$1 -> org.mozilla.javascript.NativeObject$KeySet$1:
    java.lang.Object[] ids -> ids
    java.lang.Object key -> key
    int index -> index
    org.mozilla.javascript.NativeObject$KeySet this$1 -> this$1
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
org.mozilla.javascript.NativeObject$ValueCollection -> org.mozilla.javascript.NativeObject$ValueCollection:
    org.mozilla.javascript.NativeObject this$0 -> this$0
    java.util.Iterator iterator() -> iterator
    int size() -> size
org.mozilla.javascript.NativeObject$ValueCollection$1 -> org.mozilla.javascript.NativeObject$ValueCollection$1:
    java.lang.Object[] ids -> ids
    java.lang.Object key -> key
    int index -> index
    org.mozilla.javascript.NativeObject$ValueCollection this$1 -> this$1
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
org.mozilla.javascript.NativeScript -> org.mozilla.javascript.NativeScript:
    long serialVersionUID -> serialVersionUID
    java.lang.Object SCRIPT_TAG -> SCRIPT_TAG
    int Id_constructor -> Id_constructor
    int Id_toString -> Id_toString
    int Id_compile -> Id_compile
    int Id_exec -> Id_exec
    int MAX_PROTOTYPE_ID -> MAX_PROTOTYPE_ID
    org.mozilla.javascript.Script script -> script
    void init(org.mozilla.javascript.Scriptable,boolean) -> init
    java.lang.String getClassName() -> getClassName
    java.lang.Object call(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> call
    org.mozilla.javascript.Scriptable construct(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> construct
    int getLength() -> getLength
    int getArity() -> getArity
    java.lang.String decompile(int,int) -> decompile
    void initPrototypeId(int) -> initPrototypeId
    java.lang.Object execIdCall(org.mozilla.javascript.IdFunctionObject,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> execIdCall
    org.mozilla.javascript.NativeScript realThis(org.mozilla.javascript.Scriptable,org.mozilla.javascript.IdFunctionObject) -> realThis
    org.mozilla.javascript.Script compile(org.mozilla.javascript.Context,java.lang.String) -> compile
    int findPrototypeId(java.lang.String) -> findPrototypeId
org.mozilla.javascript.NativeString -> org.mozilla.javascript.NativeString:
    long serialVersionUID -> serialVersionUID
    java.lang.Object STRING_TAG -> STRING_TAG
    int Id_length -> Id_length
    int MAX_INSTANCE_ID -> MAX_INSTANCE_ID
    int ConstructorId_fromCharCode -> ConstructorId_fromCharCode
    int Id_constructor -> Id_constructor
    int Id_toString -> Id_toString
    int Id_toSource -> Id_toSource
    int Id_valueOf -> Id_valueOf
    int Id_charAt -> Id_charAt
    int Id_charCodeAt -> Id_charCodeAt
    int Id_indexOf -> Id_indexOf
    int Id_lastIndexOf -> Id_lastIndexOf
    int Id_split -> Id_split
    int Id_substring -> Id_substring
    int Id_toLowerCase -> Id_toLowerCase
    int Id_toUpperCase -> Id_toUpperCase
    int Id_substr -> Id_substr
    int Id_concat -> Id_concat
    int Id_slice -> Id_slice
    int Id_bold -> Id_bold
    int Id_italics -> Id_italics
    int Id_fixed -> Id_fixed
    int Id_strike -> Id_strike
    int Id_small -> Id_small
    int Id_big -> Id_big
    int Id_blink -> Id_blink
    int Id_sup -> Id_sup
    int Id_sub -> Id_sub
    int Id_fontsize -> Id_fontsize
    int Id_fontcolor -> Id_fontcolor
    int Id_link -> Id_link
    int Id_anchor -> Id_anchor
    int Id_equals -> Id_equals
    int Id_equalsIgnoreCase -> Id_equalsIgnoreCase
    int Id_match -> Id_match
    int Id_search -> Id_search
    int Id_replace -> Id_replace
    int Id_localeCompare -> Id_localeCompare
    int Id_toLocaleLowerCase -> Id_toLocaleLowerCase
    int Id_toLocaleUpperCase -> Id_toLocaleUpperCase
    int Id_trim -> Id_trim
    int MAX_PROTOTYPE_ID -> MAX_PROTOTYPE_ID
    int ConstructorId_charAt -> ConstructorId_charAt
    int ConstructorId_charCodeAt -> ConstructorId_charCodeAt
    int ConstructorId_indexOf -> ConstructorId_indexOf
    int ConstructorId_lastIndexOf -> ConstructorId_lastIndexOf
    int ConstructorId_split -> ConstructorId_split
    int ConstructorId_substring -> ConstructorId_substring
    int ConstructorId_toLowerCase -> ConstructorId_toLowerCase
    int ConstructorId_toUpperCase -> ConstructorId_toUpperCase
    int ConstructorId_substr -> ConstructorId_substr
    int ConstructorId_concat -> ConstructorId_concat
    int ConstructorId_slice -> ConstructorId_slice
    int ConstructorId_equalsIgnoreCase -> ConstructorId_equalsIgnoreCase
    int ConstructorId_match -> ConstructorId_match
    int ConstructorId_search -> ConstructorId_search
    int ConstructorId_replace -> ConstructorId_replace
    int ConstructorId_localeCompare -> ConstructorId_localeCompare
    int ConstructorId_toLocaleLowerCase -> ConstructorId_toLocaleLowerCase
    java.lang.CharSequence string -> string
    void init(org.mozilla.javascript.Scriptable,boolean) -> init
    java.lang.String getClassName() -> getClassName
    int getMaxInstanceId() -> getMaxInstanceId
    int findInstanceIdInfo(java.lang.String) -> findInstanceIdInfo
    java.lang.String getInstanceIdName(int) -> getInstanceIdName
    java.lang.Object getInstanceIdValue(int) -> getInstanceIdValue
    void fillConstructorProperties(org.mozilla.javascript.IdFunctionObject) -> fillConstructorProperties
    void initPrototypeId(int) -> initPrototypeId
    java.lang.Object execIdCall(org.mozilla.javascript.IdFunctionObject,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> execIdCall
    org.mozilla.javascript.NativeString realThis(org.mozilla.javascript.Scriptable,org.mozilla.javascript.IdFunctionObject) -> realThis
    java.lang.String tagify(java.lang.Object,java.lang.String,java.lang.String,java.lang.Object[]) -> tagify
    java.lang.CharSequence toCharSequence() -> toCharSequence
    java.lang.String toString() -> toString
    java.lang.Object get(int,org.mozilla.javascript.Scriptable) -> get
    void put(int,org.mozilla.javascript.Scriptable,java.lang.Object) -> put
    int js_indexOf(java.lang.String,java.lang.Object[]) -> js_indexOf
    int js_lastIndexOf(java.lang.String,java.lang.Object[]) -> js_lastIndexOf
    java.lang.CharSequence js_substring(org.mozilla.javascript.Context,java.lang.CharSequence,java.lang.Object[]) -> js_substring
    int getLength() -> getLength
    java.lang.CharSequence js_substr(java.lang.CharSequence,java.lang.Object[]) -> js_substr
    java.lang.String js_concat(java.lang.String,java.lang.Object[]) -> js_concat
    java.lang.CharSequence js_slice(java.lang.CharSequence,java.lang.Object[]) -> js_slice
    int findPrototypeId(java.lang.String) -> findPrototypeId
org.mozilla.javascript.NativeWith -> org.mozilla.javascript.NativeWith:
    long serialVersionUID -> serialVersionUID
    java.lang.Object FTAG -> FTAG
    int Id_constructor -> Id_constructor
    org.mozilla.javascript.Scriptable prototype -> prototype
    org.mozilla.javascript.Scriptable parent -> parent
    void init(org.mozilla.javascript.Scriptable,boolean) -> init
    java.lang.String getClassName() -> getClassName
    boolean has(java.lang.String,org.mozilla.javascript.Scriptable) -> has
    boolean has(int,org.mozilla.javascript.Scriptable) -> has
    java.lang.Object get(java.lang.String,org.mozilla.javascript.Scriptable) -> get
    java.lang.Object get(int,org.mozilla.javascript.Scriptable) -> get
    void put(java.lang.String,org.mozilla.javascript.Scriptable,java.lang.Object) -> put
    void put(int,org.mozilla.javascript.Scriptable,java.lang.Object) -> put
    void delete(java.lang.String) -> delete
    void delete(int) -> delete
    org.mozilla.javascript.Scriptable getPrototype() -> getPrototype
    void setPrototype(org.mozilla.javascript.Scriptable) -> setPrototype
    org.mozilla.javascript.Scriptable getParentScope() -> getParentScope
    void setParentScope(org.mozilla.javascript.Scriptable) -> setParentScope
    java.lang.Object[] getIds() -> getIds
    java.lang.Object getDefaultValue(java.lang.Class) -> getDefaultValue
    boolean hasInstance(org.mozilla.javascript.Scriptable) -> hasInstance
    java.lang.Object updateDotQuery(boolean) -> updateDotQuery
    java.lang.Object execIdCall(org.mozilla.javascript.IdFunctionObject,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> execIdCall
    boolean isWithFunction(java.lang.Object) -> isWithFunction
    java.lang.Object newWithSpecial(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> newWithSpecial
org.mozilla.javascript.Node -> org.mozilla.javascript.Node:
    int FUNCTION_PROP -> FUNCTION_PROP
    int LOCAL_PROP -> LOCAL_PROP
    int LOCAL_BLOCK_PROP -> LOCAL_BLOCK_PROP
    int REGEXP_PROP -> REGEXP_PROP
    int CASEARRAY_PROP -> CASEARRAY_PROP
    int TARGETBLOCK_PROP -> TARGETBLOCK_PROP
    int VARIABLE_PROP -> VARIABLE_PROP
    int ISNUMBER_PROP -> ISNUMBER_PROP
    int DIRECTCALL_PROP -> DIRECTCALL_PROP
    int SPECIALCALL_PROP -> SPECIALCALL_PROP
    int SKIP_INDEXES_PROP -> SKIP_INDEXES_PROP
    int OBJECT_IDS_PROP -> OBJECT_IDS_PROP
    int INCRDECR_PROP -> INCRDECR_PROP
    int CATCH_SCOPE_PROP -> CATCH_SCOPE_PROP
    int LABEL_ID_PROP -> LABEL_ID_PROP
    int MEMBER_TYPE_PROP -> MEMBER_TYPE_PROP
    int NAME_PROP -> NAME_PROP
    int CONTROL_BLOCK_PROP -> CONTROL_BLOCK_PROP
    int PARENTHESIZED_PROP -> PARENTHESIZED_PROP
    int GENERATOR_END_PROP -> GENERATOR_END_PROP
    int DESTRUCTURING_ARRAY_LENGTH -> DESTRUCTURING_ARRAY_LENGTH
    int DESTRUCTURING_NAMES -> DESTRUCTURING_NAMES
    int DESTRUCTURING_PARAMS -> DESTRUCTURING_PARAMS
    int JSDOC_PROP -> JSDOC_PROP
    int EXPRESSION_CLOSURE_PROP -> EXPRESSION_CLOSURE_PROP
    int DESTRUCTURING_SHORTHAND -> DESTRUCTURING_SHORTHAND
    int LAST_PROP -> LAST_PROP
    int BOTH -> BOTH
    int LEFT -> LEFT
    int RIGHT -> RIGHT
    int NON_SPECIALCALL -> NON_SPECIALCALL
    int SPECIALCALL_EVAL -> SPECIALCALL_EVAL
    int SPECIALCALL_WITH -> SPECIALCALL_WITH
    int DECR_FLAG -> DECR_FLAG
    int POST_FLAG -> POST_FLAG
    int PROPERTY_FLAG -> PROPERTY_FLAG
    int ATTRIBUTE_FLAG -> ATTRIBUTE_FLAG
    int DESCENDANTS_FLAG -> DESCENDANTS_FLAG
    org.mozilla.javascript.Node NOT_SET -> NOT_SET
    int END_UNREACHED -> END_UNREACHED
    int END_DROPS_OFF -> END_DROPS_OFF
    int END_RETURNS -> END_RETURNS
    int END_RETURNS_VALUE -> END_RETURNS_VALUE
    int END_YIELDS -> END_YIELDS
    int type -> type
    org.mozilla.javascript.Node next -> next
    org.mozilla.javascript.Node first -> first
    org.mozilla.javascript.Node last -> last
    int lineno -> lineno
    org.mozilla.javascript.Node$PropListItem propListHead -> propListHead
    org.mozilla.javascript.Node newNumber(double) -> newNumber
    org.mozilla.javascript.Node newString(java.lang.String) -> newString
    org.mozilla.javascript.Node newString(int,java.lang.String) -> newString
    int getType() -> getType
    org.mozilla.javascript.Node setType(int) -> setType
    java.lang.String getJsDoc() -> getJsDoc
    org.mozilla.javascript.ast.Comment getJsDocNode() -> getJsDocNode
    void setJsDocNode(org.mozilla.javascript.ast.Comment) -> setJsDocNode
    boolean hasChildren() -> hasChildren
    org.mozilla.javascript.Node getFirstChild() -> getFirstChild
    org.mozilla.javascript.Node getLastChild() -> getLastChild
    org.mozilla.javascript.Node getNext() -> getNext
    org.mozilla.javascript.Node getChildBefore(org.mozilla.javascript.Node) -> getChildBefore
    org.mozilla.javascript.Node getLastSibling() -> getLastSibling
    void addChildToFront(org.mozilla.javascript.Node) -> addChildToFront
    void addChildToBack(org.mozilla.javascript.Node) -> addChildToBack
    void addChildrenToFront(org.mozilla.javascript.Node) -> addChildrenToFront
    void addChildrenToBack(org.mozilla.javascript.Node) -> addChildrenToBack
    void addChildBefore(org.mozilla.javascript.Node,org.mozilla.javascript.Node) -> addChildBefore
    void addChildAfter(org.mozilla.javascript.Node,org.mozilla.javascript.Node) -> addChildAfter
    void removeChild(org.mozilla.javascript.Node) -> removeChild
    void replaceChild(org.mozilla.javascript.Node,org.mozilla.javascript.Node) -> replaceChild
    void replaceChildAfter(org.mozilla.javascript.Node,org.mozilla.javascript.Node) -> replaceChildAfter
    void removeChildren() -> removeChildren
    java.util.Iterator iterator() -> iterator
    java.lang.String propToString(int) -> propToString
    org.mozilla.javascript.Node$PropListItem lookupProperty(int) -> lookupProperty
    org.mozilla.javascript.Node$PropListItem ensureProperty(int) -> ensureProperty
    void removeProp(int) -> removeProp
    java.lang.Object getProp(int) -> getProp
    int getIntProp(int,int) -> getIntProp
    int getExistingIntProp(int) -> getExistingIntProp
    void putProp(int,java.lang.Object) -> putProp
    void putIntProp(int,int) -> putIntProp
    int getLineno() -> getLineno
    void setLineno(int) -> setLineno
    double getDouble() -> getDouble
    void setDouble(double) -> setDouble
    java.lang.String getString() -> getString
    void setString(java.lang.String) -> setString
    org.mozilla.javascript.ast.Scope getScope() -> getScope
    void setScope(org.mozilla.javascript.ast.Scope) -> setScope
    org.mozilla.javascript.Node newTarget() -> newTarget
    int labelId() -> labelId
    void labelId(int) -> labelId
    boolean hasConsistentReturnUsage() -> hasConsistentReturnUsage
    int endCheckIf() -> endCheckIf
    int endCheckSwitch() -> endCheckSwitch
    int endCheckTry() -> endCheckTry
    int endCheckLoop() -> endCheckLoop
    int endCheckBlock() -> endCheckBlock
    int endCheckLabel() -> endCheckLabel
    int endCheckBreak() -> endCheckBreak
    int endCheck() -> endCheck
    boolean hasSideEffects() -> hasSideEffects
    void resetTargets() -> resetTargets
    void resetTargets_r() -> resetTargets_r
    java.lang.String toString() -> toString
    void toString(org.mozilla.javascript.ObjToIntMap,java.lang.StringBuffer) -> toString
    java.lang.String toStringTree(org.mozilla.javascript.ast.ScriptNode) -> toStringTree
    void toStringTreeHelper(org.mozilla.javascript.ast.ScriptNode,org.mozilla.javascript.Node,org.mozilla.javascript.ObjToIntMap,int,java.lang.StringBuffer) -> toStringTreeHelper
    void generatePrintIds(org.mozilla.javascript.Node,org.mozilla.javascript.ObjToIntMap) -> generatePrintIds
    void appendPrintId(org.mozilla.javascript.Node,org.mozilla.javascript.ObjToIntMap,java.lang.StringBuffer) -> appendPrintId
    org.mozilla.javascript.Node access$000() -> access$000
org.mozilla.javascript.Node$1 -> org.mozilla.javascript.Node$1:
org.mozilla.javascript.Node$NodeIterator -> org.mozilla.javascript.Node$NodeIterator:
    org.mozilla.javascript.Node cursor -> cursor
    org.mozilla.javascript.Node prev -> prev
    org.mozilla.javascript.Node prev2 -> prev2
    boolean removed -> removed
    org.mozilla.javascript.Node this$0 -> this$0
    boolean hasNext() -> hasNext
    org.mozilla.javascript.Node next() -> next
    void remove() -> remove
    java.lang.Object next() -> next
org.mozilla.javascript.Node$PropListItem -> org.mozilla.javascript.Node$PropListItem:
    org.mozilla.javascript.Node$PropListItem next -> next
    int type -> type
    int intValue -> intValue
    java.lang.Object objectValue -> objectValue
org.mozilla.javascript.NodeTransformer -> org.mozilla.javascript.NodeTransformer:
    org.mozilla.javascript.ObjArray loops -> loops
    org.mozilla.javascript.ObjArray loopEnds -> loopEnds
    boolean hasFinally -> hasFinally
    void transform(org.mozilla.javascript.ast.ScriptNode) -> transform
    void transformCompilationUnit(org.mozilla.javascript.ast.ScriptNode) -> transformCompilationUnit
    void transformCompilationUnit_r(org.mozilla.javascript.ast.ScriptNode,org.mozilla.javascript.Node,org.mozilla.javascript.ast.Scope,boolean,boolean) -> transformCompilationUnit_r
    void visitNew(org.mozilla.javascript.Node,org.mozilla.javascript.ast.ScriptNode) -> visitNew
    void visitCall(org.mozilla.javascript.Node,org.mozilla.javascript.ast.ScriptNode) -> visitCall
    org.mozilla.javascript.Node visitLet(boolean,org.mozilla.javascript.Node,org.mozilla.javascript.Node,org.mozilla.javascript.Node) -> visitLet
    org.mozilla.javascript.Node addBeforeCurrent(org.mozilla.javascript.Node,org.mozilla.javascript.Node,org.mozilla.javascript.Node,org.mozilla.javascript.Node) -> addBeforeCurrent
    org.mozilla.javascript.Node replaceCurrent(org.mozilla.javascript.Node,org.mozilla.javascript.Node,org.mozilla.javascript.Node,org.mozilla.javascript.Node) -> replaceCurrent
org.mozilla.javascript.NotAFunctionException -> org.mozilla.javascript.NotAFunctionException:
    long serialVersionUID -> serialVersionUID
org.mozilla.javascript.ObjArray -> org.mozilla.javascript.ObjArray:
    long serialVersionUID -> serialVersionUID
    int size -> size
    boolean sealed -> sealed
    int FIELDS_STORE_SIZE -> FIELDS_STORE_SIZE
    java.lang.Object f0 -> f0
    java.lang.Object f1 -> f1
    java.lang.Object f2 -> f2
    java.lang.Object f3 -> f3
    java.lang.Object f4 -> f4
    java.lang.Object[] data -> data
    boolean isSealed() -> isSealed
    void seal() -> seal
    boolean isEmpty() -> isEmpty
    int size() -> size
    void setSize(int) -> setSize
    java.lang.Object get(int) -> get
    void set(int,java.lang.Object) -> set
    java.lang.Object getImpl(int) -> getImpl
    void setImpl(int,java.lang.Object) -> setImpl
    int indexOf(java.lang.Object) -> indexOf
    int lastIndexOf(java.lang.Object) -> lastIndexOf
    java.lang.Object peek() -> peek
    java.lang.Object pop() -> pop
    void push(java.lang.Object) -> push
    void add(java.lang.Object) -> add
    void add(int,java.lang.Object) -> add
    void remove(int) -> remove
    void clear() -> clear
    java.lang.Object[] toArray() -> toArray
    void toArray(java.lang.Object[]) -> toArray
    void toArray(java.lang.Object[],int) -> toArray
    void ensureCapacity(int) -> ensureCapacity
    java.lang.RuntimeException onInvalidIndex(int,int) -> onInvalidIndex
    java.lang.RuntimeException onEmptyStackTopRead() -> onEmptyStackTopRead
    java.lang.RuntimeException onSeledMutation() -> onSeledMutation
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
org.mozilla.javascript.ObjToIntMap -> org.mozilla.javascript.ObjToIntMap:
    long serialVersionUID -> serialVersionUID
    int A -> A
    java.lang.Object DELETED -> DELETED
    java.lang.Object[] keys -> keys
    int[] values -> values
    int power -> power
    int keyCount -> keyCount
    int occupiedCount -> occupiedCount
    boolean check -> check
    boolean isEmpty() -> isEmpty
    int size() -> size
    boolean has(java.lang.Object) -> has
    int get(java.lang.Object,int) -> get
    int getExisting(java.lang.Object) -> getExisting
    void put(java.lang.Object,int) -> put
    java.lang.Object intern(java.lang.Object) -> intern
    void remove(java.lang.Object) -> remove
    void clear() -> clear
    org.mozilla.javascript.ObjToIntMap$Iterator newIterator() -> newIterator
    void initIterator(org.mozilla.javascript.ObjToIntMap$Iterator) -> initIterator
    java.lang.Object[] getKeys() -> getKeys
    void getKeys(java.lang.Object[],int) -> getKeys
    int tableLookupStep(int,int,int) -> tableLookupStep
    int findIndex(java.lang.Object) -> findIndex
    int insertNewKey(java.lang.Object,int) -> insertNewKey
    void rehashTable() -> rehashTable
    int ensureIndex(java.lang.Object) -> ensureIndex
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
    java.lang.Object access$000() -> access$000
org.mozilla.javascript.ObjToIntMap$Iterator -> org.mozilla.javascript.ObjToIntMap$Iterator:
    org.mozilla.javascript.ObjToIntMap master -> master
    int cursor -> cursor
    int remaining -> remaining
    java.lang.Object[] keys -> keys
    int[] values -> values
    void init(java.lang.Object[],int[],int) -> init
    void start() -> start
    boolean done() -> done
    void next() -> next
    java.lang.Object getKey() -> getKey
    int getValue() -> getValue
    void setValue(int) -> setValue
org.mozilla.javascript.Parser -> org.mozilla.javascript.Parser:
    int ARGC_LIMIT -> ARGC_LIMIT
    int CLEAR_TI_MASK -> CLEAR_TI_MASK
    int TI_AFTER_EOL -> TI_AFTER_EOL
    int TI_CHECK_LABEL -> TI_CHECK_LABEL
    org.mozilla.javascript.CompilerEnvirons compilerEnv -> compilerEnv
    org.mozilla.javascript.ErrorReporter errorReporter -> errorReporter
    org.mozilla.javascript.ast.IdeErrorReporter errorCollector -> errorCollector
    java.lang.String sourceURI -> sourceURI
    char[] sourceChars -> sourceChars
    boolean calledByCompileFunction -> calledByCompileFunction
    boolean parseFinished -> parseFinished
    org.mozilla.javascript.TokenStream ts -> ts
    int currentFlaggedToken -> currentFlaggedToken
    int currentToken -> currentToken
    int syntaxErrorCount -> syntaxErrorCount
    java.util.List scannedComments -> scannedComments
    org.mozilla.javascript.ast.Comment currentJsDocComment -> currentJsDocComment
    int nestingOfFunction -> nestingOfFunction
    org.mozilla.javascript.ast.LabeledStatement currentLabel -> currentLabel
    boolean inDestructuringAssignment -> inDestructuringAssignment
    boolean inUseStrictDirective -> inUseStrictDirective
    org.mozilla.javascript.ast.ScriptNode currentScriptOrFn -> currentScriptOrFn
    org.mozilla.javascript.ast.Scope currentScope -> currentScope
    int endFlags -> endFlags
    boolean inForInit -> inForInit
    java.util.Map labelSet -> labelSet
    java.util.List loopSet -> loopSet
    java.util.List loopAndSwitchSet -> loopAndSwitchSet
    int prevNameTokenStart -> prevNameTokenStart
    java.lang.String prevNameTokenString -> prevNameTokenString
    int prevNameTokenLineno -> prevNameTokenLineno
    int PROP_ENTRY -> PROP_ENTRY
    int GET_ENTRY -> GET_ENTRY
    int SET_ENTRY -> SET_ENTRY
    void addStrictWarning(java.lang.String,java.lang.String) -> addStrictWarning
    void addStrictWarning(java.lang.String,java.lang.String,int,int) -> addStrictWarning
    void addWarning(java.lang.String,java.lang.String) -> addWarning
    void addWarning(java.lang.String,int,int) -> addWarning
    void addWarning(java.lang.String,java.lang.String,int,int) -> addWarning
    void addError(java.lang.String) -> addError
    void addError(java.lang.String,int,int) -> addError
    void addError(java.lang.String,java.lang.String) -> addError
    void addError(java.lang.String,java.lang.String,int,int) -> addError
    java.lang.String lookupMessage(java.lang.String) -> lookupMessage
    java.lang.String lookupMessage(java.lang.String,java.lang.String) -> lookupMessage
    void reportError(java.lang.String) -> reportError
    void reportError(java.lang.String,java.lang.String) -> reportError
    void reportError(java.lang.String,int,int) -> reportError
    void reportError(java.lang.String,java.lang.String,int,int) -> reportError
    int getNodeEnd(org.mozilla.javascript.ast.AstNode) -> getNodeEnd
    void recordComment(int,java.lang.String) -> recordComment
    org.mozilla.javascript.ast.Comment getAndResetJsDoc() -> getAndResetJsDoc
    int getNumberOfEols(java.lang.String) -> getNumberOfEols
    int peekToken() -> peekToken
    int peekFlaggedToken() -> peekFlaggedToken
    void consumeToken() -> consumeToken
    int nextToken() -> nextToken
    int nextFlaggedToken() -> nextFlaggedToken
    boolean matchToken(int) -> matchToken
    int peekTokenOrEOL() -> peekTokenOrEOL
    boolean mustMatchToken(int,java.lang.String) -> mustMatchToken
    boolean mustMatchToken(int,java.lang.String,int,int) -> mustMatchToken
    void mustHaveXML() -> mustHaveXML
    boolean eof() -> eof
    boolean insideFunction() -> insideFunction
    void pushScope(org.mozilla.javascript.ast.Scope) -> pushScope
    void popScope() -> popScope
    void enterLoop(org.mozilla.javascript.ast.Loop) -> enterLoop
    void exitLoop() -> exitLoop
    void enterSwitch(org.mozilla.javascript.ast.SwitchStatement) -> enterSwitch
    void exitSwitch() -> exitSwitch
    org.mozilla.javascript.ast.AstRoot parse(java.lang.String,java.lang.String,int) -> parse
    org.mozilla.javascript.ast.AstRoot parse(java.io.Reader,java.lang.String,int) -> parse
    org.mozilla.javascript.ast.AstRoot parse() -> parse
    org.mozilla.javascript.ast.AstNode parseFunctionBody() -> parseFunctionBody
    java.lang.String getDirective(org.mozilla.javascript.ast.AstNode) -> getDirective
    void parseFunctionParams(org.mozilla.javascript.ast.FunctionNode) -> parseFunctionParams
    org.mozilla.javascript.ast.FunctionNode function(int) -> function
    org.mozilla.javascript.ast.AstNode statements(org.mozilla.javascript.ast.AstNode) -> statements
    org.mozilla.javascript.ast.AstNode statements() -> statements
    org.mozilla.javascript.Parser$ConditionData condition() -> condition
    org.mozilla.javascript.ast.AstNode statement() -> statement
    org.mozilla.javascript.ast.AstNode statementHelper() -> statementHelper
    void autoInsertSemicolon(org.mozilla.javascript.ast.AstNode) -> autoInsertSemicolon
    org.mozilla.javascript.ast.IfStatement ifStatement() -> ifStatement
    org.mozilla.javascript.ast.SwitchStatement switchStatement() -> switchStatement
    org.mozilla.javascript.ast.WhileLoop whileLoop() -> whileLoop
    org.mozilla.javascript.ast.DoLoop doLoop() -> doLoop
    org.mozilla.javascript.ast.Loop forLoop() -> forLoop
    org.mozilla.javascript.ast.AstNode forLoopInit(int) -> forLoopInit
    org.mozilla.javascript.ast.TryStatement tryStatement() -> tryStatement
    org.mozilla.javascript.ast.ThrowStatement throwStatement() -> throwStatement
    org.mozilla.javascript.ast.LabeledStatement matchJumpLabelName() -> matchJumpLabelName
    org.mozilla.javascript.ast.BreakStatement breakStatement() -> breakStatement
    org.mozilla.javascript.ast.ContinueStatement continueStatement() -> continueStatement
    org.mozilla.javascript.ast.WithStatement withStatement() -> withStatement
    org.mozilla.javascript.ast.AstNode letStatement() -> letStatement
    boolean nowAllSet(int,int,int) -> nowAllSet
    org.mozilla.javascript.ast.AstNode returnOrYield(int,boolean) -> returnOrYield
    org.mozilla.javascript.ast.AstNode block() -> block
    org.mozilla.javascript.ast.AstNode defaultXmlNamespace() -> defaultXmlNamespace
    void recordLabel(org.mozilla.javascript.ast.Label,org.mozilla.javascript.ast.LabeledStatement) -> recordLabel
    org.mozilla.javascript.ast.AstNode nameOrLabel() -> nameOrLabel
    org.mozilla.javascript.ast.VariableDeclaration variables(int,int,boolean) -> variables
    org.mozilla.javascript.ast.AstNode let(boolean,int) -> let
    void defineSymbol(int,java.lang.String) -> defineSymbol
    void defineSymbol(int,java.lang.String,boolean) -> defineSymbol
    org.mozilla.javascript.ast.AstNode expr() -> expr
    org.mozilla.javascript.ast.AstNode assignExpr() -> assignExpr
    org.mozilla.javascript.ast.AstNode condExpr() -> condExpr
    org.mozilla.javascript.ast.AstNode orExpr() -> orExpr
    org.mozilla.javascript.ast.AstNode andExpr() -> andExpr
    org.mozilla.javascript.ast.AstNode bitOrExpr() -> bitOrExpr
    org.mozilla.javascript.ast.AstNode bitXorExpr() -> bitXorExpr
    org.mozilla.javascript.ast.AstNode bitAndExpr() -> bitAndExpr
    org.mozilla.javascript.ast.AstNode eqExpr() -> eqExpr
    org.mozilla.javascript.ast.AstNode relExpr() -> relExpr
    org.mozilla.javascript.ast.AstNode shiftExpr() -> shiftExpr
    org.mozilla.javascript.ast.AstNode addExpr() -> addExpr
    org.mozilla.javascript.ast.AstNode mulExpr() -> mulExpr
    org.mozilla.javascript.ast.AstNode unaryExpr() -> unaryExpr
    org.mozilla.javascript.ast.AstNode xmlInitializer() -> xmlInitializer
    java.util.List argumentList() -> argumentList
    org.mozilla.javascript.ast.AstNode memberExpr(boolean) -> memberExpr
    org.mozilla.javascript.ast.AstNode memberExprTail(boolean,org.mozilla.javascript.ast.AstNode) -> memberExprTail
    org.mozilla.javascript.ast.AstNode propertyAccess(int,org.mozilla.javascript.ast.AstNode) -> propertyAccess
    org.mozilla.javascript.ast.AstNode attributeAccess() -> attributeAccess
    org.mozilla.javascript.ast.AstNode propertyName(int,java.lang.String,int) -> propertyName
    org.mozilla.javascript.ast.XmlElemRef xmlElemRef(int,org.mozilla.javascript.ast.Name,int) -> xmlElemRef
    org.mozilla.javascript.ast.AstNode destructuringPrimaryExpr() -> destructuringPrimaryExpr
    org.mozilla.javascript.ast.AstNode primaryExpr() -> primaryExpr
    org.mozilla.javascript.ast.AstNode parenExpr() -> parenExpr
    org.mozilla.javascript.ast.AstNode name(int,int) -> name
    org.mozilla.javascript.ast.AstNode arrayLiteral() -> arrayLiteral
    org.mozilla.javascript.ast.AstNode arrayComprehension(org.mozilla.javascript.ast.AstNode,int) -> arrayComprehension
    org.mozilla.javascript.ast.ArrayComprehensionLoop arrayComprehensionLoop() -> arrayComprehensionLoop
    org.mozilla.javascript.ast.AstNode generatorExpression(org.mozilla.javascript.ast.AstNode,int) -> generatorExpression
    org.mozilla.javascript.ast.AstNode generatorExpression(org.mozilla.javascript.ast.AstNode,int,boolean) -> generatorExpression
    org.mozilla.javascript.ast.GeneratorExpressionLoop generatorExpressionLoop() -> generatorExpressionLoop
    org.mozilla.javascript.ast.ObjectLiteral objectLiteral() -> objectLiteral
    org.mozilla.javascript.ast.AstNode objliteralProperty() -> objliteralProperty
    org.mozilla.javascript.ast.ObjectProperty plainProperty(org.mozilla.javascript.ast.AstNode,int) -> plainProperty
    org.mozilla.javascript.ast.ObjectProperty getterSetterProperty(int,org.mozilla.javascript.ast.AstNode,boolean) -> getterSetterProperty
    org.mozilla.javascript.ast.Name createNameNode() -> createNameNode
    org.mozilla.javascript.ast.Name createNameNode(boolean,int) -> createNameNode
    org.mozilla.javascript.ast.StringLiteral createStringLiteral() -> createStringLiteral
    void checkActivationName(java.lang.String,int) -> checkActivationName
    void setRequiresActivation() -> setRequiresActivation
    void checkCallRequiresActivation(org.mozilla.javascript.ast.AstNode) -> checkCallRequiresActivation
    void setIsGenerator() -> setIsGenerator
    void checkBadIncDec(org.mozilla.javascript.ast.UnaryExpression) -> checkBadIncDec
    org.mozilla.javascript.ast.ErrorNode makeErrorNode() -> makeErrorNode
    int nodeEnd(org.mozilla.javascript.ast.AstNode) -> nodeEnd
    void saveNameTokenData(int,java.lang.String,int) -> saveNameTokenData
    int lineBeginningFor(int) -> lineBeginningFor
    void warnMissingSemi(int,int) -> warnMissingSemi
    void warnTrailingComma(int,java.util.List,int) -> warnTrailingComma
    java.lang.String readFully(java.io.Reader) -> readFully
    org.mozilla.javascript.Node createDestructuringAssignment(int,org.mozilla.javascript.Node,org.mozilla.javascript.Node) -> createDestructuringAssignment
    org.mozilla.javascript.Node destructuringAssignmentHelper(int,org.mozilla.javascript.Node,org.mozilla.javascript.Node,java.lang.String) -> destructuringAssignmentHelper
    boolean destructuringArray(org.mozilla.javascript.ast.ArrayLiteral,int,java.lang.String,org.mozilla.javascript.Node,java.util.List) -> destructuringArray
    boolean destructuringObject(org.mozilla.javascript.ast.ObjectLiteral,int,java.lang.String,org.mozilla.javascript.Node,java.util.List) -> destructuringObject
    org.mozilla.javascript.Node createName(java.lang.String) -> createName
    org.mozilla.javascript.Node createName(int,java.lang.String,org.mozilla.javascript.Node) -> createName
    org.mozilla.javascript.Node createNumber(double) -> createNumber
    org.mozilla.javascript.ast.Scope createScopeNode(int,int) -> createScopeNode
    org.mozilla.javascript.Node simpleAssignment(org.mozilla.javascript.Node,org.mozilla.javascript.Node) -> simpleAssignment
    void checkMutableReference(org.mozilla.javascript.Node) -> checkMutableReference
    org.mozilla.javascript.ast.AstNode removeParens(org.mozilla.javascript.ast.AstNode) -> removeParens
    void markDestructuring(org.mozilla.javascript.ast.AstNode) -> markDestructuring
    java.lang.RuntimeException codeBug() -> codeBug
    java.util.Map access$200(org.mozilla.javascript.Parser) -> access$200
    java.util.Map access$202(org.mozilla.javascript.Parser,java.util.Map) -> access$202
    java.util.List access$300(org.mozilla.javascript.Parser) -> access$300
    java.util.List access$302(org.mozilla.javascript.Parser,java.util.List) -> access$302
    java.util.List access$400(org.mozilla.javascript.Parser) -> access$400
    java.util.List access$402(org.mozilla.javascript.Parser,java.util.List) -> access$402
    int access$500(org.mozilla.javascript.Parser) -> access$500
    int access$502(org.mozilla.javascript.Parser,int) -> access$502
    boolean access$600(org.mozilla.javascript.Parser) -> access$600
    boolean access$602(org.mozilla.javascript.Parser,boolean) -> access$602
org.mozilla.javascript.Parser$1 -> org.mozilla.javascript.Parser$1:
org.mozilla.javascript.Parser$ConditionData -> org.mozilla.javascript.Parser$ConditionData:
    org.mozilla.javascript.ast.AstNode condition -> condition
    int lp -> lp
    int rp -> rp
org.mozilla.javascript.Parser$ParserException -> org.mozilla.javascript.Parser$ParserException:
    long serialVersionUID -> serialVersionUID
org.mozilla.javascript.Parser$PerFunctionVariables -> org.mozilla.javascript.Parser$PerFunctionVariables:
    org.mozilla.javascript.ast.ScriptNode savedCurrentScriptOrFn -> savedCurrentScriptOrFn
    org.mozilla.javascript.ast.Scope savedCurrentScope -> savedCurrentScope
    int savedEndFlags -> savedEndFlags
    boolean savedInForInit -> savedInForInit
    java.util.Map savedLabelSet -> savedLabelSet
    java.util.List savedLoopSet -> savedLoopSet
    java.util.List savedLoopAndSwitchSet -> savedLoopAndSwitchSet
    org.mozilla.javascript.Parser this$0 -> this$0
    void restore() -> restore
org.mozilla.javascript.PolicySecurityController -> org.mozilla.javascript.PolicySecurityController:
    byte[] secureCallerImplBytecode -> secureCallerImplBytecode
    java.util.Map callers -> callers
    java.lang.Class getStaticSecurityDomainClassInternal() -> getStaticSecurityDomainClassInternal
    org.mozilla.javascript.GeneratedClassLoader createClassLoader(java.lang.ClassLoader,java.lang.Object) -> createClassLoader
    java.lang.Object getDynamicSecurityDomain(java.lang.Object) -> getDynamicSecurityDomain
    java.lang.Object callWithDomain(java.lang.Object,org.mozilla.javascript.Context,org.mozilla.javascript.Callable,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> callWithDomain
    byte[] loadBytecode() -> loadBytecode
    byte[] access$000() -> access$000
org.mozilla.javascript.PolicySecurityController$1 -> org.mozilla.javascript.PolicySecurityController$1:
    java.lang.ClassLoader val$parent -> val$parent
    java.lang.Object val$securityDomain -> val$securityDomain
    org.mozilla.javascript.PolicySecurityController this$0 -> this$0
    java.lang.Object run() -> run
org.mozilla.javascript.PolicySecurityController$2 -> org.mozilla.javascript.PolicySecurityController$2:
    org.mozilla.javascript.Context val$cx -> val$cx
    org.mozilla.javascript.PolicySecurityController this$0 -> this$0
    java.lang.Object run() -> run
org.mozilla.javascript.PolicySecurityController$3 -> org.mozilla.javascript.PolicySecurityController$3:
    java.lang.ClassLoader val$classLoader -> val$classLoader
    java.security.CodeSource val$codeSource -> val$codeSource
    org.mozilla.javascript.PolicySecurityController this$0 -> this$0
    java.lang.Object run() -> run
org.mozilla.javascript.PolicySecurityController$Loader -> org.mozilla.javascript.PolicySecurityController$Loader:
    java.security.CodeSource codeSource -> codeSource
    java.lang.Class defineClass(java.lang.String,byte[]) -> defineClass
    void linkClass(java.lang.Class) -> linkClass
org.mozilla.javascript.PolicySecurityController$SecureCaller -> org.mozilla.javascript.PolicySecurityController$SecureCaller:
    java.lang.Object call(org.mozilla.javascript.Callable,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> call
org.mozilla.javascript.PropertyException -> org.mozilla.javascript.PropertyException:
    long serialVersionUID -> serialVersionUID
org.mozilla.javascript.Ref -> org.mozilla.javascript.Ref:
    long serialVersionUID -> serialVersionUID
    boolean has(org.mozilla.javascript.Context) -> has
    java.lang.Object get(org.mozilla.javascript.Context) -> get
    java.lang.Object set(org.mozilla.javascript.Context,java.lang.Object) -> set
    boolean delete(org.mozilla.javascript.Context) -> delete
org.mozilla.javascript.RefCallable -> org.mozilla.javascript.RefCallable:
    org.mozilla.javascript.Ref refCall(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> refCall
org.mozilla.javascript.RegExpProxy -> org.mozilla.javascript.RegExpProxy:
    int RA_MATCH -> RA_MATCH
    int RA_REPLACE -> RA_REPLACE
    int RA_SEARCH -> RA_SEARCH
    boolean isRegExp(org.mozilla.javascript.Scriptable) -> isRegExp
    java.lang.Object compileRegExp(org.mozilla.javascript.Context,java.lang.String,java.lang.String) -> compileRegExp
    org.mozilla.javascript.Scriptable wrapRegExp(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object) -> wrapRegExp
    java.lang.Object action(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[],int) -> action
    int find_split(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.String,java.lang.String,org.mozilla.javascript.Scriptable,int[],int[],boolean[],java.lang.String[][]) -> find_split
    java.lang.Object js_split(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.String,java.lang.Object[]) -> js_split
org.mozilla.javascript.ResolvedOverload -> org.mozilla.javascript.ResolvedOverload:
    java.lang.Class[] types -> types
    int index -> index
    boolean matches(java.lang.Object[]) -> matches
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.mozilla.javascript.RhinoException -> org.mozilla.javascript.RhinoException:
    long serialVersionUID -> serialVersionUID
    boolean useMozillaStackStyle -> useMozillaStackStyle
    java.lang.String sourceName -> sourceName
    int lineNumber -> lineNumber
    java.lang.String lineSource -> lineSource
    int columnNumber -> columnNumber
    java.lang.Object interpreterStackInfo -> interpreterStackInfo
    int[] interpreterLineData -> interpreterLineData
    java.lang.String getMessage() -> getMessage
    java.lang.String details() -> details
    java.lang.String sourceName() -> sourceName
    void initSourceName(java.lang.String) -> initSourceName
    int lineNumber() -> lineNumber
    void initLineNumber(int) -> initLineNumber
    int columnNumber() -> columnNumber
    void initColumnNumber(int) -> initColumnNumber
    java.lang.String lineSource() -> lineSource
    void initLineSource(java.lang.String) -> initLineSource
    void recordErrorOrigin(java.lang.String,int,java.lang.String,int) -> recordErrorOrigin
    java.lang.String generateStackTrace() -> generateStackTrace
    java.lang.String getScriptStackTrace() -> getScriptStackTrace
    java.lang.String getScriptStackTrace(java.io.FilenameFilter) -> getScriptStackTrace
    org.mozilla.javascript.ScriptStackElement[] getScriptStack() -> getScriptStack
    void printStackTrace(java.io.PrintWriter) -> printStackTrace
    void printStackTrace(java.io.PrintStream) -> printStackTrace
    boolean usesMozillaStackStyle() -> usesMozillaStackStyle
    void useMozillaStackStyle(boolean) -> useMozillaStackStyle
org.mozilla.javascript.RhinoSecurityManager -> org.mozilla.javascript.RhinoSecurityManager:
    java.lang.Class getCurrentScriptClass() -> getCurrentScriptClass
org.mozilla.javascript.Script -> org.mozilla.javascript.Script:
    java.lang.Object exec(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable) -> exec
org.mozilla.javascript.ScriptRuntime -> org.mozilla.javascript.ScriptRuntime:
    org.mozilla.javascript.BaseFunction THROW_TYPE_ERROR -> THROW_TYPE_ERROR
    java.lang.Class BooleanClass -> BooleanClass
    java.lang.Class ByteClass -> ByteClass
    java.lang.Class CharacterClass -> CharacterClass
    java.lang.Class ClassClass -> ClassClass
    java.lang.Class DoubleClass -> DoubleClass
    java.lang.Class FloatClass -> FloatClass
    java.lang.Class IntegerClass -> IntegerClass
    java.lang.Class LongClass -> LongClass
    java.lang.Class NumberClass -> NumberClass
    java.lang.Class ObjectClass -> ObjectClass
    java.lang.Class ShortClass -> ShortClass
    java.lang.Class StringClass -> StringClass
    java.lang.Class DateClass -> DateClass
    java.lang.Class ContextClass -> ContextClass
    java.lang.Class ContextFactoryClass -> ContextFactoryClass
    java.lang.Class FunctionClass -> FunctionClass
    java.lang.Class ScriptableObjectClass -> ScriptableObjectClass
    java.lang.Class ScriptableClass -> ScriptableClass
    java.util.Locale ROOT_LOCALE -> ROOT_LOCALE
    java.lang.Object LIBRARY_SCOPE_KEY -> LIBRARY_SCOPE_KEY
    double NaN -> NaN
    double negativeZero -> negativeZero
    java.lang.Double NaNobj -> NaNobj
    java.lang.String DEFAULT_NS_TAG -> DEFAULT_NS_TAG
    int ENUMERATE_KEYS -> ENUMERATE_KEYS
    int ENUMERATE_VALUES -> ENUMERATE_VALUES
    int ENUMERATE_ARRAY -> ENUMERATE_ARRAY
    int ENUMERATE_KEYS_NO_ITERATOR -> ENUMERATE_KEYS_NO_ITERATOR
    int ENUMERATE_VALUES_NO_ITERATOR -> ENUMERATE_VALUES_NO_ITERATOR
    int ENUMERATE_ARRAY_NO_ITERATOR -> ENUMERATE_ARRAY_NO_ITERATOR
    org.mozilla.javascript.ScriptRuntime$MessageProvider messageProvider -> messageProvider
    java.lang.Object[] emptyArgs -> emptyArgs
    java.lang.String[] emptyStrings -> emptyStrings
    org.mozilla.javascript.BaseFunction typeErrorThrower() -> typeErrorThrower
    boolean isRhinoRuntimeType(java.lang.Class) -> isRhinoRuntimeType
    org.mozilla.javascript.ScriptableObject initStandardObjects(org.mozilla.javascript.Context,org.mozilla.javascript.ScriptableObject,boolean) -> initStandardObjects
    java.lang.String[] getTopPackageNames() -> getTopPackageNames
    org.mozilla.javascript.ScriptableObject getLibraryScopeOrNull(org.mozilla.javascript.Scriptable) -> getLibraryScopeOrNull
    boolean isJSLineTerminator(int) -> isJSLineTerminator
    boolean isJSWhitespaceOrLineTerminator(int) -> isJSWhitespaceOrLineTerminator
    boolean isStrWhiteSpaceChar(int) -> isStrWhiteSpaceChar
    java.lang.Boolean wrapBoolean(boolean) -> wrapBoolean
    java.lang.Integer wrapInt(int) -> wrapInt
    java.lang.Number wrapNumber(double) -> wrapNumber
    boolean toBoolean(java.lang.Object) -> toBoolean
    double toNumber(java.lang.Object) -> toNumber
    double toNumber(java.lang.Object[],int) -> toNumber
    double stringToNumber(java.lang.String,int,int) -> stringToNumber
    double toNumber(java.lang.String) -> toNumber
    java.lang.Object[] padArguments(java.lang.Object[],int) -> padArguments
    java.lang.String escapeString(java.lang.String) -> escapeString
    java.lang.String escapeString(java.lang.String,char) -> escapeString
    boolean isValidIdentifierName(java.lang.String) -> isValidIdentifierName
    java.lang.CharSequence toCharSequence(java.lang.Object) -> toCharSequence
    java.lang.String toString(java.lang.Object) -> toString
    java.lang.String defaultObjectToString(org.mozilla.javascript.Scriptable) -> defaultObjectToString
    java.lang.String toString(java.lang.Object[],int) -> toString
    java.lang.String toString(double) -> toString
    java.lang.String numberToString(double,int) -> numberToString
    java.lang.String uneval(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object) -> uneval
    java.lang.String defaultObjectToSource(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> defaultObjectToSource
    org.mozilla.javascript.Scriptable toObject(org.mozilla.javascript.Scriptable,java.lang.Object) -> toObject
    org.mozilla.javascript.Scriptable toObjectOrNull(org.mozilla.javascript.Context,java.lang.Object) -> toObjectOrNull
    org.mozilla.javascript.Scriptable toObjectOrNull(org.mozilla.javascript.Context,java.lang.Object,org.mozilla.javascript.Scriptable) -> toObjectOrNull
    org.mozilla.javascript.Scriptable toObject(org.mozilla.javascript.Scriptable,java.lang.Object,java.lang.Class) -> toObject
    org.mozilla.javascript.Scriptable toObject(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object) -> toObject
    org.mozilla.javascript.Scriptable toObject(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object,java.lang.Class) -> toObject
    java.lang.Object call(org.mozilla.javascript.Context,java.lang.Object,java.lang.Object,java.lang.Object[],org.mozilla.javascript.Scriptable) -> call
    org.mozilla.javascript.Scriptable newObject(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.String,java.lang.Object[]) -> newObject
    org.mozilla.javascript.Scriptable newBuiltinObject(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.TopLevel$Builtins,java.lang.Object[]) -> newBuiltinObject
    double toInteger(java.lang.Object) -> toInteger
    double toInteger(double) -> toInteger
    double toInteger(java.lang.Object[],int) -> toInteger
    int toInt32(java.lang.Object) -> toInt32
    int toInt32(java.lang.Object[],int) -> toInt32
    int toInt32(double) -> toInt32
    long toUint32(double) -> toUint32
    long toUint32(java.lang.Object) -> toUint32
    char toUint16(java.lang.Object) -> toUint16
    java.lang.Object setDefaultNamespace(java.lang.Object,org.mozilla.javascript.Context) -> setDefaultNamespace
    java.lang.Object searchDefaultNamespace(org.mozilla.javascript.Context) -> searchDefaultNamespace
    java.lang.Object getTopLevelProp(org.mozilla.javascript.Scriptable,java.lang.String) -> getTopLevelProp
    org.mozilla.javascript.Function getExistingCtor(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.String) -> getExistingCtor
    long indexFromString(java.lang.String) -> indexFromString
    long testUint32String(java.lang.String) -> testUint32String
    java.lang.Object getIndexObject(java.lang.String) -> getIndexObject
    java.lang.Object getIndexObject(double) -> getIndexObject
    java.lang.String toStringIdOrIndex(org.mozilla.javascript.Context,java.lang.Object) -> toStringIdOrIndex
    java.lang.Object getObjectElem(java.lang.Object,java.lang.Object,org.mozilla.javascript.Context) -> getObjectElem
    java.lang.Object getObjectElem(java.lang.Object,java.lang.Object,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable) -> getObjectElem
    java.lang.Object getObjectElem(org.mozilla.javascript.Scriptable,java.lang.Object,org.mozilla.javascript.Context) -> getObjectElem
    java.lang.Object getObjectProp(java.lang.Object,java.lang.String,org.mozilla.javascript.Context) -> getObjectProp
    java.lang.Object getObjectProp(java.lang.Object,java.lang.String,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable) -> getObjectProp
    java.lang.Object getObjectProp(org.mozilla.javascript.Scriptable,java.lang.String,org.mozilla.javascript.Context) -> getObjectProp
    java.lang.Object getObjectPropNoWarn(java.lang.Object,java.lang.String,org.mozilla.javascript.Context) -> getObjectPropNoWarn
    java.lang.Object getObjectIndex(java.lang.Object,double,org.mozilla.javascript.Context) -> getObjectIndex
    java.lang.Object getObjectIndex(org.mozilla.javascript.Scriptable,int,org.mozilla.javascript.Context) -> getObjectIndex
    java.lang.Object setObjectElem(java.lang.Object,java.lang.Object,java.lang.Object,org.mozilla.javascript.Context) -> setObjectElem
    java.lang.Object setObjectElem(org.mozilla.javascript.Scriptable,java.lang.Object,java.lang.Object,org.mozilla.javascript.Context) -> setObjectElem
    java.lang.Object setObjectProp(java.lang.Object,java.lang.String,java.lang.Object,org.mozilla.javascript.Context) -> setObjectProp
    java.lang.Object setObjectProp(org.mozilla.javascript.Scriptable,java.lang.String,java.lang.Object,org.mozilla.javascript.Context) -> setObjectProp
    java.lang.Object setObjectIndex(java.lang.Object,double,java.lang.Object,org.mozilla.javascript.Context) -> setObjectIndex
    java.lang.Object setObjectIndex(org.mozilla.javascript.Scriptable,int,java.lang.Object,org.mozilla.javascript.Context) -> setObjectIndex
    boolean deleteObjectElem(org.mozilla.javascript.Scriptable,java.lang.Object,org.mozilla.javascript.Context) -> deleteObjectElem
    boolean hasObjectElem(org.mozilla.javascript.Scriptable,java.lang.Object,org.mozilla.javascript.Context) -> hasObjectElem
    java.lang.Object refGet(org.mozilla.javascript.Ref,org.mozilla.javascript.Context) -> refGet
    java.lang.Object refSet(org.mozilla.javascript.Ref,java.lang.Object,org.mozilla.javascript.Context) -> refSet
    java.lang.Object refDel(org.mozilla.javascript.Ref,org.mozilla.javascript.Context) -> refDel
    boolean isSpecialProperty(java.lang.String) -> isSpecialProperty
    org.mozilla.javascript.Ref specialRef(java.lang.Object,java.lang.String,org.mozilla.javascript.Context) -> specialRef
    java.lang.Object delete(java.lang.Object,java.lang.Object,org.mozilla.javascript.Context) -> delete
    java.lang.Object delete(java.lang.Object,java.lang.Object,org.mozilla.javascript.Context,boolean) -> delete
    java.lang.Object name(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.String) -> name
    java.lang.Object nameOrFunction(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.String,boolean) -> nameOrFunction
    java.lang.Object topScopeName(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.String) -> topScopeName
    org.mozilla.javascript.Scriptable bind(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.String) -> bind
    java.lang.Object setName(org.mozilla.javascript.Scriptable,java.lang.Object,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.String) -> setName
    java.lang.Object strictSetName(org.mozilla.javascript.Scriptable,java.lang.Object,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.String) -> strictSetName
    java.lang.Object setConst(org.mozilla.javascript.Scriptable,java.lang.Object,org.mozilla.javascript.Context,java.lang.String) -> setConst
    org.mozilla.javascript.Scriptable toIterator(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,boolean) -> toIterator
    java.lang.Object enumInit(java.lang.Object,org.mozilla.javascript.Context,boolean) -> enumInit
    java.lang.Object enumInit(java.lang.Object,org.mozilla.javascript.Context,int) -> enumInit
    void setEnumNumbers(java.lang.Object,boolean) -> setEnumNumbers
    java.lang.Boolean enumNext(java.lang.Object) -> enumNext
    java.lang.Object enumId(java.lang.Object,org.mozilla.javascript.Context) -> enumId
    java.lang.Object enumValue(java.lang.Object,org.mozilla.javascript.Context) -> enumValue
    void enumChangeObject(org.mozilla.javascript.ScriptRuntime$IdEnumeration) -> enumChangeObject
    org.mozilla.javascript.Callable getNameFunctionAndThis(java.lang.String,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable) -> getNameFunctionAndThis
    org.mozilla.javascript.Callable getElemFunctionAndThis(java.lang.Object,java.lang.Object,org.mozilla.javascript.Context) -> getElemFunctionAndThis
    org.mozilla.javascript.Callable getPropFunctionAndThis(java.lang.Object,java.lang.String,org.mozilla.javascript.Context) -> getPropFunctionAndThis
    org.mozilla.javascript.Callable getPropFunctionAndThis(java.lang.Object,java.lang.String,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable) -> getPropFunctionAndThis
    org.mozilla.javascript.Callable getPropFunctionAndThisHelper(java.lang.Object,java.lang.String,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable) -> getPropFunctionAndThisHelper
    org.mozilla.javascript.Callable getValueFunctionAndThis(java.lang.Object,org.mozilla.javascript.Context) -> getValueFunctionAndThis
    org.mozilla.javascript.Ref callRef(org.mozilla.javascript.Callable,org.mozilla.javascript.Scriptable,java.lang.Object[],org.mozilla.javascript.Context) -> callRef
    org.mozilla.javascript.Scriptable newObject(java.lang.Object,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> newObject
    java.lang.Object callSpecial(org.mozilla.javascript.Context,org.mozilla.javascript.Callable,org.mozilla.javascript.Scriptable,java.lang.Object[],org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,int,java.lang.String,int) -> callSpecial
    java.lang.Object newSpecial(org.mozilla.javascript.Context,java.lang.Object,java.lang.Object[],org.mozilla.javascript.Scriptable,int) -> newSpecial
    java.lang.Object applyOrCall(boolean,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> applyOrCall
    java.lang.Object[] getApplyArguments(org.mozilla.javascript.Context,java.lang.Object) -> getApplyArguments
    org.mozilla.javascript.Callable getCallable(org.mozilla.javascript.Scriptable) -> getCallable
    java.lang.Object evalSpecial(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object,java.lang.Object[],java.lang.String,int) -> evalSpecial
    java.lang.String typeof(java.lang.Object) -> typeof
    java.lang.String typeofName(org.mozilla.javascript.Scriptable,java.lang.String) -> typeofName
    java.lang.Object add(java.lang.Object,java.lang.Object,org.mozilla.javascript.Context) -> add
    java.lang.CharSequence add(java.lang.CharSequence,java.lang.Object) -> add
    java.lang.CharSequence add(java.lang.Object,java.lang.CharSequence) -> add
    java.lang.Object nameIncrDecr(org.mozilla.javascript.Scriptable,java.lang.String,int) -> nameIncrDecr
    java.lang.Object nameIncrDecr(org.mozilla.javascript.Scriptable,java.lang.String,org.mozilla.javascript.Context,int) -> nameIncrDecr
    java.lang.Object propIncrDecr(java.lang.Object,java.lang.String,org.mozilla.javascript.Context,int) -> propIncrDecr
    java.lang.Object doScriptableIncrDecr(org.mozilla.javascript.Scriptable,java.lang.String,org.mozilla.javascript.Scriptable,java.lang.Object,int) -> doScriptableIncrDecr
    java.lang.Object elemIncrDecr(java.lang.Object,java.lang.Object,org.mozilla.javascript.Context,int) -> elemIncrDecr
    java.lang.Object refIncrDecr(org.mozilla.javascript.Ref,org.mozilla.javascript.Context,int) -> refIncrDecr
    java.lang.Object toPrimitive(java.lang.Object) -> toPrimitive
    java.lang.Object toPrimitive(java.lang.Object,java.lang.Class) -> toPrimitive
    boolean eq(java.lang.Object,java.lang.Object) -> eq
    boolean isPrimitive(java.lang.Object) -> isPrimitive
    boolean eqNumber(double,java.lang.Object) -> eqNumber
    boolean eqString(java.lang.CharSequence,java.lang.Object) -> eqString
    boolean shallowEq(java.lang.Object,java.lang.Object) -> shallowEq
    boolean instanceOf(java.lang.Object,java.lang.Object,org.mozilla.javascript.Context) -> instanceOf
    boolean jsDelegatesTo(org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable) -> jsDelegatesTo
    boolean in(java.lang.Object,java.lang.Object,org.mozilla.javascript.Context) -> in
    boolean cmp_LT(java.lang.Object,java.lang.Object) -> cmp_LT
    boolean cmp_LE(java.lang.Object,java.lang.Object) -> cmp_LE
    org.mozilla.javascript.ScriptableObject getGlobal(org.mozilla.javascript.Context) -> getGlobal
    boolean hasTopCall(org.mozilla.javascript.Context) -> hasTopCall
    org.mozilla.javascript.Scriptable getTopCallScope(org.mozilla.javascript.Context) -> getTopCallScope
    java.lang.Object doTopCall(org.mozilla.javascript.Callable,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> doTopCall
    org.mozilla.javascript.Scriptable checkDynamicScope(org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable) -> checkDynamicScope
    void addInstructionCount(org.mozilla.javascript.Context,int) -> addInstructionCount
    void initScript(org.mozilla.javascript.NativeFunction,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,boolean) -> initScript
    org.mozilla.javascript.Scriptable createFunctionActivation(org.mozilla.javascript.NativeFunction,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> createFunctionActivation
    void enterActivationFunction(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable) -> enterActivationFunction
    void exitActivationFunction(org.mozilla.javascript.Context) -> exitActivationFunction
    org.mozilla.javascript.NativeCall findFunctionActivation(org.mozilla.javascript.Context,org.mozilla.javascript.Function) -> findFunctionActivation
    org.mozilla.javascript.Scriptable newCatchScope(java.lang.Throwable,org.mozilla.javascript.Scriptable,java.lang.String,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable) -> newCatchScope
    boolean isVisible(org.mozilla.javascript.Context,java.lang.Object) -> isVisible
    org.mozilla.javascript.Scriptable enterWith(java.lang.Object,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable) -> enterWith
    org.mozilla.javascript.Scriptable leaveWith(org.mozilla.javascript.Scriptable) -> leaveWith
    org.mozilla.javascript.Scriptable enterDotQuery(java.lang.Object,org.mozilla.javascript.Scriptable) -> enterDotQuery
    java.lang.Object updateDotQuery(boolean,org.mozilla.javascript.Scriptable) -> updateDotQuery
    org.mozilla.javascript.Scriptable leaveDotQuery(org.mozilla.javascript.Scriptable) -> leaveDotQuery
    void setFunctionProtoAndParent(org.mozilla.javascript.BaseFunction,org.mozilla.javascript.Scriptable) -> setFunctionProtoAndParent
    void setObjectProtoAndParent(org.mozilla.javascript.ScriptableObject,org.mozilla.javascript.Scriptable) -> setObjectProtoAndParent
    void setBuiltinProtoAndParent(org.mozilla.javascript.ScriptableObject,org.mozilla.javascript.Scriptable,org.mozilla.javascript.TopLevel$Builtins) -> setBuiltinProtoAndParent
    void initFunction(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.NativeFunction,int,boolean) -> initFunction
    org.mozilla.javascript.Scriptable newArrayLiteral(java.lang.Object[],int[],org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable) -> newArrayLiteral
    org.mozilla.javascript.Scriptable newObjectLiteral(java.lang.Object[],java.lang.Object[],org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable) -> newObjectLiteral
    org.mozilla.javascript.Scriptable newObjectLiteral(java.lang.Object[],java.lang.Object[],int[],org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable) -> newObjectLiteral
    boolean isArrayObject(java.lang.Object) -> isArrayObject
    java.lang.Object[] getArrayElements(org.mozilla.javascript.Scriptable) -> getArrayElements
    void checkDeprecated(org.mozilla.javascript.Context,java.lang.String) -> checkDeprecated
    java.lang.String getMessage0(java.lang.String) -> getMessage0
    java.lang.String getMessage1(java.lang.String,java.lang.Object) -> getMessage1
    java.lang.String getMessage2(java.lang.String,java.lang.Object,java.lang.Object) -> getMessage2
    java.lang.String getMessage3(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> getMessage3
    java.lang.String getMessage4(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> getMessage4
    java.lang.String getMessage(java.lang.String,java.lang.Object[]) -> getMessage
    org.mozilla.javascript.EcmaError constructError(java.lang.String,java.lang.String) -> constructError
    org.mozilla.javascript.EcmaError constructError(java.lang.String,java.lang.String,int) -> constructError
    org.mozilla.javascript.EcmaError constructError(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,int) -> constructError
    org.mozilla.javascript.EcmaError typeError(java.lang.String) -> typeError
    org.mozilla.javascript.EcmaError typeError0(java.lang.String) -> typeError0
    org.mozilla.javascript.EcmaError typeError1(java.lang.String,java.lang.String) -> typeError1
    org.mozilla.javascript.EcmaError typeError2(java.lang.String,java.lang.String,java.lang.String) -> typeError2
    org.mozilla.javascript.EcmaError typeError3(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> typeError3
    java.lang.RuntimeException undefReadError(java.lang.Object,java.lang.Object) -> undefReadError
    java.lang.RuntimeException undefCallError(java.lang.Object,java.lang.Object) -> undefCallError
    java.lang.RuntimeException undefWriteError(java.lang.Object,java.lang.Object,java.lang.Object) -> undefWriteError
    java.lang.RuntimeException notFoundError(org.mozilla.javascript.Scriptable,java.lang.String) -> notFoundError
    java.lang.RuntimeException notFunctionError(java.lang.Object) -> notFunctionError
    java.lang.RuntimeException notFunctionError(java.lang.Object,java.lang.Object) -> notFunctionError
    java.lang.RuntimeException notFunctionError(java.lang.Object,java.lang.Object,java.lang.String) -> notFunctionError
    java.lang.RuntimeException notXmlError(java.lang.Object) -> notXmlError
    void warnAboutNonJSObject(java.lang.Object) -> warnAboutNonJSObject
    org.mozilla.javascript.RegExpProxy getRegExpProxy(org.mozilla.javascript.Context) -> getRegExpProxy
    void setRegExpProxy(org.mozilla.javascript.Context,org.mozilla.javascript.RegExpProxy) -> setRegExpProxy
    org.mozilla.javascript.RegExpProxy checkRegExpProxy(org.mozilla.javascript.Context) -> checkRegExpProxy
    org.mozilla.javascript.Scriptable wrapRegExp(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object) -> wrapRegExp
    org.mozilla.javascript.xml.XMLLib currentXMLLib(org.mozilla.javascript.Context) -> currentXMLLib
    java.lang.String escapeAttributeValue(java.lang.Object,org.mozilla.javascript.Context) -> escapeAttributeValue
    java.lang.String escapeTextValue(java.lang.Object,org.mozilla.javascript.Context) -> escapeTextValue
    org.mozilla.javascript.Ref memberRef(java.lang.Object,java.lang.Object,org.mozilla.javascript.Context,int) -> memberRef
    org.mozilla.javascript.Ref memberRef(java.lang.Object,java.lang.Object,java.lang.Object,org.mozilla.javascript.Context,int) -> memberRef
    org.mozilla.javascript.Ref nameRef(java.lang.Object,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,int) -> nameRef
    org.mozilla.javascript.Ref nameRef(java.lang.Object,java.lang.Object,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,int) -> nameRef
    void storeIndexResult(org.mozilla.javascript.Context,int) -> storeIndexResult
    int lastIndexResult(org.mozilla.javascript.Context) -> lastIndexResult
    void storeUint32Result(org.mozilla.javascript.Context,long) -> storeUint32Result
    long lastUint32Result(org.mozilla.javascript.Context) -> lastUint32Result
    void storeScriptable(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable) -> storeScriptable
    org.mozilla.javascript.Scriptable lastStoredScriptable(org.mozilla.javascript.Context) -> lastStoredScriptable
    java.lang.String makeUrlForGeneratedScript(boolean,java.lang.String,int) -> makeUrlForGeneratedScript
    boolean isGeneratedScript(java.lang.String) -> isGeneratedScript
    java.lang.RuntimeException errorWithClassName(java.lang.String,java.lang.Object) -> errorWithClassName
    org.mozilla.javascript.JavaScriptException throwError(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.String) -> throwError
org.mozilla.javascript.ScriptRuntime$1 -> org.mozilla.javascript.ScriptRuntime$1:
    long serialVersionUID -> serialVersionUID
    java.lang.Object call(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> call
    int getLength() -> getLength
org.mozilla.javascript.ScriptRuntime$DefaultMessageProvider -> org.mozilla.javascript.ScriptRuntime$DefaultMessageProvider:
    java.lang.String getMessage(java.lang.String,java.lang.Object[]) -> getMessage
org.mozilla.javascript.ScriptRuntime$IdEnumeration -> org.mozilla.javascript.ScriptRuntime$IdEnumeration:
    long serialVersionUID -> serialVersionUID
    org.mozilla.javascript.Scriptable obj -> obj
    java.lang.Object[] ids -> ids
    int index -> index
    org.mozilla.javascript.ObjToIntMap used -> used
    java.lang.Object currentId -> currentId
    int enumType -> enumType
    boolean enumNumbers -> enumNumbers
    org.mozilla.javascript.Scriptable iterator -> iterator
org.mozilla.javascript.ScriptRuntime$MessageProvider -> org.mozilla.javascript.ScriptRuntime$MessageProvider:
    java.lang.String getMessage(java.lang.String,java.lang.Object[]) -> getMessage
org.mozilla.javascript.ScriptRuntime$NoSuchMethodShim -> org.mozilla.javascript.ScriptRuntime$NoSuchMethodShim:
    java.lang.String methodName -> methodName
    org.mozilla.javascript.Callable noSuchMethodMethod -> noSuchMethodMethod
    java.lang.Object call(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> call
org.mozilla.javascript.ScriptStackElement -> org.mozilla.javascript.ScriptStackElement:
    long serialVersionUID -> serialVersionUID
    java.lang.String fileName -> fileName
    java.lang.String functionName -> functionName
    int lineNumber -> lineNumber
    java.lang.String toString() -> toString
    void renderJavaStyle(java.lang.StringBuilder) -> renderJavaStyle
    void renderMozillaStyle(java.lang.StringBuilder) -> renderMozillaStyle
org.mozilla.javascript.Scriptable -> org.mozilla.javascript.Scriptable:
    java.lang.Object NOT_FOUND -> NOT_FOUND
    java.lang.String getClassName() -> getClassName
    java.lang.Object get(java.lang.String,org.mozilla.javascript.Scriptable) -> get
    java.lang.Object get(int,org.mozilla.javascript.Scriptable) -> get
    boolean has(java.lang.String,org.mozilla.javascript.Scriptable) -> has
    boolean has(int,org.mozilla.javascript.Scriptable) -> has
    void put(java.lang.String,org.mozilla.javascript.Scriptable,java.lang.Object) -> put
    void put(int,org.mozilla.javascript.Scriptable,java.lang.Object) -> put
    void delete(java.lang.String) -> delete
    void delete(int) -> delete
    org.mozilla.javascript.Scriptable getPrototype() -> getPrototype
    void setPrototype(org.mozilla.javascript.Scriptable) -> setPrototype
    org.mozilla.javascript.Scriptable getParentScope() -> getParentScope
    void setParentScope(org.mozilla.javascript.Scriptable) -> setParentScope
    java.lang.Object[] getIds() -> getIds
    java.lang.Object getDefaultValue(java.lang.Class) -> getDefaultValue
    boolean hasInstance(org.mozilla.javascript.Scriptable) -> hasInstance
org.mozilla.javascript.ScriptableObject -> org.mozilla.javascript.ScriptableObject:
    long serialVersionUID -> serialVersionUID
    int EMPTY -> EMPTY
    int READONLY -> READONLY
    int DONTENUM -> DONTENUM
    int PERMANENT -> PERMANENT
    int UNINITIALIZED_CONST -> UNINITIALIZED_CONST
    int CONST -> CONST
    org.mozilla.javascript.Scriptable prototypeObject -> prototypeObject
    org.mozilla.javascript.Scriptable parentScopeObject -> parentScopeObject
    org.mozilla.javascript.ScriptableObject$Slot[] slots -> slots
    int count -> count
    org.mozilla.javascript.ScriptableObject$Slot firstAdded -> firstAdded
    org.mozilla.javascript.ScriptableObject$Slot lastAdded -> lastAdded
    java.util.Map associatedValues -> associatedValues
    int SLOT_QUERY -> SLOT_QUERY
    int SLOT_MODIFY -> SLOT_MODIFY
    int SLOT_MODIFY_CONST -> SLOT_MODIFY_CONST
    int SLOT_MODIFY_GETTER_SETTER -> SLOT_MODIFY_GETTER_SETTER
    int SLOT_CONVERT_ACCESSOR_TO_DATA -> SLOT_CONVERT_ACCESSOR_TO_DATA
    int INITIAL_SLOT_SIZE -> INITIAL_SLOT_SIZE
    boolean isExtensible -> isExtensible
    boolean $assertionsDisabled -> $assertionsDisabled
    org.mozilla.javascript.ScriptableObject buildDataDescriptor(org.mozilla.javascript.Scriptable,java.lang.Object,int) -> buildDataDescriptor
    void checkValidAttributes(int) -> checkValidAttributes
    java.lang.String getTypeOf() -> getTypeOf
    java.lang.String getClassName() -> getClassName
    boolean has(java.lang.String,org.mozilla.javascript.Scriptable) -> has
    boolean has(int,org.mozilla.javascript.Scriptable) -> has
    java.lang.Object get(java.lang.String,org.mozilla.javascript.Scriptable) -> get
    java.lang.Object get(int,org.mozilla.javascript.Scriptable) -> get
    void put(java.lang.String,org.mozilla.javascript.Scriptable,java.lang.Object) -> put
    void put(int,org.mozilla.javascript.Scriptable,java.lang.Object) -> put
    void delete(java.lang.String) -> delete
    void delete(int) -> delete
    void putConst(java.lang.String,org.mozilla.javascript.Scriptable,java.lang.Object) -> putConst
    void defineConst(java.lang.String,org.mozilla.javascript.Scriptable) -> defineConst
    boolean isConst(java.lang.String) -> isConst
    int getAttributes(java.lang.String,org.mozilla.javascript.Scriptable) -> getAttributes
    int getAttributes(int,org.mozilla.javascript.Scriptable) -> getAttributes
    void setAttributes(java.lang.String,org.mozilla.javascript.Scriptable,int) -> setAttributes
    void setAttributes(int,org.mozilla.javascript.Scriptable,int) -> setAttributes
    int getAttributes(java.lang.String) -> getAttributes
    int getAttributes(int) -> getAttributes
    void setAttributes(java.lang.String,int) -> setAttributes
    void setAttributes(int,int) -> setAttributes
    void setGetterOrSetter(java.lang.String,int,org.mozilla.javascript.Callable,boolean) -> setGetterOrSetter
    void setGetterOrSetter(java.lang.String,int,org.mozilla.javascript.Callable,boolean,boolean) -> setGetterOrSetter
    java.lang.Object getGetterOrSetter(java.lang.String,int,boolean) -> getGetterOrSetter
    boolean isGetterOrSetter(java.lang.String,int,boolean) -> isGetterOrSetter
    void addLazilyInitializedValue(java.lang.String,int,org.mozilla.javascript.LazilyLoadedCtor,int) -> addLazilyInitializedValue
    org.mozilla.javascript.Scriptable getPrototype() -> getPrototype
    void setPrototype(org.mozilla.javascript.Scriptable) -> setPrototype
    org.mozilla.javascript.Scriptable getParentScope() -> getParentScope
    void setParentScope(org.mozilla.javascript.Scriptable) -> setParentScope
    java.lang.Object[] getIds() -> getIds
    java.lang.Object[] getAllIds() -> getAllIds
    java.lang.Object getDefaultValue(java.lang.Class) -> getDefaultValue
    java.lang.Object getDefaultValue(org.mozilla.javascript.Scriptable,java.lang.Class) -> getDefaultValue
    boolean hasInstance(org.mozilla.javascript.Scriptable) -> hasInstance
    boolean avoidObjectDetection() -> avoidObjectDetection
    java.lang.Object equivalentValues(java.lang.Object) -> equivalentValues
    void defineClass(org.mozilla.javascript.Scriptable,java.lang.Class) -> defineClass
    void defineClass(org.mozilla.javascript.Scriptable,java.lang.Class,boolean) -> defineClass
    java.lang.String defineClass(org.mozilla.javascript.Scriptable,java.lang.Class,boolean,boolean) -> defineClass
    org.mozilla.javascript.BaseFunction buildClassCtor(org.mozilla.javascript.Scriptable,java.lang.Class,boolean,boolean) -> buildClassCtor
    java.lang.reflect.Member findAnnotatedMember(java.lang.reflect.AccessibleObject[],java.lang.Class) -> findAnnotatedMember
    java.lang.reflect.Method findSetterMethod(java.lang.reflect.Method[],java.lang.String,java.lang.String) -> findSetterMethod
    java.lang.String getPropertyName(java.lang.String,java.lang.String,java.lang.annotation.Annotation) -> getPropertyName
    java.lang.Class extendsScriptable(java.lang.Class) -> extendsScriptable
    void defineProperty(java.lang.String,java.lang.Object,int) -> defineProperty
    void defineProperty(org.mozilla.javascript.Scriptable,java.lang.String,java.lang.Object,int) -> defineProperty
    void defineConstProperty(org.mozilla.javascript.Scriptable,java.lang.String) -> defineConstProperty
    void defineProperty(java.lang.String,java.lang.Class,int) -> defineProperty
    void defineProperty(java.lang.String,java.lang.Object,java.lang.reflect.Method,java.lang.reflect.Method,int) -> defineProperty
    void defineOwnProperties(org.mozilla.javascript.Context,org.mozilla.javascript.ScriptableObject) -> defineOwnProperties
    void defineOwnProperty(org.mozilla.javascript.Context,java.lang.Object,org.mozilla.javascript.ScriptableObject) -> defineOwnProperty
    void defineOwnProperty(org.mozilla.javascript.Context,java.lang.Object,org.mozilla.javascript.ScriptableObject,boolean) -> defineOwnProperty
    void checkPropertyDefinition(org.mozilla.javascript.ScriptableObject) -> checkPropertyDefinition
    void checkPropertyChange(java.lang.String,org.mozilla.javascript.ScriptableObject,org.mozilla.javascript.ScriptableObject) -> checkPropertyChange
    boolean isTrue(java.lang.Object) -> isTrue
    boolean isFalse(java.lang.Object) -> isFalse
    boolean sameValue(java.lang.Object,java.lang.Object) -> sameValue
    int applyDescriptorToAttributeBitset(int,org.mozilla.javascript.ScriptableObject) -> applyDescriptorToAttributeBitset
    boolean isDataDescriptor(org.mozilla.javascript.ScriptableObject) -> isDataDescriptor
    boolean isAccessorDescriptor(org.mozilla.javascript.ScriptableObject) -> isAccessorDescriptor
    boolean isGenericDescriptor(org.mozilla.javascript.ScriptableObject) -> isGenericDescriptor
    org.mozilla.javascript.Scriptable ensureScriptable(java.lang.Object) -> ensureScriptable
    org.mozilla.javascript.ScriptableObject ensureScriptableObject(java.lang.Object) -> ensureScriptableObject
    void defineFunctionProperties(java.lang.String[],java.lang.Class,int) -> defineFunctionProperties
    org.mozilla.javascript.Scriptable getObjectPrototype(org.mozilla.javascript.Scriptable) -> getObjectPrototype
    org.mozilla.javascript.Scriptable getFunctionPrototype(org.mozilla.javascript.Scriptable) -> getFunctionPrototype
    org.mozilla.javascript.Scriptable getArrayPrototype(org.mozilla.javascript.Scriptable) -> getArrayPrototype
    org.mozilla.javascript.Scriptable getClassPrototype(org.mozilla.javascript.Scriptable,java.lang.String) -> getClassPrototype
    org.mozilla.javascript.Scriptable getTopLevelScope(org.mozilla.javascript.Scriptable) -> getTopLevelScope
    boolean isExtensible() -> isExtensible
    void preventExtensions() -> preventExtensions
    void sealObject() -> sealObject
    boolean isSealed() -> isSealed
    void checkNotSealed(java.lang.String,int) -> checkNotSealed
    java.lang.Object getProperty(org.mozilla.javascript.Scriptable,java.lang.String) -> getProperty
    java.lang.Object getTypedProperty(org.mozilla.javascript.Scriptable,int,java.lang.Class) -> getTypedProperty
    java.lang.Object getProperty(org.mozilla.javascript.Scriptable,int) -> getProperty
    java.lang.Object getTypedProperty(org.mozilla.javascript.Scriptable,java.lang.String,java.lang.Class) -> getTypedProperty
    boolean hasProperty(org.mozilla.javascript.Scriptable,java.lang.String) -> hasProperty
    void redefineProperty(org.mozilla.javascript.Scriptable,java.lang.String,boolean) -> redefineProperty
    boolean hasProperty(org.mozilla.javascript.Scriptable,int) -> hasProperty
    void putProperty(org.mozilla.javascript.Scriptable,java.lang.String,java.lang.Object) -> putProperty
    void putConstProperty(org.mozilla.javascript.Scriptable,java.lang.String,java.lang.Object) -> putConstProperty
    void putProperty(org.mozilla.javascript.Scriptable,int,java.lang.Object) -> putProperty
    boolean deleteProperty(org.mozilla.javascript.Scriptable,java.lang.String) -> deleteProperty
    boolean deleteProperty(org.mozilla.javascript.Scriptable,int) -> deleteProperty
    java.lang.Object[] getPropertyIds(org.mozilla.javascript.Scriptable) -> getPropertyIds
    java.lang.Object callMethod(org.mozilla.javascript.Scriptable,java.lang.String,java.lang.Object[]) -> callMethod
    java.lang.Object callMethod(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.String,java.lang.Object[]) -> callMethod
    org.mozilla.javascript.Scriptable getBase(org.mozilla.javascript.Scriptable,java.lang.String) -> getBase
    org.mozilla.javascript.Scriptable getBase(org.mozilla.javascript.Scriptable,int) -> getBase
    java.lang.Object getAssociatedValue(java.lang.Object) -> getAssociatedValue
    java.lang.Object getTopScopeValue(org.mozilla.javascript.Scriptable,java.lang.Object) -> getTopScopeValue
    java.lang.Object associateValue(java.lang.Object,java.lang.Object) -> associateValue
    boolean putImpl(java.lang.String,int,org.mozilla.javascript.Scriptable,java.lang.Object) -> putImpl
    boolean putConstImpl(java.lang.String,int,org.mozilla.javascript.Scriptable,java.lang.Object,int) -> putConstImpl
    org.mozilla.javascript.ScriptableObject$Slot findAttributeSlot(java.lang.String,int,int) -> findAttributeSlot
    org.mozilla.javascript.ScriptableObject$Slot unwrapSlot(org.mozilla.javascript.ScriptableObject$Slot) -> unwrapSlot
    org.mozilla.javascript.ScriptableObject$Slot getSlot(java.lang.String,int,int) -> getSlot
    org.mozilla.javascript.ScriptableObject$Slot createSlot(java.lang.String,int,int) -> createSlot
    void removeSlot(java.lang.String,int) -> removeSlot
    int getSlotIndex(int,int) -> getSlotIndex
    void copyTable(org.mozilla.javascript.ScriptableObject$Slot[],org.mozilla.javascript.ScriptableObject$Slot[],int) -> copyTable
    void addKnownAbsentSlot(org.mozilla.javascript.ScriptableObject$Slot[],org.mozilla.javascript.ScriptableObject$Slot,int) -> addKnownAbsentSlot
    java.lang.Object[] getIds(boolean) -> getIds
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
    org.mozilla.javascript.ScriptableObject getOwnPropertyDescriptor(org.mozilla.javascript.Context,java.lang.Object) -> getOwnPropertyDescriptor
    org.mozilla.javascript.ScriptableObject$Slot getSlot(org.mozilla.javascript.Context,java.lang.Object,int) -> getSlot
    int size() -> size
    boolean isEmpty() -> isEmpty
    java.lang.Object get(java.lang.Object) -> get
    org.mozilla.javascript.ScriptableObject$Slot access$100(org.mozilla.javascript.ScriptableObject$Slot) -> access$100
org.mozilla.javascript.ScriptableObject$GetterSlot -> org.mozilla.javascript.ScriptableObject$GetterSlot:
    long serialVersionUID -> serialVersionUID
    java.lang.Object getter -> getter
    java.lang.Object setter -> setter
    org.mozilla.javascript.ScriptableObject getPropertyDescriptor(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable) -> getPropertyDescriptor
    boolean setValue(java.lang.Object,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable) -> setValue
    java.lang.Object getValue(org.mozilla.javascript.Scriptable) -> getValue
    void markDeleted() -> markDeleted
org.mozilla.javascript.ScriptableObject$RelinkedSlot -> org.mozilla.javascript.ScriptableObject$RelinkedSlot:
    org.mozilla.javascript.ScriptableObject$Slot slot -> slot
    boolean setValue(java.lang.Object,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable) -> setValue
    java.lang.Object getValue(org.mozilla.javascript.Scriptable) -> getValue
    org.mozilla.javascript.ScriptableObject getPropertyDescriptor(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable) -> getPropertyDescriptor
    int getAttributes() -> getAttributes
    void setAttributes(int) -> setAttributes
    void markDeleted() -> markDeleted
    void writeObject(java.io.ObjectOutputStream) -> writeObject
org.mozilla.javascript.ScriptableObject$Slot -> org.mozilla.javascript.ScriptableObject$Slot:
    long serialVersionUID -> serialVersionUID
    java.lang.String name -> name
    int indexOrHash -> indexOrHash
    short attributes -> attributes
    boolean wasDeleted -> wasDeleted
    java.lang.Object value -> value
    org.mozilla.javascript.ScriptableObject$Slot next -> next
    org.mozilla.javascript.ScriptableObject$Slot orderedNext -> orderedNext
    void readObject(java.io.ObjectInputStream) -> readObject
    boolean setValue(java.lang.Object,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable) -> setValue
    java.lang.Object getValue(org.mozilla.javascript.Scriptable) -> getValue
    int getAttributes() -> getAttributes
    void setAttributes(int) -> setAttributes
    void markDeleted() -> markDeleted
    org.mozilla.javascript.ScriptableObject getPropertyDescriptor(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable) -> getPropertyDescriptor
    short access$000(org.mozilla.javascript.ScriptableObject$Slot) -> access$000
org.mozilla.javascript.SecureCaller -> org.mozilla.javascript.SecureCaller:
    byte[] secureCallerImplBytecode -> secureCallerImplBytecode
    java.util.Map callers -> callers
    java.lang.Object call(org.mozilla.javascript.Callable,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> call
    java.lang.Object callSecurely(java.security.CodeSource,org.mozilla.javascript.Callable,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> callSecurely
    byte[] loadBytecode() -> loadBytecode
    byte[] loadBytecodePrivileged() -> loadBytecodePrivileged
    byte[] access$000() -> access$000
    byte[] access$100() -> access$100
org.mozilla.javascript.SecureCaller$1 -> org.mozilla.javascript.SecureCaller$1:
    java.lang.Thread val$thread -> val$thread
    java.lang.Object run() -> run
org.mozilla.javascript.SecureCaller$2 -> org.mozilla.javascript.SecureCaller$2:
    java.lang.ClassLoader val$classLoader -> val$classLoader
    java.security.CodeSource val$codeSource -> val$codeSource
    java.lang.Object run() -> run
org.mozilla.javascript.SecureCaller$3 -> org.mozilla.javascript.SecureCaller$3:
    java.lang.Object run() -> run
org.mozilla.javascript.SecureCaller$SecureClassLoaderImpl -> org.mozilla.javascript.SecureCaller$SecureClassLoaderImpl:
    java.lang.Class defineAndLinkClass(java.lang.String,byte[],java.security.CodeSource) -> defineAndLinkClass
org.mozilla.javascript.SecurityController -> org.mozilla.javascript.SecurityController:
    org.mozilla.javascript.SecurityController global -> global
    org.mozilla.javascript.SecurityController global() -> global
    boolean hasGlobal() -> hasGlobal
    void initGlobal(org.mozilla.javascript.SecurityController) -> initGlobal
    org.mozilla.javascript.GeneratedClassLoader createClassLoader(java.lang.ClassLoader,java.lang.Object) -> createClassLoader
    org.mozilla.javascript.GeneratedClassLoader createLoader(java.lang.ClassLoader,java.lang.Object) -> createLoader
    java.lang.Class getStaticSecurityDomainClass() -> getStaticSecurityDomainClass
    java.lang.Class getStaticSecurityDomainClassInternal() -> getStaticSecurityDomainClassInternal
    java.lang.Object getDynamicSecurityDomain(java.lang.Object) -> getDynamicSecurityDomain
    java.lang.Object callWithDomain(java.lang.Object,org.mozilla.javascript.Context,org.mozilla.javascript.Callable,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> callWithDomain
    java.lang.Object execWithDomain(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Script,java.lang.Object) -> execWithDomain
org.mozilla.javascript.SecurityController$1 -> org.mozilla.javascript.SecurityController$1:
    org.mozilla.javascript.Callable val$callable -> val$callable
    org.mozilla.javascript.Scriptable val$thisObj -> val$thisObj
    java.lang.Object[] val$args -> val$args
    org.mozilla.javascript.SecurityController this$0 -> this$0
    java.lang.Object exec(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable) -> exec
org.mozilla.javascript.SecurityUtilities -> org.mozilla.javascript.SecurityUtilities:
    java.lang.String getSystemProperty(java.lang.String) -> getSystemProperty
    java.security.ProtectionDomain getProtectionDomain(java.lang.Class) -> getProtectionDomain
    java.security.ProtectionDomain getScriptProtectionDomain() -> getScriptProtectionDomain
org.mozilla.javascript.SecurityUtilities$1 -> org.mozilla.javascript.SecurityUtilities$1:
    java.lang.String val$name -> val$name
    java.lang.String run() -> run
    java.lang.Object run() -> run
org.mozilla.javascript.SecurityUtilities$2 -> org.mozilla.javascript.SecurityUtilities$2:
    java.lang.Class val$clazz -> val$clazz
    java.security.ProtectionDomain run() -> run
    java.lang.Object run() -> run
org.mozilla.javascript.SecurityUtilities$3 -> org.mozilla.javascript.SecurityUtilities$3:
    java.lang.SecurityManager val$securityManager -> val$securityManager
    java.security.ProtectionDomain run() -> run
    java.lang.Object run() -> run
org.mozilla.javascript.SpecialRef -> org.mozilla.javascript.SpecialRef:
    long serialVersionUID -> serialVersionUID
    int SPECIAL_NONE -> SPECIAL_NONE
    int SPECIAL_PROTO -> SPECIAL_PROTO
    int SPECIAL_PARENT -> SPECIAL_PARENT
    org.mozilla.javascript.Scriptable target -> target
    int type -> type
    java.lang.String name -> name
    org.mozilla.javascript.Ref createSpecial(org.mozilla.javascript.Context,java.lang.Object,java.lang.String) -> createSpecial
    java.lang.Object get(org.mozilla.javascript.Context) -> get
    java.lang.Object set(org.mozilla.javascript.Context,java.lang.Object) -> set
    boolean has(org.mozilla.javascript.Context) -> has
    boolean delete(org.mozilla.javascript.Context) -> delete
org.mozilla.javascript.Synchronizer -> org.mozilla.javascript.Synchronizer:
    java.lang.Object syncObject -> syncObject
    java.lang.Object call(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> call
org.mozilla.javascript.Token -> org.mozilla.javascript.Token:
    boolean printTrees -> printTrees
    boolean printICode -> printICode
    boolean printNames -> printNames
    int ERROR -> ERROR
    int EOF -> EOF
    int EOL -> EOL
    int FIRST_BYTECODE_TOKEN -> FIRST_BYTECODE_TOKEN
    int ENTERWITH -> ENTERWITH
    int LEAVEWITH -> LEAVEWITH
    int RETURN -> RETURN
    int GOTO -> GOTO
    int IFEQ -> IFEQ
    int IFNE -> IFNE
    int SETNAME -> SETNAME
    int BITOR -> BITOR
    int BITXOR -> BITXOR
    int BITAND -> BITAND
    int EQ -> EQ
    int NE -> NE
    int LT -> LT
    int LE -> LE
    int GT -> GT
    int GE -> GE
    int LSH -> LSH
    int RSH -> RSH
    int URSH -> URSH
    int ADD -> ADD
    int SUB -> SUB
    int MUL -> MUL
    int DIV -> DIV
    int MOD -> MOD
    int NOT -> NOT
    int BITNOT -> BITNOT
    int POS -> POS
    int NEG -> NEG
    int NEW -> NEW
    int DELPROP -> DELPROP
    int TYPEOF -> TYPEOF
    int GETPROP -> GETPROP
    int GETPROPNOWARN -> GETPROPNOWARN
    int SETPROP -> SETPROP
    int GETELEM -> GETELEM
    int SETELEM -> SETELEM
    int CALL -> CALL
    int NAME -> NAME
    int NUMBER -> NUMBER
    int STRING -> STRING
    int NULL -> NULL
    int THIS -> THIS
    int FALSE -> FALSE
    int TRUE -> TRUE
    int SHEQ -> SHEQ
    int SHNE -> SHNE
    int REGEXP -> REGEXP
    int BINDNAME -> BINDNAME
    int THROW -> THROW
    int RETHROW -> RETHROW
    int IN -> IN
    int INSTANCEOF -> INSTANCEOF
    int LOCAL_LOAD -> LOCAL_LOAD
    int GETVAR -> GETVAR
    int SETVAR -> SETVAR
    int CATCH_SCOPE -> CATCH_SCOPE
    int ENUM_INIT_KEYS -> ENUM_INIT_KEYS
    int ENUM_INIT_VALUES -> ENUM_INIT_VALUES
    int ENUM_INIT_ARRAY -> ENUM_INIT_ARRAY
    int ENUM_NEXT -> ENUM_NEXT
    int ENUM_ID -> ENUM_ID
    int THISFN -> THISFN
    int RETURN_RESULT -> RETURN_RESULT
    int ARRAYLIT -> ARRAYLIT
    int OBJECTLIT -> OBJECTLIT
    int GET_REF -> GET_REF
    int SET_REF -> SET_REF
    int DEL_REF -> DEL_REF
    int REF_CALL -> REF_CALL
    int REF_SPECIAL -> REF_SPECIAL
    int YIELD -> YIELD
    int STRICT_SETNAME -> STRICT_SETNAME
    int DEFAULTNAMESPACE -> DEFAULTNAMESPACE
    int ESCXMLATTR -> ESCXMLATTR
    int ESCXMLTEXT -> ESCXMLTEXT
    int REF_MEMBER -> REF_MEMBER
    int REF_NS_MEMBER -> REF_NS_MEMBER
    int REF_NAME -> REF_NAME
    int REF_NS_NAME -> REF_NS_NAME
    int LAST_BYTECODE_TOKEN -> LAST_BYTECODE_TOKEN
    int TRY -> TRY
    int SEMI -> SEMI
    int LB -> LB
    int RB -> RB
    int LC -> LC
    int RC -> RC
    int LP -> LP
    int RP -> RP
    int COMMA -> COMMA
    int ASSIGN -> ASSIGN
    int ASSIGN_BITOR -> ASSIGN_BITOR
    int ASSIGN_BITXOR -> ASSIGN_BITXOR
    int ASSIGN_BITAND -> ASSIGN_BITAND
    int ASSIGN_LSH -> ASSIGN_LSH
    int ASSIGN_RSH -> ASSIGN_RSH
    int ASSIGN_URSH -> ASSIGN_URSH
    int ASSIGN_ADD -> ASSIGN_ADD
    int ASSIGN_SUB -> ASSIGN_SUB
    int ASSIGN_MUL -> ASSIGN_MUL
    int ASSIGN_DIV -> ASSIGN_DIV
    int ASSIGN_MOD -> ASSIGN_MOD
    int FIRST_ASSIGN -> FIRST_ASSIGN
    int LAST_ASSIGN -> LAST_ASSIGN
    int HOOK -> HOOK
    int COLON -> COLON
    int OR -> OR
    int AND -> AND
    int INC -> INC
    int DEC -> DEC
    int DOT -> DOT
    int FUNCTION -> FUNCTION
    int EXPORT -> EXPORT
    int IMPORT -> IMPORT
    int IF -> IF
    int ELSE -> ELSE
    int SWITCH -> SWITCH
    int CASE -> CASE
    int DEFAULT -> DEFAULT
    int WHILE -> WHILE
    int DO -> DO
    int FOR -> FOR
    int BREAK -> BREAK
    int CONTINUE -> CONTINUE
    int VAR -> VAR
    int WITH -> WITH
    int CATCH -> CATCH
    int FINALLY -> FINALLY
    int VOID -> VOID
    int RESERVED -> RESERVED
    int EMPTY -> EMPTY
    int BLOCK -> BLOCK
    int LABEL -> LABEL
    int TARGET -> TARGET
    int LOOP -> LOOP
    int EXPR_VOID -> EXPR_VOID
    int EXPR_RESULT -> EXPR_RESULT
    int JSR -> JSR
    int SCRIPT -> SCRIPT
    int TYPEOFNAME -> TYPEOFNAME
    int USE_STACK -> USE_STACK
    int SETPROP_OP -> SETPROP_OP
    int SETELEM_OP -> SETELEM_OP
    int LOCAL_BLOCK -> LOCAL_BLOCK
    int SET_REF_OP -> SET_REF_OP
    int DOTDOT -> DOTDOT
    int COLONCOLON -> COLONCOLON
    int XML -> XML
    int DOTQUERY -> DOTQUERY
    int XMLATTR -> XMLATTR
    int XMLEND -> XMLEND
    int TO_OBJECT -> TO_OBJECT
    int TO_DOUBLE -> TO_DOUBLE
    int GET -> GET
    int SET -> SET
    int LET -> LET
    int CONST -> CONST
    int SETCONST -> SETCONST
    int SETCONSTVAR -> SETCONSTVAR
    int ARRAYCOMP -> ARRAYCOMP
    int LETEXPR -> LETEXPR
    int WITHEXPR -> WITHEXPR
    int DEBUGGER -> DEBUGGER
    int COMMENT -> COMMENT
    int GENEXPR -> GENEXPR
    int LAST_TOKEN -> LAST_TOKEN
    java.lang.String name(int) -> name
    java.lang.String typeToName(int) -> typeToName
    java.lang.String keywordToName(int) -> keywordToName
    boolean isValidToken(int) -> isValidToken
org.mozilla.javascript.Token$CommentType -> org.mozilla.javascript.Token$CommentType:
    org.mozilla.javascript.Token$CommentType LINE -> LINE
    org.mozilla.javascript.Token$CommentType BLOCK_COMMENT -> BLOCK_COMMENT
    org.mozilla.javascript.Token$CommentType JSDOC -> JSDOC
    org.mozilla.javascript.Token$CommentType HTML -> HTML
    org.mozilla.javascript.Token$CommentType[] $VALUES -> $VALUES
    org.mozilla.javascript.Token$CommentType[] values() -> values
    org.mozilla.javascript.Token$CommentType valueOf(java.lang.String) -> valueOf
org.mozilla.javascript.TokenStream -> org.mozilla.javascript.TokenStream:
    int EOF_CHAR -> EOF_CHAR
    char BYTE_ORDER_MARK -> BYTE_ORDER_MARK
    boolean dirtyLine -> dirtyLine
    java.lang.String regExpFlags -> regExpFlags
    java.lang.String string -> string
    double number -> number
    boolean isOctal -> isOctal
    int quoteChar -> quoteChar
    char[] stringBuffer -> stringBuffer
    int stringBufferTop -> stringBufferTop
    org.mozilla.javascript.ObjToIntMap allStrings -> allStrings
    int[] ungetBuffer -> ungetBuffer
    int ungetCursor -> ungetCursor
    boolean hitEOF -> hitEOF
    int lineStart -> lineStart
    int lineEndChar -> lineEndChar
    int lineno -> lineno
    java.lang.String sourceString -> sourceString
    java.io.Reader sourceReader -> sourceReader
    char[] sourceBuffer -> sourceBuffer
    int sourceEnd -> sourceEnd
    int sourceCursor -> sourceCursor
    int cursor -> cursor
    int tokenBeg -> tokenBeg
    int tokenEnd -> tokenEnd
    org.mozilla.javascript.Token$CommentType commentType -> commentType
    boolean xmlIsAttribute -> xmlIsAttribute
    boolean xmlIsTagContent -> xmlIsTagContent
    int xmlOpenTagsCount -> xmlOpenTagsCount
    org.mozilla.javascript.Parser parser -> parser
    java.lang.String commentPrefix -> commentPrefix
    int commentCursor -> commentCursor
    java.lang.String tokenToString(int) -> tokenToString
    boolean isKeyword(java.lang.String) -> isKeyword
    int stringToKeyword(java.lang.String) -> stringToKeyword
    java.lang.String getSourceString() -> getSourceString
    int getLineno() -> getLineno
    java.lang.String getString() -> getString
    char getQuoteChar() -> getQuoteChar
    double getNumber() -> getNumber
    boolean isNumberOctal() -> isNumberOctal
    boolean eof() -> eof
    int getToken() -> getToken
    boolean isAlpha(int) -> isAlpha
    boolean isDigit(int) -> isDigit
    boolean isJSSpace(int) -> isJSSpace
    boolean isJSFormatChar(int) -> isJSFormatChar
    void readRegExp(int) -> readRegExp
    java.lang.String readAndClearRegExpFlags() -> readAndClearRegExpFlags
    boolean isXMLAttribute() -> isXMLAttribute
    int getFirstXMLToken() -> getFirstXMLToken
    int getNextXMLToken() -> getNextXMLToken
    boolean readQuotedString(int) -> readQuotedString
    boolean readXmlComment() -> readXmlComment
    boolean readCDATA() -> readCDATA
    boolean readEntity() -> readEntity
    boolean readPI() -> readPI
    java.lang.String getStringFromBuffer() -> getStringFromBuffer
    void addToString(int) -> addToString
    boolean canUngetChar() -> canUngetChar
    void ungetChar(int) -> ungetChar
    boolean matchChar(int) -> matchChar
    int peekChar() -> peekChar
    int getChar() -> getChar
    int getChar(boolean) -> getChar
    int getCharIgnoreLineEnd() -> getCharIgnoreLineEnd
    void ungetCharIgnoreLineEnd(int) -> ungetCharIgnoreLineEnd
    void skipLine() -> skipLine
    int getOffset() -> getOffset
    java.lang.String getLine() -> getLine
    boolean fillSourceBuffer() -> fillSourceBuffer
    int getCursor() -> getCursor
    int getTokenBeg() -> getTokenBeg
    int getTokenEnd() -> getTokenEnd
    int getTokenLength() -> getTokenLength
    org.mozilla.javascript.Token$CommentType getCommentType() -> getCommentType
    void markCommentStart() -> markCommentStart
    void markCommentStart(java.lang.String) -> markCommentStart
    boolean isMarkingComment() -> isMarkingComment
    java.lang.String getAndResetCurrentComment() -> getAndResetCurrentComment
    java.lang.String convertLastCharToHex(java.lang.String) -> convertLastCharToHex
org.mozilla.javascript.TopLevel -> org.mozilla.javascript.TopLevel:
    long serialVersionUID -> serialVersionUID
    java.util.EnumMap ctors -> ctors
    boolean $assertionsDisabled -> $assertionsDisabled
    java.lang.String getClassName() -> getClassName
    void cacheBuiltins() -> cacheBuiltins
    org.mozilla.javascript.Function getBuiltinCtor(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.TopLevel$Builtins) -> getBuiltinCtor
    org.mozilla.javascript.Scriptable getBuiltinPrototype(org.mozilla.javascript.Scriptable,org.mozilla.javascript.TopLevel$Builtins) -> getBuiltinPrototype
    org.mozilla.javascript.BaseFunction getBuiltinCtor(org.mozilla.javascript.TopLevel$Builtins) -> getBuiltinCtor
    org.mozilla.javascript.Scriptable getBuiltinPrototype(org.mozilla.javascript.TopLevel$Builtins) -> getBuiltinPrototype
org.mozilla.javascript.TopLevel$Builtins -> org.mozilla.javascript.TopLevel$Builtins:
    org.mozilla.javascript.TopLevel$Builtins Object -> Object
    org.mozilla.javascript.TopLevel$Builtins Array -> Array
    org.mozilla.javascript.TopLevel$Builtins Function -> Function
    org.mozilla.javascript.TopLevel$Builtins String -> String
    org.mozilla.javascript.TopLevel$Builtins Number -> Number
    org.mozilla.javascript.TopLevel$Builtins Boolean -> Boolean
    org.mozilla.javascript.TopLevel$Builtins RegExp -> RegExp
    org.mozilla.javascript.TopLevel$Builtins Error -> Error
    org.mozilla.javascript.TopLevel$Builtins[] $VALUES -> $VALUES
    org.mozilla.javascript.TopLevel$Builtins[] values() -> values
    org.mozilla.javascript.TopLevel$Builtins valueOf(java.lang.String) -> valueOf
org.mozilla.javascript.UintMap -> org.mozilla.javascript.UintMap:
    long serialVersionUID -> serialVersionUID
    int A -> A
    int EMPTY -> EMPTY
    int DELETED -> DELETED
    int[] keys -> keys
    java.lang.Object[] values -> values
    int power -> power
    int keyCount -> keyCount
    int occupiedCount -> occupiedCount
    int ivaluesShift -> ivaluesShift
    boolean check -> check
    boolean isEmpty() -> isEmpty
    int size() -> size
    boolean has(int) -> has
    java.lang.Object getObject(int) -> getObject
    int getInt(int,int) -> getInt
    int getExistingInt(int) -> getExistingInt
    void put(int,java.lang.Object) -> put
    void put(int,int) -> put
    void remove(int) -> remove
    void clear() -> clear
    int[] getKeys() -> getKeys
    int tableLookupStep(int,int,int) -> tableLookupStep
    int findIndex(int) -> findIndex
    int insertNewKey(int) -> insertNewKey
    void rehashTable(boolean) -> rehashTable
    int ensureIndex(int,boolean) -> ensureIndex
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
org.mozilla.javascript.Undefined -> org.mozilla.javascript.Undefined:
    long serialVersionUID -> serialVersionUID
    java.lang.Object instance -> instance
    java.lang.Object readResolve() -> readResolve
org.mozilla.javascript.UniqueTag -> org.mozilla.javascript.UniqueTag:
    long serialVersionUID -> serialVersionUID
    int ID_NOT_FOUND -> ID_NOT_FOUND
    int ID_NULL_VALUE -> ID_NULL_VALUE
    int ID_DOUBLE_MARK -> ID_DOUBLE_MARK
    org.mozilla.javascript.UniqueTag NOT_FOUND -> NOT_FOUND
    org.mozilla.javascript.UniqueTag NULL_VALUE -> NULL_VALUE
    org.mozilla.javascript.UniqueTag DOUBLE_MARK -> DOUBLE_MARK
    int tagId -> tagId
    java.lang.Object readResolve() -> readResolve
    java.lang.String toString() -> toString
org.mozilla.javascript.VMBridge -> org.mozilla.javascript.VMBridge:
    org.mozilla.javascript.VMBridge instance -> instance
    org.mozilla.javascript.VMBridge makeInstance() -> makeInstance
    java.lang.Object getThreadContextHelper() -> getThreadContextHelper
    org.mozilla.javascript.Context getContext(java.lang.Object) -> getContext
    void setContext(java.lang.Object,org.mozilla.javascript.Context) -> setContext
    java.lang.ClassLoader getCurrentThreadClassLoader() -> getCurrentThreadClassLoader
    boolean tryToMakeAccessible(java.lang.Object) -> tryToMakeAccessible
    java.lang.Object getInterfaceProxyHelper(org.mozilla.javascript.ContextFactory,java.lang.Class[]) -> getInterfaceProxyHelper
    java.lang.Object newInterfaceProxy(java.lang.Object,org.mozilla.javascript.ContextFactory,org.mozilla.javascript.InterfaceAdapter,java.lang.Object,org.mozilla.javascript.Scriptable) -> newInterfaceProxy
    boolean isVarArgs(java.lang.reflect.Member) -> isVarArgs
    java.util.Iterator getJavaIterator(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object) -> getJavaIterator
org.mozilla.javascript.WrapFactory -> org.mozilla.javascript.WrapFactory:
    boolean javaPrimitiveWrap -> javaPrimitiveWrap
    java.lang.Object wrap(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object,java.lang.Class) -> wrap
    org.mozilla.javascript.Scriptable wrapNewObject(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object) -> wrapNewObject
    org.mozilla.javascript.Scriptable wrapAsJavaObject(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object,java.lang.Class) -> wrapAsJavaObject
    org.mozilla.javascript.Scriptable wrapJavaClass(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Class) -> wrapJavaClass
    boolean isJavaPrimitiveWrap() -> isJavaPrimitiveWrap
    void setJavaPrimitiveWrap(boolean) -> setJavaPrimitiveWrap
org.mozilla.javascript.WrappedException -> org.mozilla.javascript.WrappedException:
    long serialVersionUID -> serialVersionUID
    java.lang.Throwable exception -> exception
    java.lang.Throwable getWrappedException() -> getWrappedException
    java.lang.Object unwrap() -> unwrap
org.mozilla.javascript.Wrapper -> org.mozilla.javascript.Wrapper:
    java.lang.Object unwrap() -> unwrap
org.mozilla.javascript.annotations.JSConstructor -> org.mozilla.javascript.annotations.JSConstructor:
org.mozilla.javascript.annotations.JSFunction -> org.mozilla.javascript.annotations.JSFunction:
    java.lang.String value() -> value
org.mozilla.javascript.annotations.JSGetter -> org.mozilla.javascript.annotations.JSGetter:
    java.lang.String value() -> value
org.mozilla.javascript.annotations.JSSetter -> org.mozilla.javascript.annotations.JSSetter:
    java.lang.String value() -> value
org.mozilla.javascript.annotations.JSStaticFunction -> org.mozilla.javascript.annotations.JSStaticFunction:
    java.lang.String value() -> value
org.mozilla.javascript.ast.ArrayComprehension -> org.mozilla.javascript.ast.ArrayComprehension:
    org.mozilla.javascript.ast.AstNode result -> result
    java.util.List loops -> loops
    org.mozilla.javascript.ast.AstNode filter -> filter
    int ifPosition -> ifPosition
    int lp -> lp
    int rp -> rp
    org.mozilla.javascript.ast.AstNode getResult() -> getResult
    void setResult(org.mozilla.javascript.ast.AstNode) -> setResult
    java.util.List getLoops() -> getLoops
    void setLoops(java.util.List) -> setLoops
    void addLoop(org.mozilla.javascript.ast.ArrayComprehensionLoop) -> addLoop
    org.mozilla.javascript.ast.AstNode getFilter() -> getFilter
    void setFilter(org.mozilla.javascript.ast.AstNode) -> setFilter
    int getIfPosition() -> getIfPosition
    void setIfPosition(int) -> setIfPosition
    int getFilterLp() -> getFilterLp
    void setFilterLp(int) -> setFilterLp
    int getFilterRp() -> getFilterRp
    void setFilterRp(int) -> setFilterRp
    java.lang.String toSource(int) -> toSource
    void visit(org.mozilla.javascript.ast.NodeVisitor) -> visit
org.mozilla.javascript.ast.ArrayComprehensionLoop -> org.mozilla.javascript.ast.ArrayComprehensionLoop:
    org.mozilla.javascript.ast.AstNode getBody() -> getBody
    void setBody(org.mozilla.javascript.ast.AstNode) -> setBody
    java.lang.String toSource(int) -> toSource
    void visit(org.mozilla.javascript.ast.NodeVisitor) -> visit
org.mozilla.javascript.ast.ArrayLiteral -> org.mozilla.javascript.ast.ArrayLiteral:
    java.util.List NO_ELEMS -> NO_ELEMS
    java.util.List elements -> elements
    int destructuringLength -> destructuringLength
    int skipCount -> skipCount
    boolean isDestructuring -> isDestructuring
    java.util.List getElements() -> getElements
    void setElements(java.util.List) -> setElements
    void addElement(org.mozilla.javascript.ast.AstNode) -> addElement
    int getSize() -> getSize
    org.mozilla.javascript.ast.AstNode getElement(int) -> getElement
    int getDestructuringLength() -> getDestructuringLength
    void setDestructuringLength(int) -> setDestructuringLength
    int getSkipCount() -> getSkipCount
    void setSkipCount(int) -> setSkipCount
    void setIsDestructuring(boolean) -> setIsDestructuring
    boolean isDestructuring() -> isDestructuring
    java.lang.String toSource(int) -> toSource
    void visit(org.mozilla.javascript.ast.NodeVisitor) -> visit
org.mozilla.javascript.ast.Assignment -> org.mozilla.javascript.ast.Assignment:
org.mozilla.javascript.ast.AstNode -> org.mozilla.javascript.ast.AstNode:
    int position -> position
    int length -> length
    org.mozilla.javascript.ast.AstNode parent -> parent
    java.util.Map operatorNames -> operatorNames
    int getPosition() -> getPosition
    void setPosition(int) -> setPosition
    int getAbsolutePosition() -> getAbsolutePosition
    int getLength() -> getLength
    void setLength(int) -> setLength
    void setBounds(int,int) -> setBounds
    void setRelative(int) -> setRelative
    org.mozilla.javascript.ast.AstNode getParent() -> getParent
    void setParent(org.mozilla.javascript.ast.AstNode) -> setParent
    void addChild(org.mozilla.javascript.ast.AstNode) -> addChild
    org.mozilla.javascript.ast.AstRoot getAstRoot() -> getAstRoot
    java.lang.String toSource(int) -> toSource
    java.lang.String toSource() -> toSource
    java.lang.String makeIndent(int) -> makeIndent
    java.lang.String shortName() -> shortName
    java.lang.String operatorToString(int) -> operatorToString
    void visit(org.mozilla.javascript.ast.NodeVisitor) -> visit
    boolean hasSideEffects() -> hasSideEffects
    void assertNotNull(java.lang.Object) -> assertNotNull
    void printList(java.util.List,java.lang.StringBuilder) -> printList
    java.lang.RuntimeException codeBug() -> codeBug
    org.mozilla.javascript.ast.FunctionNode getEnclosingFunction() -> getEnclosingFunction
    org.mozilla.javascript.ast.Scope getEnclosingScope() -> getEnclosingScope
    int compareTo(org.mozilla.javascript.ast.AstNode) -> compareTo
    int depth() -> depth
    int getLineno() -> getLineno
    java.lang.String debugPrint() -> debugPrint
    int compareTo(java.lang.Object) -> compareTo
org.mozilla.javascript.ast.AstNode$DebugPrintVisitor -> org.mozilla.javascript.ast.AstNode$DebugPrintVisitor:
    java.lang.StringBuilder buffer -> buffer
    int DEBUG_INDENT -> DEBUG_INDENT
    java.lang.String toString() -> toString
    java.lang.String makeIndent(int) -> makeIndent
    boolean visit(org.mozilla.javascript.ast.AstNode) -> visit
org.mozilla.javascript.ast.AstNode$PositionComparator -> org.mozilla.javascript.ast.AstNode$PositionComparator:
    long serialVersionUID -> serialVersionUID
    int compare(org.mozilla.javascript.ast.AstNode,org.mozilla.javascript.ast.AstNode) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
org.mozilla.javascript.ast.AstRoot -> org.mozilla.javascript.ast.AstRoot:
    java.util.SortedSet comments -> comments
    boolean inStrictMode -> inStrictMode
    java.util.SortedSet getComments() -> getComments
    void setComments(java.util.SortedSet) -> setComments
    void addComment(org.mozilla.javascript.ast.Comment) -> addComment
    void setInStrictMode(boolean) -> setInStrictMode
    boolean isInStrictMode() -> isInStrictMode
    void visitComments(org.mozilla.javascript.ast.NodeVisitor) -> visitComments
    void visitAll(org.mozilla.javascript.ast.NodeVisitor) -> visitAll
    java.lang.String toSource(int) -> toSource
    java.lang.String debugPrint() -> debugPrint
    void checkParentLinks() -> checkParentLinks
org.mozilla.javascript.ast.AstRoot$1 -> org.mozilla.javascript.ast.AstRoot$1:
    org.mozilla.javascript.ast.AstRoot this$0 -> this$0
    boolean visit(org.mozilla.javascript.ast.AstNode) -> visit
org.mozilla.javascript.ast.Block -> org.mozilla.javascript.ast.Block:
    void addStatement(org.mozilla.javascript.ast.AstNode) -> addStatement
    java.lang.String toSource(int) -> toSource
    void visit(org.mozilla.javascript.ast.NodeVisitor) -> visit
org.mozilla.javascript.ast.BreakStatement -> org.mozilla.javascript.ast.BreakStatement:
    org.mozilla.javascript.ast.Name breakLabel -> breakLabel
    org.mozilla.javascript.ast.AstNode target -> target
    org.mozilla.javascript.ast.Name getBreakLabel() -> getBreakLabel
    void setBreakLabel(org.mozilla.javascript.ast.Name) -> setBreakLabel
    org.mozilla.javascript.ast.AstNode getBreakTarget() -> getBreakTarget
    void setBreakTarget(org.mozilla.javascript.ast.Jump) -> setBreakTarget
    java.lang.String toSource(int) -> toSource
    void visit(org.mozilla.javascript.ast.NodeVisitor) -> visit
org.mozilla.javascript.ast.CatchClause -> org.mozilla.javascript.ast.CatchClause:
    org.mozilla.javascript.ast.Name varName -> varName
    org.mozilla.javascript.ast.AstNode catchCondition -> catchCondition
    org.mozilla.javascript.ast.Block body -> body
    int ifPosition -> ifPosition
    int lp -> lp
    int rp -> rp
    org.mozilla.javascript.ast.Name getVarName() -> getVarName
    void setVarName(org.mozilla.javascript.ast.Name) -> setVarName
    org.mozilla.javascript.ast.AstNode getCatchCondition() -> getCatchCondition
    void setCatchCondition(org.mozilla.javascript.ast.AstNode) -> setCatchCondition
    org.mozilla.javascript.ast.Block getBody() -> getBody
    void setBody(org.mozilla.javascript.ast.Block) -> setBody
    int getLp() -> getLp
    void setLp(int) -> setLp
    int getRp() -> getRp
    void setRp(int) -> setRp
    void setParens(int,int) -> setParens
    int getIfPosition() -> getIfPosition
    void setIfPosition(int) -> setIfPosition
    java.lang.String toSource(int) -> toSource
    void visit(org.mozilla.javascript.ast.NodeVisitor) -> visit
org.mozilla.javascript.ast.Comment -> org.mozilla.javascript.ast.Comment:
    java.lang.String value -> value
    org.mozilla.javascript.Token$CommentType commentType -> commentType
    org.mozilla.javascript.Token$CommentType getCommentType() -> getCommentType
    void setCommentType(org.mozilla.javascript.Token$CommentType) -> setCommentType
    java.lang.String getValue() -> getValue
    java.lang.String toSource(int) -> toSource
    void visit(org.mozilla.javascript.ast.NodeVisitor) -> visit
org.mozilla.javascript.ast.ConditionalExpression -> org.mozilla.javascript.ast.ConditionalExpression:
    org.mozilla.javascript.ast.AstNode testExpression -> testExpression
    org.mozilla.javascript.ast.AstNode trueExpression -> trueExpression
    org.mozilla.javascript.ast.AstNode falseExpression -> falseExpression
    int questionMarkPosition -> questionMarkPosition
    int colonPosition -> colonPosition
    org.mozilla.javascript.ast.AstNode getTestExpression() -> getTestExpression
    void setTestExpression(org.mozilla.javascript.ast.AstNode) -> setTestExpression
    org.mozilla.javascript.ast.AstNode getTrueExpression() -> getTrueExpression
    void setTrueExpression(org.mozilla.javascript.ast.AstNode) -> setTrueExpression
    org.mozilla.javascript.ast.AstNode getFalseExpression() -> getFalseExpression
    void setFalseExpression(org.mozilla.javascript.ast.AstNode) -> setFalseExpression
    int getQuestionMarkPosition() -> getQuestionMarkPosition
    void setQuestionMarkPosition(int) -> setQuestionMarkPosition
    int getColonPosition() -> getColonPosition
    void setColonPosition(int) -> setColonPosition
    boolean hasSideEffects() -> hasSideEffects
    java.lang.String toSource(int) -> toSource
    void visit(org.mozilla.javascript.ast.NodeVisitor) -> visit
org.mozilla.javascript.ast.ContinueStatement -> org.mozilla.javascript.ast.ContinueStatement:
    org.mozilla.javascript.ast.Name label -> label
    org.mozilla.javascript.ast.Loop target -> target
    org.mozilla.javascript.ast.Loop getTarget() -> getTarget
    void setTarget(org.mozilla.javascript.ast.Loop) -> setTarget
    org.mozilla.javascript.ast.Name getLabel() -> getLabel
    void setLabel(org.mozilla.javascript.ast.Name) -> setLabel
    java.lang.String toSource(int) -> toSource
    void visit(org.mozilla.javascript.ast.NodeVisitor) -> visit
org.mozilla.javascript.ast.DestructuringForm -> org.mozilla.javascript.ast.DestructuringForm:
    void setIsDestructuring(boolean) -> setIsDestructuring
    boolean isDestructuring() -> isDestructuring
org.mozilla.javascript.ast.DoLoop -> org.mozilla.javascript.ast.DoLoop:
    org.mozilla.javascript.ast.AstNode condition -> condition
    int whilePosition -> whilePosition
    org.mozilla.javascript.ast.AstNode getCondition() -> getCondition
    void setCondition(org.mozilla.javascript.ast.AstNode) -> setCondition
    int getWhilePosition() -> getWhilePosition
    void setWhilePosition(int) -> setWhilePosition
    java.lang.String toSource(int) -> toSource
    void visit(org.mozilla.javascript.ast.NodeVisitor) -> visit
org.mozilla.javascript.ast.ElementGet -> org.mozilla.javascript.ast.ElementGet:
    org.mozilla.javascript.ast.AstNode target -> target
    org.mozilla.javascript.ast.AstNode element -> element
    int lb -> lb
    int rb -> rb
    org.mozilla.javascript.ast.AstNode getTarget() -> getTarget
    void setTarget(org.mozilla.javascript.ast.AstNode) -> setTarget
    org.mozilla.javascript.ast.AstNode getElement() -> getElement
    void setElement(org.mozilla.javascript.ast.AstNode) -> setElement
    int getLb() -> getLb
    void setLb(int) -> setLb
    int getRb() -> getRb
    void setRb(int) -> setRb
    void setParens(int,int) -> setParens
    java.lang.String toSource(int) -> toSource
    void visit(org.mozilla.javascript.ast.NodeVisitor) -> visit
org.mozilla.javascript.ast.EmptyExpression -> org.mozilla.javascript.ast.EmptyExpression:
    java.lang.String toSource(int) -> toSource
    void visit(org.mozilla.javascript.ast.NodeVisitor) -> visit
org.mozilla.javascript.ast.EmptyStatement -> org.mozilla.javascript.ast.EmptyStatement:
    java.lang.String toSource(int) -> toSource
    void visit(org.mozilla.javascript.ast.NodeVisitor) -> visit
org.mozilla.javascript.ast.ErrorCollector -> org.mozilla.javascript.ast.ErrorCollector:
    java.util.List errors -> errors
    void warning(java.lang.String,java.lang.String,int,java.lang.String,int) -> warning
    void warning(java.lang.String,java.lang.String,int,int) -> warning
    void error(java.lang.String,java.lang.String,int,java.lang.String,int) -> error
    void error(java.lang.String,java.lang.String,int,int) -> error
    org.mozilla.javascript.EvaluatorException runtimeError(java.lang.String,java.lang.String,int,java.lang.String,int) -> runtimeError
    java.util.List getErrors() -> getErrors
    java.lang.String toString() -> toString
org.mozilla.javascript.ast.ErrorNode -> org.mozilla.javascript.ast.ErrorNode:
    java.lang.String message -> message
    java.lang.String getMessage() -> getMessage
    void setMessage(java.lang.String) -> setMessage
    java.lang.String toSource(int) -> toSource
    void visit(org.mozilla.javascript.ast.NodeVisitor) -> visit
org.mozilla.javascript.ast.ExpressionStatement -> org.mozilla.javascript.ast.ExpressionStatement:
    org.mozilla.javascript.ast.AstNode expr -> expr
    void setHasResult() -> setHasResult
    org.mozilla.javascript.ast.AstNode getExpression() -> getExpression
    void setExpression(org.mozilla.javascript.ast.AstNode) -> setExpression
    boolean hasSideEffects() -> hasSideEffects
    java.lang.String toSource(int) -> toSource
    void visit(org.mozilla.javascript.ast.NodeVisitor) -> visit
org.mozilla.javascript.ast.ForInLoop -> org.mozilla.javascript.ast.ForInLoop:
    org.mozilla.javascript.ast.AstNode iterator -> iterator
    org.mozilla.javascript.ast.AstNode iteratedObject -> iteratedObject
    int inPosition -> inPosition
    int eachPosition -> eachPosition
    boolean isForEach -> isForEach
    org.mozilla.javascript.ast.AstNode getIterator() -> getIterator
    void setIterator(org.mozilla.javascript.ast.AstNode) -> setIterator
    org.mozilla.javascript.ast.AstNode getIteratedObject() -> getIteratedObject
    void setIteratedObject(org.mozilla.javascript.ast.AstNode) -> setIteratedObject
    boolean isForEach() -> isForEach
    void setIsForEach(boolean) -> setIsForEach
    int getInPosition() -> getInPosition
    void setInPosition(int) -> setInPosition
    int getEachPosition() -> getEachPosition
    void setEachPosition(int) -> setEachPosition
    java.lang.String toSource(int) -> toSource
    void visit(org.mozilla.javascript.ast.NodeVisitor) -> visit
org.mozilla.javascript.ast.ForLoop -> org.mozilla.javascript.ast.ForLoop:
    org.mozilla.javascript.ast.AstNode initializer -> initializer
    org.mozilla.javascript.ast.AstNode condition -> condition
    org.mozilla.javascript.ast.AstNode increment -> increment
    org.mozilla.javascript.ast.AstNode getInitializer() -> getInitializer
    void setInitializer(org.mozilla.javascript.ast.AstNode) -> setInitializer
    org.mozilla.javascript.ast.AstNode getCondition() -> getCondition
    void setCondition(org.mozilla.javascript.ast.AstNode) -> setCondition
    org.mozilla.javascript.ast.AstNode getIncrement() -> getIncrement
    void setIncrement(org.mozilla.javascript.ast.AstNode) -> setIncrement
    java.lang.String toSource(int) -> toSource
    void visit(org.mozilla.javascript.ast.NodeVisitor) -> visit
org.mozilla.javascript.ast.FunctionCall -> org.mozilla.javascript.ast.FunctionCall:
    java.util.List NO_ARGS -> NO_ARGS
    org.mozilla.javascript.ast.AstNode target -> target
    java.util.List arguments -> arguments
    int lp -> lp
    int rp -> rp
    org.mozilla.javascript.ast.AstNode getTarget() -> getTarget
    void setTarget(org.mozilla.javascript.ast.AstNode) -> setTarget
    java.util.List getArguments() -> getArguments
    void setArguments(java.util.List) -> setArguments
    void addArgument(org.mozilla.javascript.ast.AstNode) -> addArgument
    int getLp() -> getLp
    void setLp(int) -> setLp
    int getRp() -> getRp
    void setRp(int) -> setRp
    void setParens(int,int) -> setParens
    java.lang.String toSource(int) -> toSource
    void visit(org.mozilla.javascript.ast.NodeVisitor) -> visit
org.mozilla.javascript.ast.FunctionNode -> org.mozilla.javascript.ast.FunctionNode:
    int FUNCTION_STATEMENT -> FUNCTION_STATEMENT
    int FUNCTION_EXPRESSION -> FUNCTION_EXPRESSION
    int FUNCTION_EXPRESSION_STATEMENT -> FUNCTION_EXPRESSION_STATEMENT
    java.util.List NO_PARAMS -> NO_PARAMS
    org.mozilla.javascript.ast.Name functionName -> functionName
    java.util.List params -> params
    org.mozilla.javascript.ast.AstNode body -> body
    boolean isExpressionClosure -> isExpressionClosure
    org.mozilla.javascript.ast.FunctionNode$Form functionForm -> functionForm
    int lp -> lp
    int rp -> rp
    int functionType -> functionType
    boolean needsActivation -> needsActivation
    boolean isGenerator -> isGenerator
    java.util.List generatorResumePoints -> generatorResumePoints
    java.util.Map liveLocals -> liveLocals
    org.mozilla.javascript.ast.AstNode memberExprNode -> memberExprNode
    org.mozilla.javascript.ast.Name getFunctionName() -> getFunctionName
    void setFunctionName(org.mozilla.javascript.ast.Name) -> setFunctionName
    java.lang.String getName() -> getName
    java.util.List getParams() -> getParams
    void setParams(java.util.List) -> setParams
    void addParam(org.mozilla.javascript.ast.AstNode) -> addParam
    boolean isParam(org.mozilla.javascript.ast.AstNode) -> isParam
    org.mozilla.javascript.ast.AstNode getBody() -> getBody
    void setBody(org.mozilla.javascript.ast.AstNode) -> setBody
    int getLp() -> getLp
    void setLp(int) -> setLp
    int getRp() -> getRp
    void setRp(int) -> setRp
    void setParens(int,int) -> setParens
    boolean isExpressionClosure() -> isExpressionClosure
    void setIsExpressionClosure(boolean) -> setIsExpressionClosure
    boolean requiresActivation() -> requiresActivation
    void setRequiresActivation() -> setRequiresActivation
    boolean isGenerator() -> isGenerator
    void setIsGenerator() -> setIsGenerator
    void addResumptionPoint(org.mozilla.javascript.Node) -> addResumptionPoint
    java.util.List getResumptionPoints() -> getResumptionPoints
    java.util.Map getLiveLocals() -> getLiveLocals
    void addLiveLocals(org.mozilla.javascript.Node,int[]) -> addLiveLocals
    int addFunction(org.mozilla.javascript.ast.FunctionNode) -> addFunction
    int getFunctionType() -> getFunctionType
    void setFunctionType(int) -> setFunctionType
    boolean isGetterOrSetter() -> isGetterOrSetter
    boolean isGetter() -> isGetter
    boolean isSetter() -> isSetter
    void setFunctionIsGetter() -> setFunctionIsGetter
    void setFunctionIsSetter() -> setFunctionIsSetter
    void setMemberExprNode(org.mozilla.javascript.ast.AstNode) -> setMemberExprNode
    org.mozilla.javascript.ast.AstNode getMemberExprNode() -> getMemberExprNode
    java.lang.String toSource(int) -> toSource
    void visit(org.mozilla.javascript.ast.NodeVisitor) -> visit
org.mozilla.javascript.ast.FunctionNode$Form -> org.mozilla.javascript.ast.FunctionNode$Form:
    org.mozilla.javascript.ast.FunctionNode$Form FUNCTION -> FUNCTION
    org.mozilla.javascript.ast.FunctionNode$Form GETTER -> GETTER
    org.mozilla.javascript.ast.FunctionNode$Form SETTER -> SETTER
    org.mozilla.javascript.ast.FunctionNode$Form[] $VALUES -> $VALUES
    org.mozilla.javascript.ast.FunctionNode$Form[] values() -> values
    org.mozilla.javascript.ast.FunctionNode$Form valueOf(java.lang.String) -> valueOf
org.mozilla.javascript.ast.GeneratorExpression -> org.mozilla.javascript.ast.GeneratorExpression:
    org.mozilla.javascript.ast.AstNode result -> result
    java.util.List loops -> loops
    org.mozilla.javascript.ast.AstNode filter -> filter
    int ifPosition -> ifPosition
    int lp -> lp
    int rp -> rp
    org.mozilla.javascript.ast.AstNode getResult() -> getResult
    void setResult(org.mozilla.javascript.ast.AstNode) -> setResult
    java.util.List getLoops() -> getLoops
    void setLoops(java.util.List) -> setLoops
    void addLoop(org.mozilla.javascript.ast.GeneratorExpressionLoop) -> addLoop
    org.mozilla.javascript.ast.AstNode getFilter() -> getFilter
    void setFilter(org.mozilla.javascript.ast.AstNode) -> setFilter
    int getIfPosition() -> getIfPosition
    void setIfPosition(int) -> setIfPosition
    int getFilterLp() -> getFilterLp
    void setFilterLp(int) -> setFilterLp
    int getFilterRp() -> getFilterRp
    void setFilterRp(int) -> setFilterRp
    java.lang.String toSource(int) -> toSource
    void visit(org.mozilla.javascript.ast.NodeVisitor) -> visit
org.mozilla.javascript.ast.GeneratorExpressionLoop -> org.mozilla.javascript.ast.GeneratorExpressionLoop:
    boolean isForEach() -> isForEach
    void setIsForEach(boolean) -> setIsForEach
    java.lang.String toSource(int) -> toSource
    void visit(org.mozilla.javascript.ast.NodeVisitor) -> visit
org.mozilla.javascript.ast.IdeErrorReporter -> org.mozilla.javascript.ast.IdeErrorReporter:
    void warning(java.lang.String,java.lang.String,int,int) -> warning
    void error(java.lang.String,java.lang.String,int,int) -> error
org.mozilla.javascript.ast.IfStatement -> org.mozilla.javascript.ast.IfStatement:
    org.mozilla.javascript.ast.AstNode condition -> condition
    org.mozilla.javascript.ast.AstNode thenPart -> thenPart
    int elsePosition -> elsePosition
    org.mozilla.javascript.ast.AstNode elsePart -> elsePart
    int lp -> lp
    int rp -> rp
    org.mozilla.javascript.ast.AstNode getCondition() -> getCondition
    void setCondition(org.mozilla.javascript.ast.AstNode) -> setCondition
    org.mozilla.javascript.ast.AstNode getThenPart() -> getThenPart
    void setThenPart(org.mozilla.javascript.ast.AstNode) -> setThenPart
    org.mozilla.javascript.ast.AstNode getElsePart() -> getElsePart
    void setElsePart(org.mozilla.javascript.ast.AstNode) -> setElsePart
    int getElsePosition() -> getElsePosition
    void setElsePosition(int) -> setElsePosition
    int getLp() -> getLp
    void setLp(int) -> setLp
    int getRp() -> getRp
    void setRp(int) -> setRp
    void setParens(int,int) -> setParens
    java.lang.String toSource(int) -> toSource
    void visit(org.mozilla.javascript.ast.NodeVisitor) -> visit
org.mozilla.javascript.ast.InfixExpression -> org.mozilla.javascript.ast.InfixExpression:
    org.mozilla.javascript.ast.AstNode left -> left
    org.mozilla.javascript.ast.AstNode right -> right
    int operatorPosition -> operatorPosition
    void setLeftAndRight(org.mozilla.javascript.ast.AstNode,org.mozilla.javascript.ast.AstNode) -> setLeftAndRight
    int getOperator() -> getOperator
    void setOperator(int) -> setOperator
    org.mozilla.javascript.ast.AstNode getLeft() -> getLeft
    void setLeft(org.mozilla.javascript.ast.AstNode) -> setLeft
    org.mozilla.javascript.ast.AstNode getRight() -> getRight
    void setRight(org.mozilla.javascript.ast.AstNode) -> setRight
    int getOperatorPosition() -> getOperatorPosition
    void setOperatorPosition(int) -> setOperatorPosition
    boolean hasSideEffects() -> hasSideEffects
    java.lang.String toSource(int) -> toSource
    void visit(org.mozilla.javascript.ast.NodeVisitor) -> visit
org.mozilla.javascript.ast.Jump -> org.mozilla.javascript.ast.Jump:
    org.mozilla.javascript.Node target -> target
    org.mozilla.javascript.Node target2 -> target2
    org.mozilla.javascript.ast.Jump jumpNode -> jumpNode
    org.mozilla.javascript.ast.Jump getJumpStatement() -> getJumpStatement
    void setJumpStatement(org.mozilla.javascript.ast.Jump) -> setJumpStatement
    org.mozilla.javascript.Node getDefault() -> getDefault
    void setDefault(org.mozilla.javascript.Node) -> setDefault
    org.mozilla.javascript.Node getFinally() -> getFinally
    void setFinally(org.mozilla.javascript.Node) -> setFinally
    org.mozilla.javascript.ast.Jump getLoop() -> getLoop
    void setLoop(org.mozilla.javascript.ast.Jump) -> setLoop
    org.mozilla.javascript.Node getContinue() -> getContinue
    void setContinue(org.mozilla.javascript.Node) -> setContinue
    void visit(org.mozilla.javascript.ast.NodeVisitor) -> visit
    java.lang.String toSource(int) -> toSource
org.mozilla.javascript.ast.KeywordLiteral -> org.mozilla.javascript.ast.KeywordLiteral:
    org.mozilla.javascript.ast.KeywordLiteral setType(int) -> setType
    boolean isBooleanLiteral() -> isBooleanLiteral
    java.lang.String toSource(int) -> toSource
    void visit(org.mozilla.javascript.ast.NodeVisitor) -> visit
    org.mozilla.javascript.Node setType(int) -> setType
org.mozilla.javascript.ast.Label -> org.mozilla.javascript.ast.Label:
    java.lang.String name -> name
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    java.lang.String toSource(int) -> toSource
    void visit(org.mozilla.javascript.ast.NodeVisitor) -> visit
org.mozilla.javascript.ast.LabeledStatement -> org.mozilla.javascript.ast.LabeledStatement:
    java.util.List labels -> labels
    org.mozilla.javascript.ast.AstNode statement -> statement
    java.util.List getLabels() -> getLabels
    void setLabels(java.util.List) -> setLabels
    void addLabel(org.mozilla.javascript.ast.Label) -> addLabel
    org.mozilla.javascript.ast.AstNode getStatement() -> getStatement
    org.mozilla.javascript.ast.Label getLabelByName(java.lang.String) -> getLabelByName
    void setStatement(org.mozilla.javascript.ast.AstNode) -> setStatement
    org.mozilla.javascript.ast.Label getFirstLabel() -> getFirstLabel
    java.lang.String toSource(int) -> toSource
    void visit(org.mozilla.javascript.ast.NodeVisitor) -> visit
org.mozilla.javascript.ast.LetNode -> org.mozilla.javascript.ast.LetNode:
    org.mozilla.javascript.ast.VariableDeclaration variables -> variables
    org.mozilla.javascript.ast.AstNode body -> body
    int lp -> lp
    int rp -> rp
    org.mozilla.javascript.ast.VariableDeclaration getVariables() -> getVariables
    void setVariables(org.mozilla.javascript.ast.VariableDeclaration) -> setVariables
    org.mozilla.javascript.ast.AstNode getBody() -> getBody
    void setBody(org.mozilla.javascript.ast.AstNode) -> setBody
    int getLp() -> getLp
    void setLp(int) -> setLp
    int getRp() -> getRp
    void setRp(int) -> setRp
    void setParens(int,int) -> setParens
    java.lang.String toSource(int) -> toSource
    void visit(org.mozilla.javascript.ast.NodeVisitor) -> visit
org.mozilla.javascript.ast.Loop -> org.mozilla.javascript.ast.Loop:
    org.mozilla.javascript.ast.AstNode body -> body
    int lp -> lp
    int rp -> rp
    org.mozilla.javascript.ast.AstNode getBody() -> getBody
    void setBody(org.mozilla.javascript.ast.AstNode) -> setBody
    int getLp() -> getLp
    void setLp(int) -> setLp
    int getRp() -> getRp
    void setRp(int) -> setRp
    void setParens(int,int) -> setParens
org.mozilla.javascript.ast.Name -> org.mozilla.javascript.ast.Name:
    java.lang.String identifier -> identifier
    org.mozilla.javascript.ast.Scope scope -> scope
    java.lang.String getIdentifier() -> getIdentifier
    void setIdentifier(java.lang.String) -> setIdentifier
    void setScope(org.mozilla.javascript.ast.Scope) -> setScope
    org.mozilla.javascript.ast.Scope getScope() -> getScope
    org.mozilla.javascript.ast.Scope getDefiningScope() -> getDefiningScope
    boolean isLocalName() -> isLocalName
    int length() -> length
    java.lang.String toSource(int) -> toSource
    void visit(org.mozilla.javascript.ast.NodeVisitor) -> visit
org.mozilla.javascript.ast.NewExpression -> org.mozilla.javascript.ast.NewExpression:
    org.mozilla.javascript.ast.ObjectLiteral initializer -> initializer
    org.mozilla.javascript.ast.ObjectLiteral getInitializer() -> getInitializer
    void setInitializer(org.mozilla.javascript.ast.ObjectLiteral) -> setInitializer
    java.lang.String toSource(int) -> toSource
    void visit(org.mozilla.javascript.ast.NodeVisitor) -> visit
org.mozilla.javascript.ast.NodeVisitor -> org.mozilla.javascript.ast.NodeVisitor:
    boolean visit(org.mozilla.javascript.ast.AstNode) -> visit
org.mozilla.javascript.ast.NumberLiteral -> org.mozilla.javascript.ast.NumberLiteral:
    java.lang.String value -> value
    double number -> number
    java.lang.String getValue() -> getValue
    void setValue(java.lang.String) -> setValue
    double getNumber() -> getNumber
    void setNumber(double) -> setNumber
    java.lang.String toSource(int) -> toSource
    void visit(org.mozilla.javascript.ast.NodeVisitor) -> visit
org.mozilla.javascript.ast.ObjectLiteral -> org.mozilla.javascript.ast.ObjectLiteral:
    java.util.List NO_ELEMS -> NO_ELEMS
    java.util.List elements -> elements
    boolean isDestructuring -> isDestructuring
    java.util.List getElements() -> getElements
    void setElements(java.util.List) -> setElements
    void addElement(org.mozilla.javascript.ast.ObjectProperty) -> addElement
    void setIsDestructuring(boolean) -> setIsDestructuring
    boolean isDestructuring() -> isDestructuring
    java.lang.String toSource(int) -> toSource
    void visit(org.mozilla.javascript.ast.NodeVisitor) -> visit
org.mozilla.javascript.ast.ObjectProperty -> org.mozilla.javascript.ast.ObjectProperty:
    void setNodeType(int) -> setNodeType
    void setIsGetter() -> setIsGetter
    boolean isGetter() -> isGetter
    void setIsSetter() -> setIsSetter
    boolean isSetter() -> isSetter
    java.lang.String toSource(int) -> toSource
org.mozilla.javascript.ast.ParenthesizedExpression -> org.mozilla.javascript.ast.ParenthesizedExpression:
    org.mozilla.javascript.ast.AstNode expression -> expression
    org.mozilla.javascript.ast.AstNode getExpression() -> getExpression
    void setExpression(org.mozilla.javascript.ast.AstNode) -> setExpression
    java.lang.String toSource(int) -> toSource
    void visit(org.mozilla.javascript.ast.NodeVisitor) -> visit
org.mozilla.javascript.ast.ParseProblem -> org.mozilla.javascript.ast.ParseProblem:
    org.mozilla.javascript.ast.ParseProblem$Type type -> type
    java.lang.String message -> message
    java.lang.String sourceName -> sourceName
    int offset -> offset
    int length -> length
    org.mozilla.javascript.ast.ParseProblem$Type getType() -> getType
    void setType(org.mozilla.javascript.ast.ParseProblem$Type) -> setType
    java.lang.String getMessage() -> getMessage
    void setMessage(java.lang.String) -> setMessage
    java.lang.String getSourceName() -> getSourceName
    void setSourceName(java.lang.String) -> setSourceName
    int getFileOffset() -> getFileOffset
    void setFileOffset(int) -> setFileOffset
    int getLength() -> getLength
    void setLength(int) -> setLength
    java.lang.String toString() -> toString
org.mozilla.javascript.ast.ParseProblem$Type -> org.mozilla.javascript.ast.ParseProblem$Type:
    org.mozilla.javascript.ast.ParseProblem$Type Error -> Error
    org.mozilla.javascript.ast.ParseProblem$Type Warning -> Warning
    org.mozilla.javascript.ast.ParseProblem$Type[] $VALUES -> $VALUES
    org.mozilla.javascript.ast.ParseProblem$Type[] values() -> values
    org.mozilla.javascript.ast.ParseProblem$Type valueOf(java.lang.String) -> valueOf
org.mozilla.javascript.ast.PropertyGet -> org.mozilla.javascript.ast.PropertyGet:
    org.mozilla.javascript.ast.AstNode getTarget() -> getTarget
    void setTarget(org.mozilla.javascript.ast.AstNode) -> setTarget
    org.mozilla.javascript.ast.Name getProperty() -> getProperty
    void setProperty(org.mozilla.javascript.ast.Name) -> setProperty
    java.lang.String toSource(int) -> toSource
    void visit(org.mozilla.javascript.ast.NodeVisitor) -> visit
org.mozilla.javascript.ast.RegExpLiteral -> org.mozilla.javascript.ast.RegExpLiteral:
    java.lang.String value -> value
    java.lang.String flags -> flags
    java.lang.String getValue() -> getValue
    void setValue(java.lang.String) -> setValue
    java.lang.String getFlags() -> getFlags
    void setFlags(java.lang.String) -> setFlags
    java.lang.String toSource(int) -> toSource
    void visit(org.mozilla.javascript.ast.NodeVisitor) -> visit
org.mozilla.javascript.ast.ReturnStatement -> org.mozilla.javascript.ast.ReturnStatement:
    org.mozilla.javascript.ast.AstNode returnValue -> returnValue
    org.mozilla.javascript.ast.AstNode getReturnValue() -> getReturnValue
    void setReturnValue(org.mozilla.javascript.ast.AstNode) -> setReturnValue
    java.lang.String toSource(int) -> toSource
    void visit(org.mozilla.javascript.ast.NodeVisitor) -> visit
org.mozilla.javascript.ast.Scope -> org.mozilla.javascript.ast.Scope:
    java.util.Map symbolTable -> symbolTable
    org.mozilla.javascript.ast.Scope parentScope -> parentScope
    org.mozilla.javascript.ast.ScriptNode top -> top
    java.util.List childScopes -> childScopes
    org.mozilla.javascript.ast.Scope getParentScope() -> getParentScope
    void setParentScope(org.mozilla.javascript.ast.Scope) -> setParentScope
    void clearParentScope() -> clearParentScope
    java.util.List getChildScopes() -> getChildScopes
    void addChildScope(org.mozilla.javascript.ast.Scope) -> addChildScope
    void replaceWith(org.mozilla.javascript.ast.Scope) -> replaceWith
    org.mozilla.javascript.ast.ScriptNode getTop() -> getTop
    void setTop(org.mozilla.javascript.ast.ScriptNode) -> setTop
    org.mozilla.javascript.ast.Scope splitScope(org.mozilla.javascript.ast.Scope) -> splitScope
    void joinScopes(org.mozilla.javascript.ast.Scope,org.mozilla.javascript.ast.Scope) -> joinScopes
    org.mozilla.javascript.ast.Scope getDefiningScope(java.lang.String) -> getDefiningScope
    org.mozilla.javascript.ast.Symbol getSymbol(java.lang.String) -> getSymbol
    void putSymbol(org.mozilla.javascript.ast.Symbol) -> putSymbol
    java.util.Map getSymbolTable() -> getSymbolTable
    void setSymbolTable(java.util.Map) -> setSymbolTable
    java.util.Map ensureSymbolTable() -> ensureSymbolTable
    java.util.List getStatements() -> getStatements
    java.lang.String toSource(int) -> toSource
    void visit(org.mozilla.javascript.ast.NodeVisitor) -> visit
org.mozilla.javascript.ast.ScriptNode -> org.mozilla.javascript.ast.ScriptNode:
    int encodedSourceStart -> encodedSourceStart
    int encodedSourceEnd -> encodedSourceEnd
    java.lang.String sourceName -> sourceName
    java.lang.String encodedSource -> encodedSource
    int endLineno -> endLineno
    java.util.List functions -> functions
    java.util.List regexps -> regexps
    java.util.List EMPTY_LIST -> EMPTY_LIST
    java.util.List symbols -> symbols
    int paramCount -> paramCount
    java.lang.String[] variableNames -> variableNames
    boolean[] isConsts -> isConsts
    java.lang.Object compilerData -> compilerData
    int tempNumber -> tempNumber
    java.lang.String getSourceName() -> getSourceName
    void setSourceName(java.lang.String) -> setSourceName
    int getEncodedSourceStart() -> getEncodedSourceStart
    void setEncodedSourceStart(int) -> setEncodedSourceStart
    int getEncodedSourceEnd() -> getEncodedSourceEnd
    void setEncodedSourceEnd(int) -> setEncodedSourceEnd
    void setEncodedSourceBounds(int,int) -> setEncodedSourceBounds
    void setEncodedSource(java.lang.String) -> setEncodedSource
    java.lang.String getEncodedSource() -> getEncodedSource
    int getBaseLineno() -> getBaseLineno
    void setBaseLineno(int) -> setBaseLineno
    int getEndLineno() -> getEndLineno
    void setEndLineno(int) -> setEndLineno
    int getFunctionCount() -> getFunctionCount
    org.mozilla.javascript.ast.FunctionNode getFunctionNode(int) -> getFunctionNode
    java.util.List getFunctions() -> getFunctions
    int addFunction(org.mozilla.javascript.ast.FunctionNode) -> addFunction
    int getRegexpCount() -> getRegexpCount
    java.lang.String getRegexpString(int) -> getRegexpString
    java.lang.String getRegexpFlags(int) -> getRegexpFlags
    void addRegExp(org.mozilla.javascript.ast.RegExpLiteral) -> addRegExp
    int getIndexForNameNode(org.mozilla.javascript.Node) -> getIndexForNameNode
    java.lang.String getParamOrVarName(int) -> getParamOrVarName
    int getParamCount() -> getParamCount
    int getParamAndVarCount() -> getParamAndVarCount
    java.lang.String[] getParamAndVarNames() -> getParamAndVarNames
    boolean[] getParamAndVarConst() -> getParamAndVarConst
    void addSymbol(org.mozilla.javascript.ast.Symbol) -> addSymbol
    java.util.List getSymbols() -> getSymbols
    void setSymbols(java.util.List) -> setSymbols
    void flattenSymbolTable(boolean) -> flattenSymbolTable
    java.lang.Object getCompilerData() -> getCompilerData
    void setCompilerData(java.lang.Object) -> setCompilerData
    java.lang.String getNextTempName() -> getNextTempName
    void visit(org.mozilla.javascript.ast.NodeVisitor) -> visit
org.mozilla.javascript.ast.StringLiteral -> org.mozilla.javascript.ast.StringLiteral:
    java.lang.String value -> value
    char quoteChar -> quoteChar
    java.lang.String getValue() -> getValue
    java.lang.String getValue(boolean) -> getValue
    void setValue(java.lang.String) -> setValue
    char getQuoteCharacter() -> getQuoteCharacter
    void setQuoteCharacter(char) -> setQuoteCharacter
    java.lang.String toSource(int) -> toSource
    void visit(org.mozilla.javascript.ast.NodeVisitor) -> visit
org.mozilla.javascript.ast.SwitchCase -> org.mozilla.javascript.ast.SwitchCase:
    org.mozilla.javascript.ast.AstNode expression -> expression
    java.util.List statements -> statements
    org.mozilla.javascript.ast.AstNode getExpression() -> getExpression
    void setExpression(org.mozilla.javascript.ast.AstNode) -> setExpression
    boolean isDefault() -> isDefault
    java.util.List getStatements() -> getStatements
    void setStatements(java.util.List) -> setStatements
    void addStatement(org.mozilla.javascript.ast.AstNode) -> addStatement
    java.lang.String toSource(int) -> toSource
    void visit(org.mozilla.javascript.ast.NodeVisitor) -> visit
org.mozilla.javascript.ast.SwitchStatement -> org.mozilla.javascript.ast.SwitchStatement:
    java.util.List NO_CASES -> NO_CASES
    org.mozilla.javascript.ast.AstNode expression -> expression
    java.util.List cases -> cases
    int lp -> lp
    int rp -> rp
    org.mozilla.javascript.ast.AstNode getExpression() -> getExpression
    void setExpression(org.mozilla.javascript.ast.AstNode) -> setExpression
    java.util.List getCases() -> getCases
    void setCases(java.util.List) -> setCases
    void addCase(org.mozilla.javascript.ast.SwitchCase) -> addCase
    int getLp() -> getLp
    void setLp(int) -> setLp
    int getRp() -> getRp
    void setRp(int) -> setRp
    void setParens(int,int) -> setParens
    java.lang.String toSource(int) -> toSource
    void visit(org.mozilla.javascript.ast.NodeVisitor) -> visit
org.mozilla.javascript.ast.Symbol -> org.mozilla.javascript.ast.Symbol:
    int declType -> declType
    int index -> index
    java.lang.String name -> name
    org.mozilla.javascript.Node node -> node
    org.mozilla.javascript.ast.Scope containingTable -> containingTable
    int getDeclType() -> getDeclType
    void setDeclType(int) -> setDeclType
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    org.mozilla.javascript.Node getNode() -> getNode
    int getIndex() -> getIndex
    void setIndex(int) -> setIndex
    void setNode(org.mozilla.javascript.Node) -> setNode
    org.mozilla.javascript.ast.Scope getContainingTable() -> getContainingTable
    void setContainingTable(org.mozilla.javascript.ast.Scope) -> setContainingTable
    java.lang.String getDeclTypeName() -> getDeclTypeName
    java.lang.String toString() -> toString
org.mozilla.javascript.ast.ThrowStatement -> org.mozilla.javascript.ast.ThrowStatement:
    org.mozilla.javascript.ast.AstNode expression -> expression
    org.mozilla.javascript.ast.AstNode getExpression() -> getExpression
    void setExpression(org.mozilla.javascript.ast.AstNode) -> setExpression
    java.lang.String toSource(int) -> toSource
    void visit(org.mozilla.javascript.ast.NodeVisitor) -> visit
org.mozilla.javascript.ast.TryStatement -> org.mozilla.javascript.ast.TryStatement:
    java.util.List NO_CATCHES -> NO_CATCHES
    org.mozilla.javascript.ast.AstNode tryBlock -> tryBlock
    java.util.List catchClauses -> catchClauses
    org.mozilla.javascript.ast.AstNode finallyBlock -> finallyBlock
    int finallyPosition -> finallyPosition
    org.mozilla.javascript.ast.AstNode getTryBlock() -> getTryBlock
    void setTryBlock(org.mozilla.javascript.ast.AstNode) -> setTryBlock
    java.util.List getCatchClauses() -> getCatchClauses
    void setCatchClauses(java.util.List) -> setCatchClauses
    void addCatchClause(org.mozilla.javascript.ast.CatchClause) -> addCatchClause
    org.mozilla.javascript.ast.AstNode getFinallyBlock() -> getFinallyBlock
    void setFinallyBlock(org.mozilla.javascript.ast.AstNode) -> setFinallyBlock
    int getFinallyPosition() -> getFinallyPosition
    void setFinallyPosition(int) -> setFinallyPosition
    java.lang.String toSource(int) -> toSource
    void visit(org.mozilla.javascript.ast.NodeVisitor) -> visit
org.mozilla.javascript.ast.UnaryExpression -> org.mozilla.javascript.ast.UnaryExpression:
    org.mozilla.javascript.ast.AstNode operand -> operand
    boolean isPostfix -> isPostfix
    int getOperator() -> getOperator
    void setOperator(int) -> setOperator
    org.mozilla.javascript.ast.AstNode getOperand() -> getOperand
    void setOperand(org.mozilla.javascript.ast.AstNode) -> setOperand
    boolean isPostfix() -> isPostfix
    boolean isPrefix() -> isPrefix
    void setIsPostfix(boolean) -> setIsPostfix
    java.lang.String toSource(int) -> toSource
    void visit(org.mozilla.javascript.ast.NodeVisitor) -> visit
org.mozilla.javascript.ast.VariableDeclaration -> org.mozilla.javascript.ast.VariableDeclaration:
    java.util.List variables -> variables
    boolean isStatement -> isStatement
    java.util.List getVariables() -> getVariables
    void setVariables(java.util.List) -> setVariables
    void addVariable(org.mozilla.javascript.ast.VariableInitializer) -> addVariable
    org.mozilla.javascript.Node setType(int) -> setType
    boolean isVar() -> isVar
    boolean isConst() -> isConst
    boolean isLet() -> isLet
    boolean isStatement() -> isStatement
    void setIsStatement(boolean) -> setIsStatement
    java.lang.String declTypeName() -> declTypeName
    java.lang.String toSource(int) -> toSource
    void visit(org.mozilla.javascript.ast.NodeVisitor) -> visit
org.mozilla.javascript.ast.VariableInitializer -> org.mozilla.javascript.ast.VariableInitializer:
    org.mozilla.javascript.ast.AstNode target -> target
    org.mozilla.javascript.ast.AstNode initializer -> initializer
    void setNodeType(int) -> setNodeType
    boolean isDestructuring() -> isDestructuring
    org.mozilla.javascript.ast.AstNode getTarget() -> getTarget
    void setTarget(org.mozilla.javascript.ast.AstNode) -> setTarget
    org.mozilla.javascript.ast.AstNode getInitializer() -> getInitializer
    void setInitializer(org.mozilla.javascript.ast.AstNode) -> setInitializer
    java.lang.String toSource(int) -> toSource
    void visit(org.mozilla.javascript.ast.NodeVisitor) -> visit
org.mozilla.javascript.ast.WhileLoop -> org.mozilla.javascript.ast.WhileLoop:
    org.mozilla.javascript.ast.AstNode condition -> condition
    org.mozilla.javascript.ast.AstNode getCondition() -> getCondition
    void setCondition(org.mozilla.javascript.ast.AstNode) -> setCondition
    java.lang.String toSource(int) -> toSource
    void visit(org.mozilla.javascript.ast.NodeVisitor) -> visit
org.mozilla.javascript.ast.WithStatement -> org.mozilla.javascript.ast.WithStatement:
    org.mozilla.javascript.ast.AstNode expression -> expression
    org.mozilla.javascript.ast.AstNode statement -> statement
    int lp -> lp
    int rp -> rp
    org.mozilla.javascript.ast.AstNode getExpression() -> getExpression
    void setExpression(org.mozilla.javascript.ast.AstNode) -> setExpression
    org.mozilla.javascript.ast.AstNode getStatement() -> getStatement
    void setStatement(org.mozilla.javascript.ast.AstNode) -> setStatement
    int getLp() -> getLp
    void setLp(int) -> setLp
    int getRp() -> getRp
    void setRp(int) -> setRp
    void setParens(int,int) -> setParens
    java.lang.String toSource(int) -> toSource
    void visit(org.mozilla.javascript.ast.NodeVisitor) -> visit
org.mozilla.javascript.ast.XmlDotQuery -> org.mozilla.javascript.ast.XmlDotQuery:
    int rp -> rp
    int getRp() -> getRp
    void setRp(int) -> setRp
    java.lang.String toSource(int) -> toSource
org.mozilla.javascript.ast.XmlElemRef -> org.mozilla.javascript.ast.XmlElemRef:
    org.mozilla.javascript.ast.AstNode indexExpr -> indexExpr
    int lb -> lb
    int rb -> rb
    org.mozilla.javascript.ast.AstNode getExpression() -> getExpression
    void setExpression(org.mozilla.javascript.ast.AstNode) -> setExpression
    int getLb() -> getLb
    void setLb(int) -> setLb
    int getRb() -> getRb
    void setRb(int) -> setRb
    void setBrackets(int,int) -> setBrackets
    java.lang.String toSource(int) -> toSource
    void visit(org.mozilla.javascript.ast.NodeVisitor) -> visit
org.mozilla.javascript.ast.XmlExpression -> org.mozilla.javascript.ast.XmlExpression:
    org.mozilla.javascript.ast.AstNode expression -> expression
    boolean isXmlAttribute -> isXmlAttribute
    org.mozilla.javascript.ast.AstNode getExpression() -> getExpression
    void setExpression(org.mozilla.javascript.ast.AstNode) -> setExpression
    boolean isXmlAttribute() -> isXmlAttribute
    void setIsXmlAttribute(boolean) -> setIsXmlAttribute
    java.lang.String toSource(int) -> toSource
    void visit(org.mozilla.javascript.ast.NodeVisitor) -> visit
org.mozilla.javascript.ast.XmlFragment -> org.mozilla.javascript.ast.XmlFragment:
org.mozilla.javascript.ast.XmlLiteral -> org.mozilla.javascript.ast.XmlLiteral:
    java.util.List fragments -> fragments
    java.util.List getFragments() -> getFragments
    void setFragments(java.util.List) -> setFragments
    void addFragment(org.mozilla.javascript.ast.XmlFragment) -> addFragment
    java.lang.String toSource(int) -> toSource
    void visit(org.mozilla.javascript.ast.NodeVisitor) -> visit
org.mozilla.javascript.ast.XmlMemberGet -> org.mozilla.javascript.ast.XmlMemberGet:
    org.mozilla.javascript.ast.AstNode getTarget() -> getTarget
    void setTarget(org.mozilla.javascript.ast.AstNode) -> setTarget
    org.mozilla.javascript.ast.XmlRef getMemberRef() -> getMemberRef
    void setProperty(org.mozilla.javascript.ast.XmlRef) -> setProperty
    java.lang.String toSource(int) -> toSource
org.mozilla.javascript.ast.XmlPropRef -> org.mozilla.javascript.ast.XmlPropRef:
    org.mozilla.javascript.ast.Name propName -> propName
    org.mozilla.javascript.ast.Name getPropName() -> getPropName
    void setPropName(org.mozilla.javascript.ast.Name) -> setPropName
    java.lang.String toSource(int) -> toSource
    void visit(org.mozilla.javascript.ast.NodeVisitor) -> visit
org.mozilla.javascript.ast.XmlRef -> org.mozilla.javascript.ast.XmlRef:
    org.mozilla.javascript.ast.Name namespace -> namespace
    int atPos -> atPos
    int colonPos -> colonPos
    org.mozilla.javascript.ast.Name getNamespace() -> getNamespace
    void setNamespace(org.mozilla.javascript.ast.Name) -> setNamespace
    boolean isAttributeAccess() -> isAttributeAccess
    int getAtPos() -> getAtPos
    void setAtPos(int) -> setAtPos
    int getColonPos() -> getColonPos
    void setColonPos(int) -> setColonPos
org.mozilla.javascript.ast.XmlString -> org.mozilla.javascript.ast.XmlString:
    java.lang.String xml -> xml
    void setXml(java.lang.String) -> setXml
    java.lang.String getXml() -> getXml
    java.lang.String toSource(int) -> toSource
    void visit(org.mozilla.javascript.ast.NodeVisitor) -> visit
org.mozilla.javascript.ast.Yield -> org.mozilla.javascript.ast.Yield:
    org.mozilla.javascript.ast.AstNode value -> value
    org.mozilla.javascript.ast.AstNode getValue() -> getValue
    void setValue(org.mozilla.javascript.ast.AstNode) -> setValue
    java.lang.String toSource(int) -> toSource
    void visit(org.mozilla.javascript.ast.NodeVisitor) -> visit
org.mozilla.javascript.commonjs.module.ModuleScope -> org.mozilla.javascript.commonjs.module.ModuleScope:
    long serialVersionUID -> serialVersionUID
    java.net.URI uri -> uri
    java.net.URI base -> base
    java.net.URI getUri() -> getUri
    java.net.URI getBase() -> getBase
org.mozilla.javascript.commonjs.module.ModuleScript -> org.mozilla.javascript.commonjs.module.ModuleScript:
    long serialVersionUID -> serialVersionUID
    org.mozilla.javascript.Script script -> script
    java.net.URI uri -> uri
    java.net.URI base -> base
    org.mozilla.javascript.Script getScript() -> getScript
    java.net.URI getUri() -> getUri
    java.net.URI getBase() -> getBase
    boolean isSandboxed() -> isSandboxed
org.mozilla.javascript.commonjs.module.ModuleScriptProvider -> org.mozilla.javascript.commonjs.module.ModuleScriptProvider:
    org.mozilla.javascript.commonjs.module.ModuleScript getModuleScript(org.mozilla.javascript.Context,java.lang.String,java.net.URI,java.net.URI,org.mozilla.javascript.Scriptable) -> getModuleScript
org.mozilla.javascript.commonjs.module.Require -> org.mozilla.javascript.commonjs.module.Require:
    long serialVersionUID -> serialVersionUID
    org.mozilla.javascript.commonjs.module.ModuleScriptProvider moduleScriptProvider -> moduleScriptProvider
    org.mozilla.javascript.Scriptable nativeScope -> nativeScope
    org.mozilla.javascript.Scriptable paths -> paths
    boolean sandboxed -> sandboxed
    org.mozilla.javascript.Script preExec -> preExec
    org.mozilla.javascript.Script postExec -> postExec
    java.lang.String mainModuleId -> mainModuleId
    org.mozilla.javascript.Scriptable mainExports -> mainExports
    java.util.Map exportedModuleInterfaces -> exportedModuleInterfaces
    java.lang.Object loadLock -> loadLock
    java.lang.ThreadLocal loadingModuleInterfaces -> loadingModuleInterfaces
    org.mozilla.javascript.Scriptable requireMain(org.mozilla.javascript.Context,java.lang.String) -> requireMain
    void install(org.mozilla.javascript.Scriptable) -> install
    java.lang.Object call(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> call
    org.mozilla.javascript.Scriptable construct(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> construct
    org.mozilla.javascript.Scriptable getExportedModuleInterface(org.mozilla.javascript.Context,java.lang.String,java.net.URI,java.net.URI,boolean) -> getExportedModuleInterface
    org.mozilla.javascript.Scriptable executeModuleScript(org.mozilla.javascript.Context,java.lang.String,org.mozilla.javascript.Scriptable,org.mozilla.javascript.commonjs.module.ModuleScript,boolean) -> executeModuleScript
    void executeOptionalScript(org.mozilla.javascript.Script,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable) -> executeOptionalScript
    void defineReadOnlyProperty(org.mozilla.javascript.ScriptableObject,java.lang.String,java.lang.Object) -> defineReadOnlyProperty
    org.mozilla.javascript.commonjs.module.ModuleScript getModule(org.mozilla.javascript.Context,java.lang.String,java.net.URI,java.net.URI) -> getModule
    java.lang.String getFunctionName() -> getFunctionName
    int getArity() -> getArity
    int getLength() -> getLength
org.mozilla.javascript.commonjs.module.RequireBuilder -> org.mozilla.javascript.commonjs.module.RequireBuilder:
    long serialVersionUID -> serialVersionUID
    boolean sandboxed -> sandboxed
    org.mozilla.javascript.commonjs.module.ModuleScriptProvider moduleScriptProvider -> moduleScriptProvider
    org.mozilla.javascript.Script preExec -> preExec
    org.mozilla.javascript.Script postExec -> postExec
    org.mozilla.javascript.commonjs.module.RequireBuilder setModuleScriptProvider(org.mozilla.javascript.commonjs.module.ModuleScriptProvider) -> setModuleScriptProvider
    org.mozilla.javascript.commonjs.module.RequireBuilder setPostExec(org.mozilla.javascript.Script) -> setPostExec
    org.mozilla.javascript.commonjs.module.RequireBuilder setPreExec(org.mozilla.javascript.Script) -> setPreExec
    org.mozilla.javascript.commonjs.module.RequireBuilder setSandboxed(boolean) -> setSandboxed
    org.mozilla.javascript.commonjs.module.Require createRequire(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable) -> createRequire
org.mozilla.javascript.commonjs.module.provider.CachingModuleScriptProviderBase -> org.mozilla.javascript.commonjs.module.provider.CachingModuleScriptProviderBase:
    long serialVersionUID -> serialVersionUID
    int loadConcurrencyLevel -> loadConcurrencyLevel
    int loadLockShift -> loadLockShift
    int loadLockMask -> loadLockMask
    int loadLockCount -> loadLockCount
    java.lang.Object[] loadLocks -> loadLocks
    org.mozilla.javascript.commonjs.module.provider.ModuleSourceProvider moduleSourceProvider -> moduleSourceProvider
    org.mozilla.javascript.commonjs.module.ModuleScript getModuleScript(org.mozilla.javascript.Context,java.lang.String,java.net.URI,java.net.URI,org.mozilla.javascript.Scriptable) -> getModuleScript
    void putLoadedModule(java.lang.String,org.mozilla.javascript.commonjs.module.ModuleScript,java.lang.Object) -> putLoadedModule
    org.mozilla.javascript.commonjs.module.provider.CachingModuleScriptProviderBase$CachedModuleScript getLoadedModule(java.lang.String) -> getLoadedModule
    java.lang.Object getValidator(org.mozilla.javascript.commonjs.module.provider.CachingModuleScriptProviderBase$CachedModuleScript) -> getValidator
    boolean equal(java.lang.Object,java.lang.Object) -> equal
    int getConcurrencyLevel() -> getConcurrencyLevel
org.mozilla.javascript.commonjs.module.provider.CachingModuleScriptProviderBase$CachedModuleScript -> org.mozilla.javascript.commonjs.module.provider.CachingModuleScriptProviderBase$CachedModuleScript:
    org.mozilla.javascript.commonjs.module.ModuleScript moduleScript -> moduleScript
    java.lang.Object validator -> validator
    org.mozilla.javascript.commonjs.module.ModuleScript getModule() -> getModule
    java.lang.Object getValidator() -> getValidator
org.mozilla.javascript.commonjs.module.provider.DefaultUrlConnectionExpiryCalculator -> org.mozilla.javascript.commonjs.module.provider.DefaultUrlConnectionExpiryCalculator:
    long serialVersionUID -> serialVersionUID
    long relativeExpiry -> relativeExpiry
    long calculateExpiry(java.net.URLConnection) -> calculateExpiry
org.mozilla.javascript.commonjs.module.provider.ModuleSource -> org.mozilla.javascript.commonjs.module.provider.ModuleSource:
    long serialVersionUID -> serialVersionUID
    java.io.Reader reader -> reader
    java.lang.Object securityDomain -> securityDomain
    java.net.URI uri -> uri
    java.net.URI base -> base
    java.lang.Object validator -> validator
    java.io.Reader getReader() -> getReader
    java.lang.Object getSecurityDomain() -> getSecurityDomain
    java.net.URI getUri() -> getUri
    java.net.URI getBase() -> getBase
    java.lang.Object getValidator() -> getValidator
org.mozilla.javascript.commonjs.module.provider.ModuleSourceProvider -> org.mozilla.javascript.commonjs.module.provider.ModuleSourceProvider:
    org.mozilla.javascript.commonjs.module.provider.ModuleSource NOT_MODIFIED -> NOT_MODIFIED
    org.mozilla.javascript.commonjs.module.provider.ModuleSource loadSource(java.lang.String,org.mozilla.javascript.Scriptable,java.lang.Object) -> loadSource
    org.mozilla.javascript.commonjs.module.provider.ModuleSource loadSource(java.net.URI,java.net.URI,java.lang.Object) -> loadSource
org.mozilla.javascript.commonjs.module.provider.ModuleSourceProviderBase -> org.mozilla.javascript.commonjs.module.provider.ModuleSourceProviderBase:
    long serialVersionUID -> serialVersionUID
    org.mozilla.javascript.commonjs.module.provider.ModuleSource loadSource(java.lang.String,org.mozilla.javascript.Scriptable,java.lang.Object) -> loadSource
    org.mozilla.javascript.commonjs.module.provider.ModuleSource loadSource(java.net.URI,java.net.URI,java.lang.Object) -> loadSource
    org.mozilla.javascript.commonjs.module.provider.ModuleSource loadFromPathArray(java.lang.String,org.mozilla.javascript.Scriptable,java.lang.Object) -> loadFromPathArray
    java.lang.String ensureTrailingSlash(java.lang.String) -> ensureTrailingSlash
    boolean entityNeedsRevalidation(java.lang.Object) -> entityNeedsRevalidation
    org.mozilla.javascript.commonjs.module.provider.ModuleSource loadFromUri(java.net.URI,java.net.URI,java.lang.Object) -> loadFromUri
    org.mozilla.javascript.commonjs.module.provider.ModuleSource loadFromPrivilegedLocations(java.lang.String,java.lang.Object) -> loadFromPrivilegedLocations
    org.mozilla.javascript.commonjs.module.provider.ModuleSource loadFromFallbackLocations(java.lang.String,java.lang.Object) -> loadFromFallbackLocations
org.mozilla.javascript.commonjs.module.provider.MultiModuleScriptProvider -> org.mozilla.javascript.commonjs.module.provider.MultiModuleScriptProvider:
    org.mozilla.javascript.commonjs.module.ModuleScriptProvider[] providers -> providers
    org.mozilla.javascript.commonjs.module.ModuleScript getModuleScript(org.mozilla.javascript.Context,java.lang.String,java.net.URI,java.net.URI,org.mozilla.javascript.Scriptable) -> getModuleScript
org.mozilla.javascript.commonjs.module.provider.ParsedContentType -> org.mozilla.javascript.commonjs.module.provider.ParsedContentType:
    long serialVersionUID -> serialVersionUID
    java.lang.String contentType -> contentType
    java.lang.String encoding -> encoding
    java.lang.String getContentType() -> getContentType
    java.lang.String getEncoding() -> getEncoding
org.mozilla.javascript.commonjs.module.provider.SoftCachingModuleScriptProvider -> org.mozilla.javascript.commonjs.module.provider.SoftCachingModuleScriptProvider:
    long serialVersionUID -> serialVersionUID
    java.lang.ref.ReferenceQueue scriptRefQueue -> scriptRefQueue
    java.util.concurrent.ConcurrentMap scripts -> scripts
    org.mozilla.javascript.commonjs.module.ModuleScript getModuleScript(org.mozilla.javascript.Context,java.lang.String,java.net.URI,java.net.URI,org.mozilla.javascript.Scriptable) -> getModuleScript
    org.mozilla.javascript.commonjs.module.provider.CachingModuleScriptProviderBase$CachedModuleScript getLoadedModule(java.lang.String) -> getLoadedModule
    void putLoadedModule(java.lang.String,org.mozilla.javascript.commonjs.module.ModuleScript,java.lang.Object) -> putLoadedModule
    void readObject(java.io.ObjectInputStream) -> readObject
    void writeObject(java.io.ObjectOutputStream) -> writeObject
org.mozilla.javascript.commonjs.module.provider.SoftCachingModuleScriptProvider$ScriptReference -> org.mozilla.javascript.commonjs.module.provider.SoftCachingModuleScriptProvider$ScriptReference:
    java.lang.String moduleId -> moduleId
    java.net.URI uri -> uri
    java.net.URI base -> base
    java.lang.Object validator -> validator
    org.mozilla.javascript.commonjs.module.provider.CachingModuleScriptProviderBase$CachedModuleScript getCachedModuleScript() -> getCachedModuleScript
    java.lang.String getModuleId() -> getModuleId
org.mozilla.javascript.commonjs.module.provider.StrongCachingModuleScriptProvider -> org.mozilla.javascript.commonjs.module.provider.StrongCachingModuleScriptProvider:
    long serialVersionUID -> serialVersionUID
    java.util.Map modules -> modules
    org.mozilla.javascript.commonjs.module.provider.CachingModuleScriptProviderBase$CachedModuleScript getLoadedModule(java.lang.String) -> getLoadedModule
    void putLoadedModule(java.lang.String,org.mozilla.javascript.commonjs.module.ModuleScript,java.lang.Object) -> putLoadedModule
org.mozilla.javascript.commonjs.module.provider.UrlConnectionExpiryCalculator -> org.mozilla.javascript.commonjs.module.provider.UrlConnectionExpiryCalculator:
    long calculateExpiry(java.net.URLConnection) -> calculateExpiry
org.mozilla.javascript.commonjs.module.provider.UrlConnectionSecurityDomainProvider -> org.mozilla.javascript.commonjs.module.provider.UrlConnectionSecurityDomainProvider:
    java.lang.Object getSecurityDomain(java.net.URLConnection) -> getSecurityDomain
org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider -> org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider:
    long serialVersionUID -> serialVersionUID
    java.lang.Iterable privilegedUris -> privilegedUris
    java.lang.Iterable fallbackUris -> fallbackUris
    org.mozilla.javascript.commonjs.module.provider.UrlConnectionSecurityDomainProvider urlConnectionSecurityDomainProvider -> urlConnectionSecurityDomainProvider
    org.mozilla.javascript.commonjs.module.provider.UrlConnectionExpiryCalculator urlConnectionExpiryCalculator -> urlConnectionExpiryCalculator
    org.mozilla.javascript.commonjs.module.provider.ModuleSource loadFromPrivilegedLocations(java.lang.String,java.lang.Object) -> loadFromPrivilegedLocations
    org.mozilla.javascript.commonjs.module.provider.ModuleSource loadFromFallbackLocations(java.lang.String,java.lang.Object) -> loadFromFallbackLocations
    org.mozilla.javascript.commonjs.module.provider.ModuleSource loadFromPathList(java.lang.String,java.lang.Object,java.lang.Iterable) -> loadFromPathList
    org.mozilla.javascript.commonjs.module.provider.ModuleSource loadFromUri(java.net.URI,java.net.URI,java.lang.Object) -> loadFromUri
    org.mozilla.javascript.commonjs.module.provider.ModuleSource loadFromActualUri(java.net.URI,java.net.URI,java.lang.Object) -> loadFromActualUri
    java.io.Reader getReader(java.net.URLConnection) -> getReader
    java.lang.String getCharacterEncoding(java.net.URLConnection) -> getCharacterEncoding
    java.lang.Object getSecurityDomain(java.net.URLConnection) -> getSecurityDomain
    void close(java.net.URLConnection) -> close
    void onFailedClosingUrlConnection(java.net.URLConnection,java.io.IOException) -> onFailedClosingUrlConnection
    java.net.URLConnection openUrlConnection(java.net.URL) -> openUrlConnection
    boolean entityNeedsRevalidation(java.lang.Object) -> entityNeedsRevalidation
org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider$URLValidator -> org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider$URLValidator:
    long serialVersionUID -> serialVersionUID
    java.net.URI uri -> uri
    long lastModified -> lastModified
    java.lang.String entityTags -> entityTags
    long expiry -> expiry
    boolean updateValidator(java.net.URLConnection,long,org.mozilla.javascript.commonjs.module.provider.UrlConnectionExpiryCalculator) -> updateValidator
    boolean isResourceChanged(java.net.URLConnection) -> isResourceChanged
    long calculateExpiry(java.net.URLConnection,long,org.mozilla.javascript.commonjs.module.provider.UrlConnectionExpiryCalculator) -> calculateExpiry
    int getMaxAge(java.lang.String) -> getMaxAge
    java.lang.String getEntityTags(java.net.URLConnection) -> getEntityTags
    boolean appliesTo(java.net.URI) -> appliesTo
    void applyConditionals(java.net.URLConnection) -> applyConditionals
    boolean entityNeedsRevalidation() -> entityNeedsRevalidation
org.mozilla.javascript.debug.DebugFrame -> org.mozilla.javascript.debug.DebugFrame:
    void onEnter(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> onEnter
    void onLineChange(org.mozilla.javascript.Context,int) -> onLineChange
    void onExceptionThrown(org.mozilla.javascript.Context,java.lang.Throwable) -> onExceptionThrown
    void onExit(org.mozilla.javascript.Context,boolean,java.lang.Object) -> onExit
    void onDebuggerStatement(org.mozilla.javascript.Context) -> onDebuggerStatement
org.mozilla.javascript.debug.DebuggableObject -> org.mozilla.javascript.debug.DebuggableObject:
    java.lang.Object[] getAllIds() -> getAllIds
org.mozilla.javascript.debug.DebuggableScript -> org.mozilla.javascript.debug.DebuggableScript:
    boolean isTopLevel() -> isTopLevel
    boolean isFunction() -> isFunction
    java.lang.String getFunctionName() -> getFunctionName
    int getParamCount() -> getParamCount
    int getParamAndVarCount() -> getParamAndVarCount
    java.lang.String getParamOrVarName(int) -> getParamOrVarName
    java.lang.String getSourceName() -> getSourceName
    boolean isGeneratedScript() -> isGeneratedScript
    int[] getLineNumbers() -> getLineNumbers
    int getFunctionCount() -> getFunctionCount
    org.mozilla.javascript.debug.DebuggableScript getFunction(int) -> getFunction
    org.mozilla.javascript.debug.DebuggableScript getParent() -> getParent
org.mozilla.javascript.debug.Debugger -> org.mozilla.javascript.debug.Debugger:
    void handleCompilationDone(org.mozilla.javascript.Context,org.mozilla.javascript.debug.DebuggableScript,java.lang.String) -> handleCompilationDone
    org.mozilla.javascript.debug.DebugFrame getFrame(org.mozilla.javascript.Context,org.mozilla.javascript.debug.DebuggableScript) -> getFrame
org.mozilla.javascript.jdk13.VMBridge_jdk13 -> org.mozilla.javascript.jdk13.VMBridge_jdk13:
    java.lang.ThreadLocal contextLocal -> contextLocal
    java.lang.Object getThreadContextHelper() -> getThreadContextHelper
    org.mozilla.javascript.Context getContext(java.lang.Object) -> getContext
    void setContext(java.lang.Object,org.mozilla.javascript.Context) -> setContext
    java.lang.ClassLoader getCurrentThreadClassLoader() -> getCurrentThreadClassLoader
    boolean tryToMakeAccessible(java.lang.Object) -> tryToMakeAccessible
    java.lang.Object getInterfaceProxyHelper(org.mozilla.javascript.ContextFactory,java.lang.Class[]) -> getInterfaceProxyHelper
    java.lang.Object newInterfaceProxy(java.lang.Object,org.mozilla.javascript.ContextFactory,org.mozilla.javascript.InterfaceAdapter,java.lang.Object,org.mozilla.javascript.Scriptable) -> newInterfaceProxy
    boolean isVarArgs(java.lang.reflect.Member) -> isVarArgs
org.mozilla.javascript.jdk13.VMBridge_jdk13$1 -> org.mozilla.javascript.jdk13.VMBridge_jdk13$1:
    java.lang.Object val$target -> val$target
    org.mozilla.javascript.InterfaceAdapter val$adapter -> val$adapter
    org.mozilla.javascript.ContextFactory val$cf -> val$cf
    org.mozilla.javascript.Scriptable val$topScope -> val$topScope
    org.mozilla.javascript.jdk13.VMBridge_jdk13 this$0 -> this$0
    java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> invoke
org.mozilla.javascript.jdk15.VMBridge_jdk15 -> org.mozilla.javascript.jdk15.VMBridge_jdk15:
    boolean isVarArgs(java.lang.reflect.Member) -> isVarArgs
    java.util.Iterator getJavaIterator(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object) -> getJavaIterator
org.mozilla.javascript.json.JsonParser -> org.mozilla.javascript.json.JsonParser:
    org.mozilla.javascript.Context cx -> cx
    org.mozilla.javascript.Scriptable scope -> scope
    int pos -> pos
    int length -> length
    java.lang.String src -> src
    java.lang.Object parseValue(java.lang.String) -> parseValue
    java.lang.Object readValue() -> readValue
    java.lang.Object readObject() -> readObject
    java.lang.Object readArray() -> readArray
    java.lang.String readString() -> readString
    java.lang.Number readNumber(char) -> readNumber
    java.lang.Boolean readTrue() -> readTrue
    java.lang.Boolean readFalse() -> readFalse
    java.lang.Object readNull() -> readNull
    void consumeWhitespace() -> consumeWhitespace
    void consume(char) -> consume
org.mozilla.javascript.json.JsonParser$ParseException -> org.mozilla.javascript.json.JsonParser$ParseException:
    long serialVersionUID -> serialVersionUID
org.mozilla.javascript.optimizer.Block -> org.mozilla.javascript.optimizer.Block:
    org.mozilla.javascript.optimizer.Block[] itsSuccessors -> itsSuccessors
    org.mozilla.javascript.optimizer.Block[] itsPredecessors -> itsPredecessors
    int itsStartNodeIndex -> itsStartNodeIndex
    int itsEndNodeIndex -> itsEndNodeIndex
    int itsBlockID -> itsBlockID
    java.util.BitSet itsLiveOnEntrySet -> itsLiveOnEntrySet
    java.util.BitSet itsLiveOnExitSet -> itsLiveOnExitSet
    java.util.BitSet itsUseBeforeDefSet -> itsUseBeforeDefSet
    java.util.BitSet itsNotDefSet -> itsNotDefSet
    boolean DEBUG -> DEBUG
    int debug_blockCount -> debug_blockCount
    void runFlowAnalyzes(org.mozilla.javascript.optimizer.OptFunctionNode,org.mozilla.javascript.Node[]) -> runFlowAnalyzes
    org.mozilla.javascript.optimizer.Block[] buildBlocks(org.mozilla.javascript.Node[]) -> buildBlocks
    org.mozilla.javascript.optimizer.Block$FatBlock newFatBlock(int,int) -> newFatBlock
    java.lang.String toString(org.mozilla.javascript.optimizer.Block[],org.mozilla.javascript.Node[]) -> toString
    void reachingDefDataFlow(org.mozilla.javascript.optimizer.OptFunctionNode,org.mozilla.javascript.Node[],org.mozilla.javascript.optimizer.Block[],int[]) -> reachingDefDataFlow
    void typeFlow(org.mozilla.javascript.optimizer.OptFunctionNode,org.mozilla.javascript.Node[],org.mozilla.javascript.optimizer.Block[],int[]) -> typeFlow
    boolean assignType(int[],int,int) -> assignType
    void markAnyTypeVariables(int[]) -> markAnyTypeVariables
    void lookForVariableAccess(org.mozilla.javascript.optimizer.OptFunctionNode,org.mozilla.javascript.Node) -> lookForVariableAccess
    void initLiveOnEntrySets(org.mozilla.javascript.optimizer.OptFunctionNode,org.mozilla.javascript.Node[]) -> initLiveOnEntrySets
    boolean doReachedUseDataFlow() -> doReachedUseDataFlow
    boolean updateEntrySet(java.util.BitSet,java.util.BitSet,java.util.BitSet,java.util.BitSet) -> updateEntrySet
    int findExpressionType(org.mozilla.javascript.optimizer.OptFunctionNode,org.mozilla.javascript.Node,int[]) -> findExpressionType
    boolean findDefPoints(org.mozilla.javascript.optimizer.OptFunctionNode,org.mozilla.javascript.Node,int[]) -> findDefPoints
    boolean doTypeFlow(org.mozilla.javascript.optimizer.OptFunctionNode,org.mozilla.javascript.Node[],int[]) -> doTypeFlow
    void printLiveOnEntrySet(org.mozilla.javascript.optimizer.OptFunctionNode) -> printLiveOnEntrySet
org.mozilla.javascript.optimizer.Block$1 -> org.mozilla.javascript.optimizer.Block$1:
org.mozilla.javascript.optimizer.Block$FatBlock -> org.mozilla.javascript.optimizer.Block$FatBlock:
    org.mozilla.javascript.ObjToIntMap successors -> successors
    org.mozilla.javascript.ObjToIntMap predecessors -> predecessors
    org.mozilla.javascript.optimizer.Block realBlock -> realBlock
    org.mozilla.javascript.optimizer.Block[] reduceToArray(org.mozilla.javascript.ObjToIntMap) -> reduceToArray
    void addSuccessor(org.mozilla.javascript.optimizer.Block$FatBlock) -> addSuccessor
    void addPredecessor(org.mozilla.javascript.optimizer.Block$FatBlock) -> addPredecessor
    org.mozilla.javascript.optimizer.Block[] getSuccessors() -> getSuccessors
    org.mozilla.javascript.optimizer.Block[] getPredecessors() -> getPredecessors
org.mozilla.javascript.optimizer.BodyCodegen -> org.mozilla.javascript.optimizer.BodyCodegen:
    int JAVASCRIPT_EXCEPTION -> JAVASCRIPT_EXCEPTION
    int EVALUATOR_EXCEPTION -> EVALUATOR_EXCEPTION
    int ECMAERROR_EXCEPTION -> ECMAERROR_EXCEPTION
    int THROWABLE_EXCEPTION -> THROWABLE_EXCEPTION
    int FINALLY_EXCEPTION -> FINALLY_EXCEPTION
    int EXCEPTION_MAX -> EXCEPTION_MAX
    org.mozilla.javascript.optimizer.BodyCodegen$ExceptionManager exceptionManager -> exceptionManager
    int GENERATOR_TERMINATE -> GENERATOR_TERMINATE
    int GENERATOR_START -> GENERATOR_START
    int GENERATOR_YIELD_START -> GENERATOR_YIELD_START
    org.mozilla.classfile.ClassFileWriter cfw -> cfw
    org.mozilla.javascript.optimizer.Codegen codegen -> codegen
    org.mozilla.javascript.CompilerEnvirons compilerEnv -> compilerEnv
    org.mozilla.javascript.ast.ScriptNode scriptOrFn -> scriptOrFn
    int scriptOrFnIndex -> scriptOrFnIndex
    int savedCodeOffset -> savedCodeOffset
    org.mozilla.javascript.optimizer.OptFunctionNode fnCurrent -> fnCurrent
    int MAX_LOCALS -> MAX_LOCALS
    int[] locals -> locals
    short firstFreeLocal -> firstFreeLocal
    short localsMax -> localsMax
    int itsLineNumber -> itsLineNumber
    boolean hasVarsInRegs -> hasVarsInRegs
    short[] varRegisters -> varRegisters
    boolean inDirectCallFunction -> inDirectCallFunction
    boolean itsForcedObjectParameters -> itsForcedObjectParameters
    int enterAreaStartLabel -> enterAreaStartLabel
    int epilogueLabel -> epilogueLabel
    boolean inLocalBlock -> inLocalBlock
    short variableObjectLocal -> variableObjectLocal
    short popvLocal -> popvLocal
    short contextLocal -> contextLocal
    short argsLocal -> argsLocal
    short operationLocal -> operationLocal
    short thisObjLocal -> thisObjLocal
    short funObjLocal -> funObjLocal
    short itsZeroArgArray -> itsZeroArgArray
    short itsOneArgArray -> itsOneArgArray
    short generatorStateLocal -> generatorStateLocal
    boolean isGenerator -> isGenerator
    int generatorSwitch -> generatorSwitch
    int maxLocals -> maxLocals
    int maxStack -> maxStack
    java.util.Map finallys -> finallys
    java.util.List literals -> literals
    void generateBodyCode() -> generateBodyCode
    void generateGenerator() -> generateGenerator
    void generateNestedFunctionInits() -> generateNestedFunctionInits
    void initBodyGeneration() -> initBodyGeneration
    void generatePrologue() -> generatePrologue
    void generateGetGeneratorResumptionPoint() -> generateGetGeneratorResumptionPoint
    void generateSetGeneratorResumptionPoint(int) -> generateSetGeneratorResumptionPoint
    void generateGetGeneratorStackState() -> generateGetGeneratorStackState
    void generateEpilogue() -> generateEpilogue
    void generateGetGeneratorLocalsState() -> generateGetGeneratorLocalsState
    void generateActivationExit() -> generateActivationExit
    void generateStatement(org.mozilla.javascript.Node) -> generateStatement
    void generateIntegerWrap() -> generateIntegerWrap
    void generateIntegerUnwrap() -> generateIntegerUnwrap
    void generateThrowJavaScriptException() -> generateThrowJavaScriptException
    int getNextGeneratorState(org.mozilla.javascript.Node) -> getNextGeneratorState
    void generateExpression(org.mozilla.javascript.Node,org.mozilla.javascript.Node) -> generateExpression
    void generateYieldPoint(org.mozilla.javascript.Node,boolean) -> generateYieldPoint
    void generateCheckForThrowOrClose(int,boolean,int) -> generateCheckForThrowOrClose
    void generateIfJump(org.mozilla.javascript.Node,org.mozilla.javascript.Node,int,int) -> generateIfJump
    void visitFunction(org.mozilla.javascript.optimizer.OptFunctionNode,int) -> visitFunction
    int getTargetLabel(org.mozilla.javascript.Node) -> getTargetLabel
    void visitGoto(org.mozilla.javascript.ast.Jump,int,org.mozilla.javascript.Node) -> visitGoto
    void addGotoWithReturn(org.mozilla.javascript.Node) -> addGotoWithReturn
    void generateArrayLiteralFactory(org.mozilla.javascript.Node,int) -> generateArrayLiteralFactory
    void generateObjectLiteralFactory(org.mozilla.javascript.Node,int) -> generateObjectLiteralFactory
    void visitArrayLiteral(org.mozilla.javascript.Node,org.mozilla.javascript.Node,boolean) -> visitArrayLiteral
    void visitObjectLiteral(org.mozilla.javascript.Node,org.mozilla.javascript.Node,boolean) -> visitObjectLiteral
    void visitSpecialCall(org.mozilla.javascript.Node,int,int,org.mozilla.javascript.Node) -> visitSpecialCall
    void visitStandardCall(org.mozilla.javascript.Node,org.mozilla.javascript.Node) -> visitStandardCall
    void visitStandardNew(org.mozilla.javascript.Node,org.mozilla.javascript.Node) -> visitStandardNew
    void visitOptimizedCall(org.mozilla.javascript.Node,org.mozilla.javascript.optimizer.OptFunctionNode,int,org.mozilla.javascript.Node) -> visitOptimizedCall
    void generateCallArgArray(org.mozilla.javascript.Node,org.mozilla.javascript.Node,boolean) -> generateCallArgArray
    void generateFunctionAndThisObj(org.mozilla.javascript.Node,org.mozilla.javascript.Node) -> generateFunctionAndThisObj
    void updateLineNumber(org.mozilla.javascript.Node) -> updateLineNumber
    void visitTryCatchFinally(org.mozilla.javascript.ast.Jump,org.mozilla.javascript.Node) -> visitTryCatchFinally
    void generateCatchBlock(int,short,int,int,int) -> generateCatchBlock
    java.lang.String exceptionTypeToName(int) -> exceptionTypeToName
    void inlineFinally(org.mozilla.javascript.Node,int,int) -> inlineFinally
    void inlineFinally(org.mozilla.javascript.Node) -> inlineFinally
    org.mozilla.javascript.Node getFinallyAtTarget(org.mozilla.javascript.Node) -> getFinallyAtTarget
    boolean generateSaveLocals(org.mozilla.javascript.Node) -> generateSaveLocals
    void visitSwitch(org.mozilla.javascript.ast.Jump,org.mozilla.javascript.Node) -> visitSwitch
    void visitTypeofname(org.mozilla.javascript.Node) -> visitTypeofname
    void saveCurrentCodeOffset() -> saveCurrentCodeOffset
    void addInstructionCount() -> addInstructionCount
    void addInstructionCount(int) -> addInstructionCount
    void visitIncDec(org.mozilla.javascript.Node) -> visitIncDec
    boolean isArithmeticNode(org.mozilla.javascript.Node) -> isArithmeticNode
    void visitArithmetic(org.mozilla.javascript.Node,int,org.mozilla.javascript.Node,org.mozilla.javascript.Node) -> visitArithmetic
    void visitBitOp(org.mozilla.javascript.Node,int,org.mozilla.javascript.Node) -> visitBitOp
    int nodeIsDirectCallParameter(org.mozilla.javascript.Node) -> nodeIsDirectCallParameter
    boolean varIsDirectCallParameter(int) -> varIsDirectCallParameter
    void genSimpleCompare(int,int,int) -> genSimpleCompare
    void visitIfJumpRelOp(org.mozilla.javascript.Node,org.mozilla.javascript.Node,int,int) -> visitIfJumpRelOp
    void visitIfJumpEqOp(org.mozilla.javascript.Node,org.mozilla.javascript.Node,int,int) -> visitIfJumpEqOp
    void visitSetName(org.mozilla.javascript.Node,org.mozilla.javascript.Node) -> visitSetName
    void visitStrictSetName(org.mozilla.javascript.Node,org.mozilla.javascript.Node) -> visitStrictSetName
    void visitSetConst(org.mozilla.javascript.Node,org.mozilla.javascript.Node) -> visitSetConst
    void visitGetVar(org.mozilla.javascript.Node) -> visitGetVar
    void visitSetVar(org.mozilla.javascript.Node,org.mozilla.javascript.Node,boolean) -> visitSetVar
    void visitSetConstVar(org.mozilla.javascript.Node,org.mozilla.javascript.Node,boolean) -> visitSetConstVar
    void visitGetProp(org.mozilla.javascript.Node,org.mozilla.javascript.Node) -> visitGetProp
    void visitSetProp(int,org.mozilla.javascript.Node,org.mozilla.javascript.Node) -> visitSetProp
    void visitSetElem(int,org.mozilla.javascript.Node,org.mozilla.javascript.Node) -> visitSetElem
    void visitDotQuery(org.mozilla.javascript.Node,org.mozilla.javascript.Node) -> visitDotQuery
    int getLocalBlockRegister(org.mozilla.javascript.Node) -> getLocalBlockRegister
    void dcpLoadAsNumber(int) -> dcpLoadAsNumber
    void dcpLoadAsObject(int) -> dcpLoadAsObject
    void addGoto(org.mozilla.javascript.Node,int) -> addGoto
    void addObjectToDouble() -> addObjectToDouble
    void addNewObjectArray(int) -> addNewObjectArray
    void addScriptRuntimeInvoke(java.lang.String,java.lang.String) -> addScriptRuntimeInvoke
    void addOptRuntimeInvoke(java.lang.String,java.lang.String) -> addOptRuntimeInvoke
    void addJumpedBooleanWrap(int,int) -> addJumpedBooleanWrap
    void addDoubleWrap() -> addDoubleWrap
    short getNewWordPairLocal(boolean) -> getNewWordPairLocal
    short getNewWordLocal(boolean) -> getNewWordLocal
    short getNewWordLocal() -> getNewWordLocal
    short getConsecutiveSlots(int,boolean) -> getConsecutiveSlots
    void incReferenceWordLocal(short) -> incReferenceWordLocal
    void decReferenceWordLocal(short) -> decReferenceWordLocal
    void releaseWordLocal(short) -> releaseWordLocal
    org.mozilla.javascript.Node access$000(org.mozilla.javascript.optimizer.BodyCodegen,org.mozilla.javascript.Node) -> access$000
    java.lang.String access$100(org.mozilla.javascript.optimizer.BodyCodegen,int) -> access$100
org.mozilla.javascript.optimizer.BodyCodegen$ExceptionManager -> org.mozilla.javascript.optimizer.BodyCodegen$ExceptionManager:
    java.util.LinkedList exceptionInfo -> exceptionInfo
    org.mozilla.javascript.optimizer.BodyCodegen this$0 -> this$0
    void pushExceptionInfo(org.mozilla.javascript.ast.Jump) -> pushExceptionInfo
    void addHandler(int,int,int) -> addHandler
    void setHandlers(int[],int) -> setHandlers
    int removeHandler(int,int) -> removeHandler
    void popExceptionInfo() -> popExceptionInfo
    void markInlineFinallyStart(org.mozilla.javascript.Node,int) -> markInlineFinallyStart
    void markInlineFinallyEnd(org.mozilla.javascript.Node,int) -> markInlineFinallyEnd
    void endCatch(org.mozilla.javascript.optimizer.BodyCodegen$ExceptionManager$ExceptionInfo,int,int) -> endCatch
    org.mozilla.javascript.optimizer.BodyCodegen$ExceptionManager$ExceptionInfo getTop() -> getTop
org.mozilla.javascript.optimizer.BodyCodegen$ExceptionManager$ExceptionInfo -> org.mozilla.javascript.optimizer.BodyCodegen$ExceptionManager$ExceptionInfo:
    org.mozilla.javascript.ast.Jump node -> node
    org.mozilla.javascript.Node finallyBlock -> finallyBlock
    int[] handlerLabels -> handlerLabels
    int[] exceptionStarts -> exceptionStarts
    org.mozilla.javascript.Node currentFinally -> currentFinally
    org.mozilla.javascript.optimizer.BodyCodegen$ExceptionManager this$1 -> this$1
org.mozilla.javascript.optimizer.BodyCodegen$FinallyReturnPoint -> org.mozilla.javascript.optimizer.BodyCodegen$FinallyReturnPoint:
    java.util.List jsrPoints -> jsrPoints
    int tableLabel -> tableLabel
org.mozilla.javascript.optimizer.ClassCompiler -> org.mozilla.javascript.optimizer.ClassCompiler:
    java.lang.String mainMethodClassName -> mainMethodClassName
    org.mozilla.javascript.CompilerEnvirons compilerEnv -> compilerEnv
    java.lang.Class targetExtends -> targetExtends
    java.lang.Class[] targetImplements -> targetImplements
    void setMainMethodClass(java.lang.String) -> setMainMethodClass
    java.lang.String getMainMethodClass() -> getMainMethodClass
    org.mozilla.javascript.CompilerEnvirons getCompilerEnv() -> getCompilerEnv
    java.lang.Class getTargetExtends() -> getTargetExtends
    void setTargetExtends(java.lang.Class) -> setTargetExtends
    java.lang.Class[] getTargetImplements() -> getTargetImplements
    void setTargetImplements(java.lang.Class[]) -> setTargetImplements
    java.lang.String makeAuxiliaryClassName(java.lang.String,java.lang.String) -> makeAuxiliaryClassName
    java.lang.Object[] compileToClassFiles(java.lang.String,java.lang.String,int,java.lang.String) -> compileToClassFiles
org.mozilla.javascript.optimizer.Codegen -> org.mozilla.javascript.optimizer.Codegen:
    java.lang.String DEFAULT_MAIN_METHOD_CLASS -> DEFAULT_MAIN_METHOD_CLASS
    java.lang.String SUPER_CLASS_NAME -> SUPER_CLASS_NAME
    java.lang.String ID_FIELD_NAME -> ID_FIELD_NAME
    java.lang.String REGEXP_INIT_METHOD_NAME -> REGEXP_INIT_METHOD_NAME
    java.lang.String REGEXP_INIT_METHOD_SIGNATURE -> REGEXP_INIT_METHOD_SIGNATURE
    java.lang.String FUNCTION_INIT_SIGNATURE -> FUNCTION_INIT_SIGNATURE
    java.lang.String FUNCTION_CONSTRUCTOR_SIGNATURE -> FUNCTION_CONSTRUCTOR_SIGNATURE
    java.lang.Object globalLock -> globalLock
    int globalSerialClassCounter -> globalSerialClassCounter
    org.mozilla.javascript.CompilerEnvirons compilerEnv -> compilerEnv
    org.mozilla.javascript.ObjArray directCallTargets -> directCallTargets
    org.mozilla.javascript.ast.ScriptNode[] scriptOrFnNodes -> scriptOrFnNodes
    org.mozilla.javascript.ObjToIntMap scriptOrFnIndexes -> scriptOrFnIndexes
    java.lang.String mainMethodClass -> mainMethodClass
    java.lang.String mainClassName -> mainClassName
    java.lang.String mainClassSignature -> mainClassSignature
    double[] itsConstantList -> itsConstantList
    int itsConstantListSize -> itsConstantListSize
    void captureStackInfo(org.mozilla.javascript.RhinoException) -> captureStackInfo
    java.lang.String getSourcePositionFromStack(org.mozilla.javascript.Context,int[]) -> getSourcePositionFromStack
    java.lang.String getPatchedStack(org.mozilla.javascript.RhinoException,java.lang.String) -> getPatchedStack
    java.util.List getScriptStack(org.mozilla.javascript.RhinoException) -> getScriptStack
    void setEvalScriptFlag(org.mozilla.javascript.Script) -> setEvalScriptFlag
    java.lang.Object compile(org.mozilla.javascript.CompilerEnvirons,org.mozilla.javascript.ast.ScriptNode,java.lang.String,boolean) -> compile
    org.mozilla.javascript.Script createScriptObject(java.lang.Object,java.lang.Object) -> createScriptObject
    org.mozilla.javascript.Function createFunctionObject(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object,java.lang.Object) -> createFunctionObject
    java.lang.Class defineClass(java.lang.Object,java.lang.Object) -> defineClass
    byte[] compileToClassFile(org.mozilla.javascript.CompilerEnvirons,java.lang.String,org.mozilla.javascript.ast.ScriptNode,java.lang.String,boolean) -> compileToClassFile
    java.lang.RuntimeException reportClassFileFormatException(org.mozilla.javascript.ast.ScriptNode,java.lang.String) -> reportClassFileFormatException
    void transform(org.mozilla.javascript.ast.ScriptNode) -> transform
    void initOptFunctions_r(org.mozilla.javascript.ast.ScriptNode) -> initOptFunctions_r
    void initScriptNodesData(org.mozilla.javascript.ast.ScriptNode) -> initScriptNodesData
    void collectScriptNodes_r(org.mozilla.javascript.ast.ScriptNode,org.mozilla.javascript.ObjArray) -> collectScriptNodes_r
    byte[] generateCode(java.lang.String) -> generateCode
    void emitDirectConstructor(org.mozilla.classfile.ClassFileWriter,org.mozilla.javascript.optimizer.OptFunctionNode) -> emitDirectConstructor
    boolean isGenerator(org.mozilla.javascript.ast.ScriptNode) -> isGenerator
    void generateResumeGenerator(org.mozilla.classfile.ClassFileWriter) -> generateResumeGenerator
    void generateCallMethod(org.mozilla.classfile.ClassFileWriter) -> generateCallMethod
    void generateMain(org.mozilla.classfile.ClassFileWriter) -> generateMain
    void generateExecute(org.mozilla.classfile.ClassFileWriter) -> generateExecute
    void generateScriptCtor(org.mozilla.classfile.ClassFileWriter) -> generateScriptCtor
    void generateFunctionConstructor(org.mozilla.classfile.ClassFileWriter) -> generateFunctionConstructor
    void generateFunctionInit(org.mozilla.classfile.ClassFileWriter,org.mozilla.javascript.optimizer.OptFunctionNode) -> generateFunctionInit
    void generateNativeFunctionOverrides(org.mozilla.classfile.ClassFileWriter,java.lang.String) -> generateNativeFunctionOverrides
    void emitRegExpInit(org.mozilla.classfile.ClassFileWriter) -> emitRegExpInit
    void emitConstantDudeInitializers(org.mozilla.classfile.ClassFileWriter) -> emitConstantDudeInitializers
    void pushNumberAsObject(org.mozilla.classfile.ClassFileWriter,double) -> pushNumberAsObject
    void addDoubleWrap(org.mozilla.classfile.ClassFileWriter) -> addDoubleWrap
    java.lang.String getStaticConstantWrapperType(double) -> getStaticConstantWrapperType
    void pushUndefined(org.mozilla.classfile.ClassFileWriter) -> pushUndefined
    int getIndex(org.mozilla.javascript.ast.ScriptNode) -> getIndex
    java.lang.String getDirectCtorName(org.mozilla.javascript.ast.ScriptNode) -> getDirectCtorName
    java.lang.String getBodyMethodName(org.mozilla.javascript.ast.ScriptNode) -> getBodyMethodName
    java.lang.String cleanName(org.mozilla.javascript.ast.ScriptNode) -> cleanName
    java.lang.String getBodyMethodSignature(org.mozilla.javascript.ast.ScriptNode) -> getBodyMethodSignature
    java.lang.String getFunctionInitMethodName(org.mozilla.javascript.optimizer.OptFunctionNode) -> getFunctionInitMethodName
    java.lang.String getCompiledRegexpName(org.mozilla.javascript.ast.ScriptNode,int) -> getCompiledRegexpName
    java.lang.RuntimeException badTree() -> badTree
    void setMainMethodClass(java.lang.String) -> setMainMethodClass
org.mozilla.javascript.optimizer.OptFunctionNode -> org.mozilla.javascript.optimizer.OptFunctionNode:
    org.mozilla.javascript.ast.FunctionNode fnode -> fnode
    boolean[] numberVarFlags -> numberVarFlags
    int directTargetIndex -> directTargetIndex
    boolean itsParameterNumberContext -> itsParameterNumberContext
    boolean itsContainsCalls0 -> itsContainsCalls0
    boolean itsContainsCalls1 -> itsContainsCalls1
    org.mozilla.javascript.optimizer.OptFunctionNode get(org.mozilla.javascript.ast.ScriptNode,int) -> get
    org.mozilla.javascript.optimizer.OptFunctionNode get(org.mozilla.javascript.ast.ScriptNode) -> get
    boolean isTargetOfDirectCall() -> isTargetOfDirectCall
    int getDirectTargetIndex() -> getDirectTargetIndex
    void setDirectTargetIndex(int) -> setDirectTargetIndex
    void setParameterNumberContext(boolean) -> setParameterNumberContext
    boolean getParameterNumberContext() -> getParameterNumberContext
    int getVarCount() -> getVarCount
    boolean isParameter(int) -> isParameter
    boolean isNumberVar(int) -> isNumberVar
    void setIsNumberVar(int) -> setIsNumberVar
    int getVarIndex(org.mozilla.javascript.Node) -> getVarIndex
org.mozilla.javascript.optimizer.OptRuntime -> org.mozilla.javascript.optimizer.OptRuntime:
    java.lang.Double zeroObj -> zeroObj
    java.lang.Double oneObj -> oneObj
    java.lang.Double minusOneObj -> minusOneObj
    java.lang.Object call0(org.mozilla.javascript.Callable,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable) -> call0
    java.lang.Object call1(org.mozilla.javascript.Callable,org.mozilla.javascript.Scriptable,java.lang.Object,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable) -> call1
    java.lang.Object call2(org.mozilla.javascript.Callable,org.mozilla.javascript.Scriptable,java.lang.Object,java.lang.Object,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable) -> call2
    java.lang.Object callN(org.mozilla.javascript.Callable,org.mozilla.javascript.Scriptable,java.lang.Object[],org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable) -> callN
    java.lang.Object callName(java.lang.Object[],java.lang.String,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable) -> callName
    java.lang.Object callName0(java.lang.String,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable) -> callName0
    java.lang.Object callProp0(java.lang.Object,java.lang.String,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable) -> callProp0
    java.lang.Object add(java.lang.Object,double) -> add
    java.lang.Object add(double,java.lang.Object) -> add
    java.lang.Object elemIncrDecr(java.lang.Object,double,org.mozilla.javascript.Context,int) -> elemIncrDecr
    java.lang.Object[] padStart(java.lang.Object[],int) -> padStart
    void initFunction(org.mozilla.javascript.NativeFunction,int,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Context) -> initFunction
    java.lang.Object callSpecial(org.mozilla.javascript.Context,org.mozilla.javascript.Callable,org.mozilla.javascript.Scriptable,java.lang.Object[],org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,int,java.lang.String,int) -> callSpecial
    java.lang.Object newObjectSpecial(org.mozilla.javascript.Context,java.lang.Object,java.lang.Object[],org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,int) -> newObjectSpecial
    java.lang.Double wrapDouble(double) -> wrapDouble
    java.lang.String encodeIntArray(int[]) -> encodeIntArray
    int[] decodeIntArray(java.lang.String,int) -> decodeIntArray
    org.mozilla.javascript.Scriptable newArrayLiteral(java.lang.Object[],java.lang.String,int,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable) -> newArrayLiteral
    void main(org.mozilla.javascript.Script,java.lang.String[]) -> main
    void throwStopIteration(java.lang.Object) -> throwStopIteration
    org.mozilla.javascript.Scriptable createNativeGenerator(org.mozilla.javascript.NativeFunction,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,int,int) -> createNativeGenerator
    java.lang.Object[] getGeneratorStackState(java.lang.Object) -> getGeneratorStackState
    java.lang.Object[] getGeneratorLocalsState(java.lang.Object) -> getGeneratorLocalsState
org.mozilla.javascript.optimizer.OptRuntime$1 -> org.mozilla.javascript.optimizer.OptRuntime$1:
    java.lang.String[] val$args -> val$args
    org.mozilla.javascript.Script val$script -> val$script
    java.lang.Object run(org.mozilla.javascript.Context) -> run
org.mozilla.javascript.optimizer.OptRuntime$GeneratorState -> org.mozilla.javascript.optimizer.OptRuntime$GeneratorState:
    java.lang.String CLASS_NAME -> CLASS_NAME
    int resumptionPoint -> resumptionPoint
    java.lang.String resumptionPoint_NAME -> resumptionPoint_NAME
    java.lang.String resumptionPoint_TYPE -> resumptionPoint_TYPE
    org.mozilla.javascript.Scriptable thisObj -> thisObj
    java.lang.String thisObj_NAME -> thisObj_NAME
    java.lang.String thisObj_TYPE -> thisObj_TYPE
    java.lang.Object[] stackState -> stackState
    java.lang.Object[] localsState -> localsState
    int maxLocals -> maxLocals
    int maxStack -> maxStack
org.mozilla.javascript.optimizer.OptTransformer -> org.mozilla.javascript.optimizer.OptTransformer:
    java.util.Map possibleDirectCalls -> possibleDirectCalls
    org.mozilla.javascript.ObjArray directCallTargets -> directCallTargets
    void visitNew(org.mozilla.javascript.Node,org.mozilla.javascript.ast.ScriptNode) -> visitNew
    void visitCall(org.mozilla.javascript.Node,org.mozilla.javascript.ast.ScriptNode) -> visitCall
    void detectDirectCall(org.mozilla.javascript.Node,org.mozilla.javascript.ast.ScriptNode) -> detectDirectCall
org.mozilla.javascript.optimizer.Optimizer -> org.mozilla.javascript.optimizer.Optimizer:
    int NoType -> NoType
    int NumberType -> NumberType
    int AnyType -> AnyType
    boolean inDirectCallFunction -> inDirectCallFunction
    org.mozilla.javascript.optimizer.OptFunctionNode theFunction -> theFunction
    boolean parameterUsedInNumberContext -> parameterUsedInNumberContext
    void optimize(org.mozilla.javascript.ast.ScriptNode) -> optimize
    void optimizeFunction(org.mozilla.javascript.optimizer.OptFunctionNode) -> optimizeFunction
    void markDCPNumberContext(org.mozilla.javascript.Node) -> markDCPNumberContext
    boolean convertParameter(org.mozilla.javascript.Node) -> convertParameter
    int rewriteForNumberVariables(org.mozilla.javascript.Node,int) -> rewriteForNumberVariables
    void rewriteAsObjectChildren(org.mozilla.javascript.Node,org.mozilla.javascript.Node) -> rewriteAsObjectChildren
    void buildStatementList_r(org.mozilla.javascript.Node,org.mozilla.javascript.ObjArray) -> buildStatementList_r
org.mozilla.javascript.regexp.CompilerState -> org.mozilla.javascript.regexp.CompilerState:
    org.mozilla.javascript.Context cx -> cx
    char[] cpbegin -> cpbegin
    int cpend -> cpend
    int cp -> cp
    int flags -> flags
    int parenCount -> parenCount
    int parenNesting -> parenNesting
    int classCount -> classCount
    int progLength -> progLength
    org.mozilla.javascript.regexp.RENode result -> result
org.mozilla.javascript.regexp.GlobData -> org.mozilla.javascript.regexp.GlobData:
    int mode -> mode
    int optarg -> optarg
    boolean global -> global
    java.lang.String str -> str
    org.mozilla.javascript.Scriptable arrayobj -> arrayobj
    org.mozilla.javascript.Function lambda -> lambda
    java.lang.String repstr -> repstr
    int dollar -> dollar
    java.lang.StringBuilder charBuf -> charBuf
    int leftIndex -> leftIndex
org.mozilla.javascript.regexp.NativeRegExp -> org.mozilla.javascript.regexp.NativeRegExp:
    long serialVersionUID -> serialVersionUID
    java.lang.Object REGEXP_TAG -> REGEXP_TAG
    int JSREG_GLOB -> JSREG_GLOB
    int JSREG_FOLD -> JSREG_FOLD
    int JSREG_MULTILINE -> JSREG_MULTILINE
    int TEST -> TEST
    int MATCH -> MATCH
    int PREFIX -> PREFIX
    boolean debug -> debug
    byte REOP_SIMPLE_START -> REOP_SIMPLE_START
    byte REOP_EMPTY -> REOP_EMPTY
    byte REOP_BOL -> REOP_BOL
    byte REOP_EOL -> REOP_EOL
    byte REOP_WBDRY -> REOP_WBDRY
    byte REOP_WNONBDRY -> REOP_WNONBDRY
    byte REOP_DOT -> REOP_DOT
    byte REOP_DIGIT -> REOP_DIGIT
    byte REOP_NONDIGIT -> REOP_NONDIGIT
    byte REOP_ALNUM -> REOP_ALNUM
    byte REOP_NONALNUM -> REOP_NONALNUM
    byte REOP_SPACE -> REOP_SPACE
    byte REOP_NONSPACE -> REOP_NONSPACE
    byte REOP_BACKREF -> REOP_BACKREF
    byte REOP_FLAT -> REOP_FLAT
    byte REOP_FLAT1 -> REOP_FLAT1
    byte REOP_FLATi -> REOP_FLATi
    byte REOP_FLAT1i -> REOP_FLAT1i
    byte REOP_UCFLAT1 -> REOP_UCFLAT1
    byte REOP_UCFLAT1i -> REOP_UCFLAT1i
    byte REOP_CLASS -> REOP_CLASS
    byte REOP_NCLASS -> REOP_NCLASS
    byte REOP_SIMPLE_END -> REOP_SIMPLE_END
    byte REOP_QUANT -> REOP_QUANT
    byte REOP_STAR -> REOP_STAR
    byte REOP_PLUS -> REOP_PLUS
    byte REOP_OPT -> REOP_OPT
    byte REOP_LPAREN -> REOP_LPAREN
    byte REOP_RPAREN -> REOP_RPAREN
    byte REOP_ALT -> REOP_ALT
    byte REOP_JUMP -> REOP_JUMP
    byte REOP_ASSERT -> REOP_ASSERT
    byte REOP_ASSERT_NOT -> REOP_ASSERT_NOT
    byte REOP_ASSERTTEST -> REOP_ASSERTTEST
    byte REOP_ASSERTNOTTEST -> REOP_ASSERTNOTTEST
    byte REOP_MINIMALSTAR -> REOP_MINIMALSTAR
    byte REOP_MINIMALPLUS -> REOP_MINIMALPLUS
    byte REOP_MINIMALOPT -> REOP_MINIMALOPT
    byte REOP_MINIMALQUANT -> REOP_MINIMALQUANT
    byte REOP_ENDCHILD -> REOP_ENDCHILD
    byte REOP_REPEAT -> REOP_REPEAT
    byte REOP_MINIMALREPEAT -> REOP_MINIMALREPEAT
    byte REOP_ALTPREREQ -> REOP_ALTPREREQ
    byte REOP_ALTPREREQi -> REOP_ALTPREREQi
    byte REOP_ALTPREREQ2 -> REOP_ALTPREREQ2
    byte REOP_END -> REOP_END
    int ANCHOR_BOL -> ANCHOR_BOL
    int INDEX_LEN -> INDEX_LEN
    int Id_lastIndex -> Id_lastIndex
    int Id_source -> Id_source
    int Id_global -> Id_global
    int Id_ignoreCase -> Id_ignoreCase
    int Id_multiline -> Id_multiline
    int MAX_INSTANCE_ID -> MAX_INSTANCE_ID
    int Id_compile -> Id_compile
    int Id_toString -> Id_toString
    int Id_toSource -> Id_toSource
    int Id_exec -> Id_exec
    int Id_test -> Id_test
    int Id_prefix -> Id_prefix
    int MAX_PROTOTYPE_ID -> MAX_PROTOTYPE_ID
    org.mozilla.javascript.regexp.RECompiled re -> re
    double lastIndex -> lastIndex
    boolean $assertionsDisabled -> $assertionsDisabled
    void init(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,boolean) -> init
    java.lang.String getClassName() -> getClassName
    java.lang.String getTypeOf() -> getTypeOf
    java.lang.Object call(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> call
    org.mozilla.javascript.Scriptable construct(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> construct
    org.mozilla.javascript.Scriptable compile(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> compile
    java.lang.String toString() -> toString
    org.mozilla.javascript.regexp.RegExpImpl getImpl(org.mozilla.javascript.Context) -> getImpl
    java.lang.String escapeRegExp(java.lang.Object) -> escapeRegExp
    java.lang.Object execSub(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object[],int) -> execSub
    org.mozilla.javascript.regexp.RECompiled compileRE(org.mozilla.javascript.Context,java.lang.String,java.lang.String,boolean) -> compileRE
    boolean isDigit(char) -> isDigit
    boolean isWord(char) -> isWord
    boolean isControlLetter(char) -> isControlLetter
    boolean isLineTerm(char) -> isLineTerm
    boolean isREWhiteSpace(int) -> isREWhiteSpace
    char upcase(char) -> upcase
    char downcase(char) -> downcase
    int toASCIIHexDigit(int) -> toASCIIHexDigit
    boolean parseDisjunction(org.mozilla.javascript.regexp.CompilerState) -> parseDisjunction
    boolean parseAlternative(org.mozilla.javascript.regexp.CompilerState) -> parseAlternative
    boolean calculateBitmapSize(org.mozilla.javascript.regexp.CompilerState,org.mozilla.javascript.regexp.RENode,char[],int,int) -> calculateBitmapSize
    void doFlat(org.mozilla.javascript.regexp.CompilerState,char) -> doFlat
    int getDecimalValue(char,org.mozilla.javascript.regexp.CompilerState,int,java.lang.String) -> getDecimalValue
    boolean parseTerm(org.mozilla.javascript.regexp.CompilerState) -> parseTerm
    void resolveForwardJump(byte[],int,int) -> resolveForwardJump
    int getOffset(byte[],int) -> getOffset
    int addIndex(byte[],int,int) -> addIndex
    int getIndex(byte[],int) -> getIndex
    int emitREBytecode(org.mozilla.javascript.regexp.CompilerState,org.mozilla.javascript.regexp.RECompiled,int,org.mozilla.javascript.regexp.RENode) -> emitREBytecode
    void pushProgState(org.mozilla.javascript.regexp.REGlobalData,int,int,int,org.mozilla.javascript.regexp.REBackTrackData,int,int) -> pushProgState
    org.mozilla.javascript.regexp.REProgState popProgState(org.mozilla.javascript.regexp.REGlobalData) -> popProgState
    void pushBackTrackState(org.mozilla.javascript.regexp.REGlobalData,byte,int) -> pushBackTrackState
    void pushBackTrackState(org.mozilla.javascript.regexp.REGlobalData,byte,int,int,int,int) -> pushBackTrackState
    boolean flatNMatcher(org.mozilla.javascript.regexp.REGlobalData,int,int,java.lang.String,int) -> flatNMatcher
    boolean flatNIMatcher(org.mozilla.javascript.regexp.REGlobalData,int,int,java.lang.String,int) -> flatNIMatcher
    boolean backrefMatcher(org.mozilla.javascript.regexp.REGlobalData,int,java.lang.String,int) -> backrefMatcher
    void addCharacterToCharSet(org.mozilla.javascript.regexp.RECharSet,char) -> addCharacterToCharSet
    void addCharacterRangeToCharSet(org.mozilla.javascript.regexp.RECharSet,char,char) -> addCharacterRangeToCharSet
    void processCharSet(org.mozilla.javascript.regexp.REGlobalData,org.mozilla.javascript.regexp.RECharSet) -> processCharSet
    void processCharSetImpl(org.mozilla.javascript.regexp.REGlobalData,org.mozilla.javascript.regexp.RECharSet) -> processCharSetImpl
    boolean classMatcher(org.mozilla.javascript.regexp.REGlobalData,org.mozilla.javascript.regexp.RECharSet,char) -> classMatcher
    boolean reopIsSimple(int) -> reopIsSimple
    int simpleMatch(org.mozilla.javascript.regexp.REGlobalData,java.lang.String,int,byte[],int,int,boolean) -> simpleMatch
    boolean executeREBytecode(org.mozilla.javascript.regexp.REGlobalData,java.lang.String,int) -> executeREBytecode
    boolean matchRegExp(org.mozilla.javascript.regexp.REGlobalData,org.mozilla.javascript.regexp.RECompiled,java.lang.String,int,int,boolean) -> matchRegExp
    java.lang.Object executeRegExp(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.regexp.RegExpImpl,java.lang.String,int[],int) -> executeRegExp
    int getFlags() -> getFlags
    void reportWarning(org.mozilla.javascript.Context,java.lang.String,java.lang.String) -> reportWarning
    void reportError(java.lang.String,java.lang.String) -> reportError
    int getMaxInstanceId() -> getMaxInstanceId
    int findInstanceIdInfo(java.lang.String) -> findInstanceIdInfo
    java.lang.String getInstanceIdName(int) -> getInstanceIdName
    java.lang.Object getInstanceIdValue(int) -> getInstanceIdValue
    void setInstanceIdValue(int,java.lang.Object) -> setInstanceIdValue
    void initPrototypeId(int) -> initPrototypeId
    java.lang.Object execIdCall(org.mozilla.javascript.IdFunctionObject,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> execIdCall
    org.mozilla.javascript.regexp.NativeRegExp realThis(org.mozilla.javascript.Scriptable,org.mozilla.javascript.IdFunctionObject) -> realThis
    int findPrototypeId(java.lang.String) -> findPrototypeId
org.mozilla.javascript.regexp.NativeRegExpCtor -> org.mozilla.javascript.regexp.NativeRegExpCtor:
    long serialVersionUID -> serialVersionUID
    int Id_multiline -> Id_multiline
    int Id_STAR -> Id_STAR
    int Id_input -> Id_input
    int Id_UNDERSCORE -> Id_UNDERSCORE
    int Id_lastMatch -> Id_lastMatch
    int Id_AMPERSAND -> Id_AMPERSAND
    int Id_lastParen -> Id_lastParen
    int Id_PLUS -> Id_PLUS
    int Id_leftContext -> Id_leftContext
    int Id_BACK_QUOTE -> Id_BACK_QUOTE
    int Id_rightContext -> Id_rightContext
    int Id_QUOTE -> Id_QUOTE
    int DOLLAR_ID_BASE -> DOLLAR_ID_BASE
    int Id_DOLLAR_1 -> Id_DOLLAR_1
    int Id_DOLLAR_2 -> Id_DOLLAR_2
    int Id_DOLLAR_3 -> Id_DOLLAR_3
    int Id_DOLLAR_4 -> Id_DOLLAR_4
    int Id_DOLLAR_5 -> Id_DOLLAR_5
    int Id_DOLLAR_6 -> Id_DOLLAR_6
    int Id_DOLLAR_7 -> Id_DOLLAR_7
    int Id_DOLLAR_8 -> Id_DOLLAR_8
    int Id_DOLLAR_9 -> Id_DOLLAR_9
    int MAX_INSTANCE_ID -> MAX_INSTANCE_ID
    java.lang.String getFunctionName() -> getFunctionName
    java.lang.Object call(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> call
    org.mozilla.javascript.Scriptable construct(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> construct
    org.mozilla.javascript.regexp.RegExpImpl getImpl() -> getImpl
    int getMaxInstanceId() -> getMaxInstanceId
    int findInstanceIdInfo(java.lang.String) -> findInstanceIdInfo
    java.lang.String getInstanceIdName(int) -> getInstanceIdName
    java.lang.Object getInstanceIdValue(int) -> getInstanceIdValue
    void setInstanceIdValue(int,java.lang.Object) -> setInstanceIdValue
org.mozilla.javascript.regexp.REBackTrackData -> org.mozilla.javascript.regexp.REBackTrackData:
    org.mozilla.javascript.regexp.REBackTrackData previous -> previous
    int op -> op
    int pc -> pc
    int cp -> cp
    int continuationOp -> continuationOp
    int continuationPc -> continuationPc
    long[] parens -> parens
    org.mozilla.javascript.regexp.REProgState stateStackTop -> stateStackTop
org.mozilla.javascript.regexp.RECharSet -> org.mozilla.javascript.regexp.RECharSet:
    long serialVersionUID -> serialVersionUID
    int length -> length
    int startIndex -> startIndex
    int strlength -> strlength
    boolean sense -> sense
    boolean converted -> converted
    byte[] bits -> bits
org.mozilla.javascript.regexp.RECompiled -> org.mozilla.javascript.regexp.RECompiled:
    long serialVersionUID -> serialVersionUID
    char[] source -> source
    int parenCount -> parenCount
    int flags -> flags
    byte[] program -> program
    int classCount -> classCount
    org.mozilla.javascript.regexp.RECharSet[] classList -> classList
    int anchorCh -> anchorCh
org.mozilla.javascript.regexp.REGlobalData -> org.mozilla.javascript.regexp.REGlobalData:
    boolean multiline -> multiline
    org.mozilla.javascript.regexp.RECompiled regexp -> regexp
    int skipped -> skipped
    int cp -> cp
    long[] parens -> parens
    org.mozilla.javascript.regexp.REProgState stateStackTop -> stateStackTop
    org.mozilla.javascript.regexp.REBackTrackData backTrackStackTop -> backTrackStackTop
    int parensIndex(int) -> parensIndex
    int parensLength(int) -> parensLength
    void setParens(int,int,int) -> setParens
org.mozilla.javascript.regexp.RENode -> org.mozilla.javascript.regexp.RENode:
    byte op -> op
    org.mozilla.javascript.regexp.RENode next -> next
    org.mozilla.javascript.regexp.RENode kid -> kid
    org.mozilla.javascript.regexp.RENode kid2 -> kid2
    int parenIndex -> parenIndex
    int min -> min
    int max -> max
    int parenCount -> parenCount
    boolean greedy -> greedy
    int startIndex -> startIndex
    int kidlen -> kidlen
    int bmsize -> bmsize
    int index -> index
    boolean sense -> sense
    char chr -> chr
    int length -> length
    int flatIndex -> flatIndex
org.mozilla.javascript.regexp.REProgState -> org.mozilla.javascript.regexp.REProgState:
    org.mozilla.javascript.regexp.REProgState previous -> previous
    int min -> min
    int max -> max
    int index -> index
    int continuationOp -> continuationOp
    int continuationPc -> continuationPc
    org.mozilla.javascript.regexp.REBackTrackData backTrack -> backTrack
org.mozilla.javascript.regexp.RegExpImpl -> org.mozilla.javascript.regexp.RegExpImpl:
    java.lang.String input -> input
    boolean multiline -> multiline
    org.mozilla.javascript.regexp.SubString[] parens -> parens
    org.mozilla.javascript.regexp.SubString lastMatch -> lastMatch
    org.mozilla.javascript.regexp.SubString lastParen -> lastParen
    org.mozilla.javascript.regexp.SubString leftContext -> leftContext
    org.mozilla.javascript.regexp.SubString rightContext -> rightContext
    boolean isRegExp(org.mozilla.javascript.Scriptable) -> isRegExp
    java.lang.Object compileRegExp(org.mozilla.javascript.Context,java.lang.String,java.lang.String) -> compileRegExp
    org.mozilla.javascript.Scriptable wrapRegExp(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object) -> wrapRegExp
    java.lang.Object action(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[],int) -> action
    java.lang.Object matchOrReplace(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[],org.mozilla.javascript.regexp.RegExpImpl,org.mozilla.javascript.regexp.GlobData,boolean) -> matchOrReplace
    int find_split(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.String,java.lang.String,org.mozilla.javascript.Scriptable,int[],int[],boolean[],java.lang.String[][]) -> find_split
    org.mozilla.javascript.regexp.SubString getParenSubString(int) -> getParenSubString
    void match_glob(org.mozilla.javascript.regexp.GlobData,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,int,org.mozilla.javascript.regexp.RegExpImpl) -> match_glob
    void replace_glob(org.mozilla.javascript.regexp.GlobData,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.regexp.RegExpImpl,int,int) -> replace_glob
    org.mozilla.javascript.regexp.SubString interpretDollar(org.mozilla.javascript.Context,org.mozilla.javascript.regexp.RegExpImpl,java.lang.String,int,int[]) -> interpretDollar
    void do_replace(org.mozilla.javascript.regexp.GlobData,org.mozilla.javascript.Context,org.mozilla.javascript.regexp.RegExpImpl) -> do_replace
    java.lang.Object js_split(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.String,java.lang.Object[]) -> js_split
    int find_split(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.String,java.lang.String,int,org.mozilla.javascript.RegExpProxy,org.mozilla.javascript.Scriptable,int[],int[],boolean[],java.lang.String[][]) -> find_split
org.mozilla.javascript.regexp.SubString -> org.mozilla.javascript.regexp.SubString:
    org.mozilla.javascript.regexp.SubString emptySubString -> emptySubString
    java.lang.String str -> str
    int index -> index
    int length -> length
    java.lang.String toString() -> toString
org.mozilla.javascript.serialize.ScriptableInputStream -> org.mozilla.javascript.serialize.ScriptableInputStream:
    org.mozilla.javascript.Scriptable scope -> scope
    java.lang.ClassLoader classLoader -> classLoader
    java.lang.Class resolveClass(java.io.ObjectStreamClass) -> resolveClass
    java.lang.Object resolveObject(java.lang.Object) -> resolveObject
org.mozilla.javascript.serialize.ScriptableOutputStream -> org.mozilla.javascript.serialize.ScriptableOutputStream:
    org.mozilla.javascript.Scriptable scope -> scope
    java.util.Map table -> table
    void excludeAllIds(java.lang.Object[]) -> excludeAllIds
    void addOptionalExcludedName(java.lang.String) -> addOptionalExcludedName
    void addExcludedName(java.lang.String) -> addExcludedName
    boolean hasExcludedName(java.lang.String) -> hasExcludedName
    void removeExcludedName(java.lang.String) -> removeExcludedName
    void excludeStandardObjectNames() -> excludeStandardObjectNames
    java.lang.Object lookupQualifiedName(org.mozilla.javascript.Scriptable,java.lang.String) -> lookupQualifiedName
    java.lang.Object replaceObject(java.lang.Object) -> replaceObject
org.mozilla.javascript.serialize.ScriptableOutputStream$PendingLookup -> org.mozilla.javascript.serialize.ScriptableOutputStream$PendingLookup:
    long serialVersionUID -> serialVersionUID
    java.lang.String name -> name
    java.lang.String getName() -> getName
org.mozilla.javascript.tools.SourceReader -> org.mozilla.javascript.tools.SourceReader:
    java.net.URL toUrl(java.lang.String) -> toUrl
    java.lang.Object readFileOrUrl(java.lang.String,boolean,java.lang.String) -> readFileOrUrl
org.mozilla.javascript.tools.ToolErrorReporter -> org.mozilla.javascript.tools.ToolErrorReporter:
    java.lang.String messagePrefix -> messagePrefix
    boolean hasReportedErrorFlag -> hasReportedErrorFlag
    boolean reportWarnings -> reportWarnings
    java.io.PrintStream err -> err
    java.lang.String getMessage(java.lang.String) -> getMessage
    java.lang.String getMessage(java.lang.String,java.lang.String) -> getMessage
    java.lang.String getMessage(java.lang.String,java.lang.Object,java.lang.Object) -> getMessage
    java.lang.String getMessage(java.lang.String,java.lang.Object[]) -> getMessage
    java.lang.String getExceptionMessage(org.mozilla.javascript.RhinoException) -> getExceptionMessage
    void warning(java.lang.String,java.lang.String,int,java.lang.String,int) -> warning
    void error(java.lang.String,java.lang.String,int,java.lang.String,int) -> error
    org.mozilla.javascript.EvaluatorException runtimeError(java.lang.String,java.lang.String,int,java.lang.String,int) -> runtimeError
    boolean hasReportedError() -> hasReportedError
    boolean isReportingWarnings() -> isReportingWarnings
    void setIsReportingWarnings(boolean) -> setIsReportingWarnings
    void reportException(org.mozilla.javascript.ErrorReporter,org.mozilla.javascript.RhinoException) -> reportException
    void reportException(org.mozilla.javascript.RhinoException) -> reportException
    void reportErrorMessage(java.lang.String,java.lang.String,int,java.lang.String,int,boolean) -> reportErrorMessage
    java.lang.String buildIndicator(int) -> buildIndicator
org.mozilla.javascript.tools.debugger.ContextWindow -> org.mozilla.javascript.tools.debugger.ContextWindow:
    long serialVersionUID -> serialVersionUID
    org.mozilla.javascript.tools.debugger.SwingGui debugGui -> debugGui
    javax.swing.JComboBox context -> context
    java.util.List toolTips -> toolTips
    javax.swing.JTabbedPane tabs -> tabs
    javax.swing.JTabbedPane tabs2 -> tabs2
    org.mozilla.javascript.tools.debugger.MyTreeTable thisTable -> thisTable
    org.mozilla.javascript.tools.debugger.MyTreeTable localsTable -> localsTable
    org.mozilla.javascript.tools.debugger.MyTableModel tableModel -> tableModel
    org.mozilla.javascript.tools.debugger.Evaluator evaluator -> evaluator
    org.mozilla.javascript.tools.debugger.EvalTextArea cmdLine -> cmdLine
    javax.swing.JSplitPane split -> split
    boolean enabled -> enabled
    void setEnabled(boolean) -> setEnabled
    void disableUpdate() -> disableUpdate
    void enableUpdate() -> enableUpdate
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
org.mozilla.javascript.tools.debugger.ContextWindow$1 -> org.mozilla.javascript.tools.debugger.ContextWindow$1:
    boolean t2Docked -> t2Docked
    javax.swing.JPanel val$finalThis -> val$finalThis
    javax.swing.JToolBar val$finalT1 -> val$finalT1
    javax.swing.JPanel val$finalP1 -> val$finalP1
    org.mozilla.javascript.tools.debugger.SwingGui val$debugGui -> val$debugGui
    javax.swing.JToolBar val$finalT2 -> val$finalT2
    javax.swing.JPanel val$finalP2 -> val$finalP2
    javax.swing.JSplitPane val$finalSplit -> val$finalSplit
    org.mozilla.javascript.tools.debugger.ContextWindow this$0 -> this$0
    void check(java.awt.Component) -> check
    void componentHidden(java.awt.event.ComponentEvent) -> componentHidden
    void componentMoved(java.awt.event.ComponentEvent) -> componentMoved
    void componentResized(java.awt.event.ComponentEvent) -> componentResized
    void componentShown(java.awt.event.ComponentEvent) -> componentShown
org.mozilla.javascript.tools.debugger.ContextWindow$1$1 -> org.mozilla.javascript.tools.debugger.ContextWindow$1$1:
    java.util.EventListener[] val$l -> val$l
    org.mozilla.javascript.tools.debugger.ContextWindow$1 this$1 -> this$1
    void windowClosing(java.awt.event.WindowEvent) -> windowClosing
org.mozilla.javascript.tools.debugger.ContextWindow$2 -> org.mozilla.javascript.tools.debugger.ContextWindow$2:
    javax.swing.JPanel val$finalThis -> val$finalThis
    javax.swing.JToolBar val$finalT1 -> val$finalT1
    javax.swing.JToolBar val$finalT2 -> val$finalT2
    javax.swing.JPanel val$finalP2 -> val$finalP2
    javax.swing.JSplitPane val$finalSplit -> val$finalSplit
    org.mozilla.javascript.tools.debugger.ContextWindow this$0 -> this$0
    void componentAdded(java.awt.event.ContainerEvent) -> componentAdded
    void componentRemoved(java.awt.event.ContainerEvent) -> componentRemoved
org.mozilla.javascript.tools.debugger.Dim -> org.mozilla.javascript.tools.debugger.Dim:
    int STEP_OVER -> STEP_OVER
    int STEP_INTO -> STEP_INTO
    int STEP_OUT -> STEP_OUT
    int GO -> GO
    int BREAK -> BREAK
    int EXIT -> EXIT
    int IPROXY_DEBUG -> IPROXY_DEBUG
    int IPROXY_LISTEN -> IPROXY_LISTEN
    int IPROXY_COMPILE_SCRIPT -> IPROXY_COMPILE_SCRIPT
    int IPROXY_EVAL_SCRIPT -> IPROXY_EVAL_SCRIPT
    int IPROXY_STRING_IS_COMPILABLE -> IPROXY_STRING_IS_COMPILABLE
    int IPROXY_OBJECT_TO_STRING -> IPROXY_OBJECT_TO_STRING
    int IPROXY_OBJECT_PROPERTY -> IPROXY_OBJECT_PROPERTY
    int IPROXY_OBJECT_IDS -> IPROXY_OBJECT_IDS
    org.mozilla.javascript.tools.debugger.GuiCallback callback -> callback
    boolean breakFlag -> breakFlag
    org.mozilla.javascript.tools.debugger.ScopeProvider scopeProvider -> scopeProvider
    org.mozilla.javascript.tools.debugger.SourceProvider sourceProvider -> sourceProvider
    int frameIndex -> frameIndex
    org.mozilla.javascript.tools.debugger.Dim$ContextData interruptedContextData -> interruptedContextData
    org.mozilla.javascript.ContextFactory contextFactory -> contextFactory
    java.lang.Object monitor -> monitor
    java.lang.Object eventThreadMonitor -> eventThreadMonitor
    int returnValue -> returnValue
    boolean insideInterruptLoop -> insideInterruptLoop
    java.lang.String evalRequest -> evalRequest
    org.mozilla.javascript.tools.debugger.Dim$StackFrame evalFrame -> evalFrame
    java.lang.String evalResult -> evalResult
    boolean breakOnExceptions -> breakOnExceptions
    boolean breakOnEnter -> breakOnEnter
    boolean breakOnReturn -> breakOnReturn
    java.util.Map urlToSourceInfo -> urlToSourceInfo
    java.util.Map functionNames -> functionNames
    java.util.Map functionToSource -> functionToSource
    org.mozilla.javascript.tools.debugger.Dim$DimIProxy listener -> listener
    void setGuiCallback(org.mozilla.javascript.tools.debugger.GuiCallback) -> setGuiCallback
    void setBreak() -> setBreak
    void setScopeProvider(org.mozilla.javascript.tools.debugger.ScopeProvider) -> setScopeProvider
    void setSourceProvider(org.mozilla.javascript.tools.debugger.SourceProvider) -> setSourceProvider
    void contextSwitch(int) -> contextSwitch
    void setBreakOnExceptions(boolean) -> setBreakOnExceptions
    void setBreakOnEnter(boolean) -> setBreakOnEnter
    void setBreakOnReturn(boolean) -> setBreakOnReturn
    void attachTo(org.mozilla.javascript.ContextFactory) -> attachTo
    void detach() -> detach
    void dispose() -> dispose
    org.mozilla.javascript.tools.debugger.Dim$FunctionSource getFunctionSource(org.mozilla.javascript.debug.DebuggableScript) -> getFunctionSource
    java.lang.String loadSource(java.lang.String) -> loadSource
    void registerTopScript(org.mozilla.javascript.debug.DebuggableScript,java.lang.String) -> registerTopScript
    org.mozilla.javascript.tools.debugger.Dim$FunctionSource functionSource(org.mozilla.javascript.debug.DebuggableScript) -> functionSource
    java.lang.String[] functionNames() -> functionNames
    org.mozilla.javascript.tools.debugger.Dim$FunctionSource functionSourceByName(java.lang.String) -> functionSourceByName
    org.mozilla.javascript.tools.debugger.Dim$SourceInfo sourceInfo(java.lang.String) -> sourceInfo
    java.lang.String getNormalizedUrl(org.mozilla.javascript.debug.DebuggableScript) -> getNormalizedUrl
    org.mozilla.javascript.debug.DebuggableScript[] getAllFunctions(org.mozilla.javascript.debug.DebuggableScript) -> getAllFunctions
    void collectFunctions_r(org.mozilla.javascript.debug.DebuggableScript,org.mozilla.javascript.ObjArray) -> collectFunctions_r
    void clearAllBreakpoints() -> clearAllBreakpoints
    void handleBreakpointHit(org.mozilla.javascript.tools.debugger.Dim$StackFrame,org.mozilla.javascript.Context) -> handleBreakpointHit
    void handleExceptionThrown(org.mozilla.javascript.Context,java.lang.Throwable,org.mozilla.javascript.tools.debugger.Dim$StackFrame) -> handleExceptionThrown
    org.mozilla.javascript.tools.debugger.Dim$ContextData currentContextData() -> currentContextData
    void setReturnValue(int) -> setReturnValue
    void go() -> go
    java.lang.String eval(java.lang.String) -> eval
    void compileScript(java.lang.String,java.lang.String) -> compileScript
    void evalScript(java.lang.String,java.lang.String) -> evalScript
    java.lang.String objectToString(java.lang.Object) -> objectToString
    boolean stringIsCompilableUnit(java.lang.String) -> stringIsCompilableUnit
    java.lang.Object getObjectProperty(java.lang.Object,java.lang.Object) -> getObjectProperty
    java.lang.Object[] getObjectIds(java.lang.Object) -> getObjectIds
    java.lang.Object getObjectPropertyImpl(org.mozilla.javascript.Context,java.lang.Object,java.lang.Object) -> getObjectPropertyImpl
    java.lang.Object[] getObjectIdsImpl(org.mozilla.javascript.Context,java.lang.Object) -> getObjectIdsImpl
    void interrupted(org.mozilla.javascript.Context,org.mozilla.javascript.tools.debugger.Dim$StackFrame,java.lang.Throwable) -> interrupted
    java.lang.String do_eval(org.mozilla.javascript.Context,org.mozilla.javascript.tools.debugger.Dim$StackFrame,java.lang.String) -> do_eval
    org.mozilla.javascript.tools.debugger.ScopeProvider access$1800(org.mozilla.javascript.tools.debugger.Dim) -> access$1800
    java.lang.Object access$1900(org.mozilla.javascript.tools.debugger.Dim,org.mozilla.javascript.Context,java.lang.Object,java.lang.Object) -> access$1900
    java.lang.Object[] access$2000(org.mozilla.javascript.tools.debugger.Dim,org.mozilla.javascript.Context,java.lang.Object) -> access$2000
    org.mozilla.javascript.ContextFactory access$2100(org.mozilla.javascript.tools.debugger.Dim) -> access$2100
    org.mozilla.javascript.tools.debugger.Dim$FunctionSource access$2200(org.mozilla.javascript.tools.debugger.Dim,org.mozilla.javascript.debug.DebuggableScript) -> access$2200
    void access$2400(org.mozilla.javascript.tools.debugger.Dim,org.mozilla.javascript.debug.DebuggableScript,java.lang.String) -> access$2400
    boolean access$2700(org.mozilla.javascript.tools.debugger.Dim) -> access$2700
    void access$2800(org.mozilla.javascript.tools.debugger.Dim,org.mozilla.javascript.tools.debugger.Dim$StackFrame,org.mozilla.javascript.Context) -> access$2800
    boolean access$2900(org.mozilla.javascript.tools.debugger.Dim) -> access$2900
    void access$3000(org.mozilla.javascript.tools.debugger.Dim,org.mozilla.javascript.Context,java.lang.Throwable,org.mozilla.javascript.tools.debugger.Dim$StackFrame) -> access$3000
    boolean access$3100(org.mozilla.javascript.tools.debugger.Dim) -> access$3100
org.mozilla.javascript.tools.debugger.Dim$1 -> org.mozilla.javascript.tools.debugger.Dim$1:
org.mozilla.javascript.tools.debugger.Dim$ContextData -> org.mozilla.javascript.tools.debugger.Dim$ContextData:
    org.mozilla.javascript.ObjArray frameStack -> frameStack
    boolean breakNextLine -> breakNextLine
    int stopAtFrameDepth -> stopAtFrameDepth
    boolean eventThreadFlag -> eventThreadFlag
    java.lang.Throwable lastProcessedException -> lastProcessedException
    org.mozilla.javascript.tools.debugger.Dim$ContextData get(org.mozilla.javascript.Context) -> get
    int frameCount() -> frameCount
    org.mozilla.javascript.tools.debugger.Dim$StackFrame getFrame(int) -> getFrame
    void pushFrame(org.mozilla.javascript.tools.debugger.Dim$StackFrame) -> pushFrame
    void popFrame() -> popFrame
    java.lang.Throwable access$300(org.mozilla.javascript.tools.debugger.Dim$ContextData) -> access$300
    java.lang.Throwable access$302(org.mozilla.javascript.tools.debugger.Dim$ContextData,java.lang.Throwable) -> access$302
    boolean access$400(org.mozilla.javascript.tools.debugger.Dim$ContextData) -> access$400
    boolean access$402(org.mozilla.javascript.tools.debugger.Dim$ContextData,boolean) -> access$402
    boolean access$1402(org.mozilla.javascript.tools.debugger.Dim$ContextData,boolean) -> access$1402
    int access$1502(org.mozilla.javascript.tools.debugger.Dim$ContextData,int) -> access$1502
    void access$2600(org.mozilla.javascript.tools.debugger.Dim$ContextData,org.mozilla.javascript.tools.debugger.Dim$StackFrame) -> access$2600
    boolean access$1400(org.mozilla.javascript.tools.debugger.Dim$ContextData) -> access$1400
    int access$1500(org.mozilla.javascript.tools.debugger.Dim$ContextData) -> access$1500
    void access$3200(org.mozilla.javascript.tools.debugger.Dim$ContextData) -> access$3200
org.mozilla.javascript.tools.debugger.Dim$DimIProxy -> org.mozilla.javascript.tools.debugger.Dim$DimIProxy:
    org.mozilla.javascript.tools.debugger.Dim dim -> dim
    int type -> type
    java.lang.String url -> url
    java.lang.String text -> text
    java.lang.Object object -> object
    java.lang.Object id -> id
    boolean booleanResult -> booleanResult
    java.lang.String stringResult -> stringResult
    java.lang.Object objectResult -> objectResult
    java.lang.Object[] objectArrayResult -> objectArrayResult
    java.lang.Object run(org.mozilla.javascript.Context) -> run
    void withContext() -> withContext
    void contextCreated(org.mozilla.javascript.Context) -> contextCreated
    void contextReleased(org.mozilla.javascript.Context) -> contextReleased
    org.mozilla.javascript.debug.DebugFrame getFrame(org.mozilla.javascript.Context,org.mozilla.javascript.debug.DebuggableScript) -> getFrame
    void handleCompilationDone(org.mozilla.javascript.Context,org.mozilla.javascript.debug.DebuggableScript,java.lang.String) -> handleCompilationDone
    java.lang.String access$502(org.mozilla.javascript.tools.debugger.Dim$DimIProxy,java.lang.String) -> access$502
    java.lang.String access$602(org.mozilla.javascript.tools.debugger.Dim$DimIProxy,java.lang.String) -> access$602
    void access$700(org.mozilla.javascript.tools.debugger.Dim$DimIProxy) -> access$700
    java.lang.Object access$802(org.mozilla.javascript.tools.debugger.Dim$DimIProxy,java.lang.Object) -> access$802
    java.lang.String access$900(org.mozilla.javascript.tools.debugger.Dim$DimIProxy) -> access$900
    boolean access$1000(org.mozilla.javascript.tools.debugger.Dim$DimIProxy) -> access$1000
    java.lang.Object access$1102(org.mozilla.javascript.tools.debugger.Dim$DimIProxy,java.lang.Object) -> access$1102
    java.lang.Object access$1200(org.mozilla.javascript.tools.debugger.Dim$DimIProxy) -> access$1200
    java.lang.Object[] access$1300(org.mozilla.javascript.tools.debugger.Dim$DimIProxy) -> access$1300
org.mozilla.javascript.tools.debugger.Dim$FunctionSource -> org.mozilla.javascript.tools.debugger.Dim$FunctionSource:
    org.mozilla.javascript.tools.debugger.Dim$SourceInfo sourceInfo -> sourceInfo
    int firstLine -> firstLine
    java.lang.String name -> name
    org.mozilla.javascript.tools.debugger.Dim$SourceInfo sourceInfo() -> sourceInfo
    int firstLine() -> firstLine
    java.lang.String name() -> name
org.mozilla.javascript.tools.debugger.Dim$SourceInfo -> org.mozilla.javascript.tools.debugger.Dim$SourceInfo:
    boolean[] EMPTY_BOOLEAN_ARRAY -> EMPTY_BOOLEAN_ARRAY
    java.lang.String source -> source
    java.lang.String url -> url
    boolean[] breakableLines -> breakableLines
    boolean[] breakpoints -> breakpoints
    org.mozilla.javascript.tools.debugger.Dim$FunctionSource[] functionSources -> functionSources
    java.lang.String source() -> source
    java.lang.String url() -> url
    int functionSourcesTop() -> functionSourcesTop
    org.mozilla.javascript.tools.debugger.Dim$FunctionSource functionSource(int) -> functionSource
    void copyBreakpointsFrom(org.mozilla.javascript.tools.debugger.Dim$SourceInfo) -> copyBreakpointsFrom
    boolean breakableLine(int) -> breakableLine
    boolean breakpoint(int) -> breakpoint
    boolean breakpoint(int,boolean) -> breakpoint
    void removeAllBreakpoints() -> removeAllBreakpoints
    void access$200(org.mozilla.javascript.tools.debugger.Dim$SourceInfo,org.mozilla.javascript.tools.debugger.Dim$SourceInfo) -> access$200
    boolean[] access$2500(org.mozilla.javascript.tools.debugger.Dim$SourceInfo) -> access$2500
org.mozilla.javascript.tools.debugger.Dim$StackFrame -> org.mozilla.javascript.tools.debugger.Dim$StackFrame:
    org.mozilla.javascript.tools.debugger.Dim dim -> dim
    org.mozilla.javascript.tools.debugger.Dim$ContextData contextData -> contextData
    org.mozilla.javascript.Scriptable scope -> scope
    org.mozilla.javascript.Scriptable thisObj -> thisObj
    org.mozilla.javascript.tools.debugger.Dim$FunctionSource fsource -> fsource
    boolean[] breakpoints -> breakpoints
    int lineNumber -> lineNumber
    void onEnter(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> onEnter
    void onLineChange(org.mozilla.javascript.Context,int) -> onLineChange
    void onExceptionThrown(org.mozilla.javascript.Context,java.lang.Throwable) -> onExceptionThrown
    void onExit(org.mozilla.javascript.Context,boolean,java.lang.Object) -> onExit
    void onDebuggerStatement(org.mozilla.javascript.Context) -> onDebuggerStatement
    org.mozilla.javascript.tools.debugger.Dim$SourceInfo sourceInfo() -> sourceInfo
    org.mozilla.javascript.tools.debugger.Dim$ContextData contextData() -> contextData
    java.lang.Object scope() -> scope
    java.lang.Object thisObj() -> thisObj
    java.lang.String getUrl() -> getUrl
    int getLineNumber() -> getLineNumber
    java.lang.String getFunctionName() -> getFunctionName
    org.mozilla.javascript.Scriptable access$1600(org.mozilla.javascript.tools.debugger.Dim$StackFrame) -> access$1600
    org.mozilla.javascript.Scriptable access$1700(org.mozilla.javascript.tools.debugger.Dim$StackFrame) -> access$1700
org.mozilla.javascript.tools.debugger.EvalTextArea -> org.mozilla.javascript.tools.debugger.EvalTextArea:
    long serialVersionUID -> serialVersionUID
    org.mozilla.javascript.tools.debugger.SwingGui debugGui -> debugGui
    java.util.List history -> history
    int historyIndex -> historyIndex
    int outputMark -> outputMark
    void select(int,int) -> select
    void returnPressed() -> returnPressed
    void write(java.lang.String) -> write
    void keyPressed(java.awt.event.KeyEvent) -> keyPressed
    void keyTyped(java.awt.event.KeyEvent) -> keyTyped
    void keyReleased(java.awt.event.KeyEvent) -> keyReleased
    void insertUpdate(javax.swing.event.DocumentEvent) -> insertUpdate
    void removeUpdate(javax.swing.event.DocumentEvent) -> removeUpdate
    void postUpdateUI() -> postUpdateUI
    void changedUpdate(javax.swing.event.DocumentEvent) -> changedUpdate
org.mozilla.javascript.tools.debugger.EvalWindow -> org.mozilla.javascript.tools.debugger.EvalWindow:
    long serialVersionUID -> serialVersionUID
    org.mozilla.javascript.tools.debugger.EvalTextArea evalTextArea -> evalTextArea
    void setEnabled(boolean) -> setEnabled
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
org.mozilla.javascript.tools.debugger.Evaluator -> org.mozilla.javascript.tools.debugger.Evaluator:
    long serialVersionUID -> serialVersionUID
    org.mozilla.javascript.tools.debugger.MyTableModel tableModel -> tableModel
org.mozilla.javascript.tools.debugger.FileHeader -> org.mozilla.javascript.tools.debugger.FileHeader:
    long serialVersionUID -> serialVersionUID
    int pressLine -> pressLine
    org.mozilla.javascript.tools.debugger.FileWindow fileWindow -> fileWindow
    void update() -> update
    void paint(java.awt.Graphics) -> paint
    void mouseEntered(java.awt.event.MouseEvent) -> mouseEntered
    void mousePressed(java.awt.event.MouseEvent) -> mousePressed
    void mouseClicked(java.awt.event.MouseEvent) -> mouseClicked
    void mouseExited(java.awt.event.MouseEvent) -> mouseExited
    void mouseReleased(java.awt.event.MouseEvent) -> mouseReleased
org.mozilla.javascript.tools.debugger.FilePopupMenu -> org.mozilla.javascript.tools.debugger.FilePopupMenu:
    long serialVersionUID -> serialVersionUID
    int x -> x
    int y -> y
    void show(javax.swing.JComponent,int,int) -> show
org.mozilla.javascript.tools.debugger.FileTextArea -> org.mozilla.javascript.tools.debugger.FileTextArea:
    long serialVersionUID -> serialVersionUID
    org.mozilla.javascript.tools.debugger.FileWindow w -> w
    org.mozilla.javascript.tools.debugger.FilePopupMenu popup -> popup
    void select(int) -> select
    void checkPopup(java.awt.event.MouseEvent) -> checkPopup
    void mousePressed(java.awt.event.MouseEvent) -> mousePressed
    void mouseClicked(java.awt.event.MouseEvent) -> mouseClicked
    void mouseEntered(java.awt.event.MouseEvent) -> mouseEntered
    void mouseExited(java.awt.event.MouseEvent) -> mouseExited
    void mouseReleased(java.awt.event.MouseEvent) -> mouseReleased
    void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent) -> popupMenuWillBecomeVisible
    void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent) -> popupMenuWillBecomeInvisible
    void popupMenuCanceled(javax.swing.event.PopupMenuEvent) -> popupMenuCanceled
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
    void keyPressed(java.awt.event.KeyEvent) -> keyPressed
    void keyTyped(java.awt.event.KeyEvent) -> keyTyped
    void keyReleased(java.awt.event.KeyEvent) -> keyReleased
org.mozilla.javascript.tools.debugger.FileWindow -> org.mozilla.javascript.tools.debugger.FileWindow:
    long serialVersionUID -> serialVersionUID
    org.mozilla.javascript.tools.debugger.SwingGui debugGui -> debugGui
    org.mozilla.javascript.tools.debugger.Dim$SourceInfo sourceInfo -> sourceInfo
    org.mozilla.javascript.tools.debugger.FileTextArea textArea -> textArea
    org.mozilla.javascript.tools.debugger.FileHeader fileHeader -> fileHeader
    javax.swing.JScrollPane p -> p
    int currentPos -> currentPos
    void load() -> load
    int getPosition(int) -> getPosition
    boolean isBreakPoint(int) -> isBreakPoint
    void toggleBreakPoint(int) -> toggleBreakPoint
    void setBreakPoint(int) -> setBreakPoint
    void clearBreakPoint(int) -> clearBreakPoint
    void updateToolTip() -> updateToolTip
    java.lang.String getUrl() -> getUrl
    void updateText(org.mozilla.javascript.tools.debugger.Dim$SourceInfo) -> updateText
    void setPosition(int) -> setPosition
    void select(int,int) -> select
    void dispose() -> dispose
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
org.mozilla.javascript.tools.debugger.FindFunction -> org.mozilla.javascript.tools.debugger.FindFunction:
    long serialVersionUID -> serialVersionUID
    java.lang.String value -> value
    javax.swing.JList list -> list
    org.mozilla.javascript.tools.debugger.SwingGui debugGui -> debugGui
    javax.swing.JButton setButton -> setButton
    javax.swing.JButton cancelButton -> cancelButton
    java.lang.String showDialog(java.awt.Component) -> showDialog
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
    java.lang.String access$002(org.mozilla.javascript.tools.debugger.FindFunction,java.lang.String) -> access$002
    javax.swing.JButton access$100(org.mozilla.javascript.tools.debugger.FindFunction) -> access$100
org.mozilla.javascript.tools.debugger.FindFunction$1 -> org.mozilla.javascript.tools.debugger.FindFunction$1:
    org.mozilla.javascript.tools.debugger.FindFunction this$0 -> this$0
    void keyPressed(java.awt.event.KeyEvent) -> keyPressed
org.mozilla.javascript.tools.debugger.FindFunction$MouseHandler -> org.mozilla.javascript.tools.debugger.FindFunction$MouseHandler:
    org.mozilla.javascript.tools.debugger.FindFunction this$0 -> this$0
    void mouseClicked(java.awt.event.MouseEvent) -> mouseClicked
org.mozilla.javascript.tools.debugger.GuiCallback -> org.mozilla.javascript.tools.debugger.GuiCallback:
    void updateSourceText(org.mozilla.javascript.tools.debugger.Dim$SourceInfo) -> updateSourceText
    void enterInterrupt(org.mozilla.javascript.tools.debugger.Dim$StackFrame,java.lang.String,java.lang.String) -> enterInterrupt
    boolean isGuiEventThread() -> isGuiEventThread
    void dispatchNextGuiEvent() -> dispatchNextGuiEvent
org.mozilla.javascript.tools.debugger.JSInternalConsole -> org.mozilla.javascript.tools.debugger.JSInternalConsole:
    long serialVersionUID -> serialVersionUID
    org.mozilla.javascript.tools.shell.ConsoleTextArea consoleTextArea -> consoleTextArea
    java.io.InputStream getIn() -> getIn
    java.io.PrintStream getOut() -> getOut
    java.io.PrintStream getErr() -> getErr
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
org.mozilla.javascript.tools.debugger.JSInternalConsole$1 -> org.mozilla.javascript.tools.debugger.JSInternalConsole$1:
    org.mozilla.javascript.tools.debugger.JSInternalConsole this$0 -> this$0
    void internalFrameActivated(javax.swing.event.InternalFrameEvent) -> internalFrameActivated
org.mozilla.javascript.tools.debugger.Main -> org.mozilla.javascript.tools.debugger.Main:
    org.mozilla.javascript.tools.debugger.Dim dim -> dim
    org.mozilla.javascript.tools.debugger.SwingGui debugGui -> debugGui
    javax.swing.JFrame getDebugFrame() -> getDebugFrame
    void doBreak() -> doBreak
    void setBreakOnExceptions(boolean) -> setBreakOnExceptions
    void setBreakOnEnter(boolean) -> setBreakOnEnter
    void setBreakOnReturn(boolean) -> setBreakOnReturn
    void clearAllBreakpoints() -> clearAllBreakpoints
    void go() -> go
    void setScope(org.mozilla.javascript.Scriptable) -> setScope
    void setScopeProvider(org.mozilla.javascript.tools.debugger.ScopeProvider) -> setScopeProvider
    void setSourceProvider(org.mozilla.javascript.tools.debugger.SourceProvider) -> setSourceProvider
    void setExitAction(java.lang.Runnable) -> setExitAction
    java.io.InputStream getIn() -> getIn
    java.io.PrintStream getOut() -> getOut
    java.io.PrintStream getErr() -> getErr
    void pack() -> pack
    void setSize(int,int) -> setSize
    void setVisible(boolean) -> setVisible
    boolean isVisible() -> isVisible
    void dispose() -> dispose
    void attachTo(org.mozilla.javascript.ContextFactory) -> attachTo
    void detach() -> detach
    void main(java.lang.String[]) -> main
    org.mozilla.javascript.tools.debugger.Main mainEmbedded(java.lang.String) -> mainEmbedded
    org.mozilla.javascript.tools.debugger.Main mainEmbedded(org.mozilla.javascript.ContextFactory,org.mozilla.javascript.Scriptable,java.lang.String) -> mainEmbedded
    org.mozilla.javascript.tools.debugger.Main mainEmbedded(org.mozilla.javascript.ContextFactory,org.mozilla.javascript.tools.debugger.ScopeProvider,java.lang.String) -> mainEmbedded
    org.mozilla.javascript.tools.debugger.Main mainEmbeddedImpl(org.mozilla.javascript.ContextFactory,java.lang.Object,java.lang.String) -> mainEmbeddedImpl
    void setSize(java.awt.Dimension) -> setSize
    void setOptimizationLevel(int) -> setOptimizationLevel
    void contextEntered(org.mozilla.javascript.Context) -> contextEntered
    void contextExited(org.mozilla.javascript.Context) -> contextExited
    void contextCreated(org.mozilla.javascript.Context) -> contextCreated
    void contextReleased(org.mozilla.javascript.Context) -> contextReleased
org.mozilla.javascript.tools.debugger.Main$IProxy -> org.mozilla.javascript.tools.debugger.Main$IProxy:
    int EXIT_ACTION -> EXIT_ACTION
    int SCOPE_PROVIDER -> SCOPE_PROVIDER
    int type -> type
    org.mozilla.javascript.Scriptable scope -> scope
    org.mozilla.javascript.tools.debugger.ScopeProvider newScopeProvider(org.mozilla.javascript.Scriptable) -> newScopeProvider
    void run() -> run
    org.mozilla.javascript.Scriptable getScope() -> getScope
org.mozilla.javascript.tools.debugger.Menubar -> org.mozilla.javascript.tools.debugger.Menubar:
    long serialVersionUID -> serialVersionUID
    java.util.List interruptOnlyItems -> interruptOnlyItems
    java.util.List runOnlyItems -> runOnlyItems
    org.mozilla.javascript.tools.debugger.SwingGui debugGui -> debugGui
    javax.swing.JMenu windowMenu -> windowMenu
    javax.swing.JCheckBoxMenuItem breakOnExceptions -> breakOnExceptions
    javax.swing.JCheckBoxMenuItem breakOnEnter -> breakOnEnter
    javax.swing.JCheckBoxMenuItem breakOnReturn -> breakOnReturn
    javax.swing.JCheckBoxMenuItem getBreakOnExceptions() -> getBreakOnExceptions
    javax.swing.JCheckBoxMenuItem getBreakOnEnter() -> getBreakOnEnter
    javax.swing.JCheckBoxMenuItem getBreakOnReturn() -> getBreakOnReturn
    javax.swing.JMenu getDebugMenu() -> getDebugMenu
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
    void addFile(java.lang.String) -> addFile
    void updateEnabled(boolean) -> updateEnabled
org.mozilla.javascript.tools.debugger.MessageDialogWrapper -> org.mozilla.javascript.tools.debugger.MessageDialogWrapper:
    void showMessageDialog(java.awt.Component,java.lang.String,java.lang.String,int) -> showMessageDialog
org.mozilla.javascript.tools.debugger.MoreWindows -> org.mozilla.javascript.tools.debugger.MoreWindows:
    long serialVersionUID -> serialVersionUID
    java.lang.String value -> value
    javax.swing.JList list -> list
    org.mozilla.javascript.tools.debugger.SwingGui swingGui -> swingGui
    javax.swing.JButton setButton -> setButton
    javax.swing.JButton cancelButton -> cancelButton
    java.lang.String showDialog(java.awt.Component) -> showDialog
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
    java.lang.String access$102(org.mozilla.javascript.tools.debugger.MoreWindows,java.lang.String) -> access$102
    javax.swing.JButton access$200(org.mozilla.javascript.tools.debugger.MoreWindows) -> access$200
org.mozilla.javascript.tools.debugger.MoreWindows$1 -> org.mozilla.javascript.tools.debugger.MoreWindows$1:
    org.mozilla.javascript.tools.debugger.MoreWindows this$0 -> this$0
    void keyPressed(java.awt.event.KeyEvent) -> keyPressed
org.mozilla.javascript.tools.debugger.MoreWindows$MouseHandler -> org.mozilla.javascript.tools.debugger.MoreWindows$MouseHandler:
    org.mozilla.javascript.tools.debugger.MoreWindows this$0 -> this$0
    void mouseClicked(java.awt.event.MouseEvent) -> mouseClicked
org.mozilla.javascript.tools.debugger.MyTableModel -> org.mozilla.javascript.tools.debugger.MyTableModel:
    long serialVersionUID -> serialVersionUID
    org.mozilla.javascript.tools.debugger.SwingGui debugGui -> debugGui
    java.util.List expressions -> expressions
    java.util.List values -> values
    int getColumnCount() -> getColumnCount
    int getRowCount() -> getRowCount
    java.lang.String getColumnName(int) -> getColumnName
    boolean isCellEditable(int,int) -> isCellEditable
    java.lang.Object getValueAt(int,int) -> getValueAt
    void setValueAt(java.lang.Object,int,int) -> setValueAt
    void updateModel() -> updateModel
org.mozilla.javascript.tools.debugger.MyTreeTable -> org.mozilla.javascript.tools.debugger.MyTreeTable:
    long serialVersionUID -> serialVersionUID
    javax.swing.JTree resetTree(org.mozilla.javascript.tools.debugger.treetable.TreeTableModel) -> resetTree
    boolean isCellEditable(java.util.EventObject) -> isCellEditable
org.mozilla.javascript.tools.debugger.RunProxy -> org.mozilla.javascript.tools.debugger.RunProxy:
    int OPEN_FILE -> OPEN_FILE
    int LOAD_FILE -> LOAD_FILE
    int UPDATE_SOURCE_TEXT -> UPDATE_SOURCE_TEXT
    int ENTER_INTERRUPT -> ENTER_INTERRUPT
    org.mozilla.javascript.tools.debugger.SwingGui debugGui -> debugGui
    int type -> type
    java.lang.String fileName -> fileName
    java.lang.String text -> text
    org.mozilla.javascript.tools.debugger.Dim$SourceInfo sourceInfo -> sourceInfo
    org.mozilla.javascript.tools.debugger.Dim$StackFrame lastFrame -> lastFrame
    java.lang.String threadTitle -> threadTitle
    java.lang.String alertMessage -> alertMessage
    void run() -> run
org.mozilla.javascript.tools.debugger.ScopeProvider -> org.mozilla.javascript.tools.debugger.ScopeProvider:
    org.mozilla.javascript.Scriptable getScope() -> getScope
org.mozilla.javascript.tools.debugger.SourceProvider -> org.mozilla.javascript.tools.debugger.SourceProvider:
    java.lang.String getSource(org.mozilla.javascript.debug.DebuggableScript) -> getSource
org.mozilla.javascript.tools.debugger.SwingGui -> org.mozilla.javascript.tools.debugger.SwingGui:
    long serialVersionUID -> serialVersionUID
    org.mozilla.javascript.tools.debugger.Dim dim -> dim
    java.lang.Runnable exitAction -> exitAction
    javax.swing.JDesktopPane desk -> desk
    org.mozilla.javascript.tools.debugger.ContextWindow context -> context
    org.mozilla.javascript.tools.debugger.Menubar menubar -> menubar
    javax.swing.JToolBar toolBar -> toolBar
    org.mozilla.javascript.tools.debugger.JSInternalConsole console -> console
    javax.swing.JSplitPane split1 -> split1
    javax.swing.JLabel statusBar -> statusBar
    java.util.Map toplevels -> toplevels
    java.util.Map fileWindows -> fileWindows
    org.mozilla.javascript.tools.debugger.FileWindow currentWindow -> currentWindow
    javax.swing.JFileChooser dlg -> dlg
    java.awt.EventQueue awtEventQueue -> awtEventQueue
    org.mozilla.javascript.tools.debugger.Menubar getMenubar() -> getMenubar
    void setExitAction(java.lang.Runnable) -> setExitAction
    org.mozilla.javascript.tools.debugger.JSInternalConsole getConsole() -> getConsole
    void setVisible(boolean) -> setVisible
    void addTopLevel(java.lang.String,javax.swing.JFrame) -> addTopLevel
    void init() -> init
    void exit() -> exit
    org.mozilla.javascript.tools.debugger.FileWindow getFileWindow(java.lang.String) -> getFileWindow
    java.lang.String getShortName(java.lang.String) -> getShortName
    void removeWindow(org.mozilla.javascript.tools.debugger.FileWindow) -> removeWindow
    void showStopLine(org.mozilla.javascript.tools.debugger.Dim$StackFrame) -> showStopLine
    void showFileWindow(java.lang.String,int) -> showFileWindow
    void createFileWindow(org.mozilla.javascript.tools.debugger.Dim$SourceInfo,int) -> createFileWindow
    boolean updateFileWindow(org.mozilla.javascript.tools.debugger.Dim$SourceInfo) -> updateFileWindow
    void setFilePosition(org.mozilla.javascript.tools.debugger.FileWindow,int) -> setFilePosition
    void enterInterruptImpl(org.mozilla.javascript.tools.debugger.Dim$StackFrame,java.lang.String,java.lang.String) -> enterInterruptImpl
    javax.swing.JMenu getWindowMenu() -> getWindowMenu
    java.lang.String chooseFile(java.lang.String) -> chooseFile
    javax.swing.JInternalFrame getSelectedFrame() -> getSelectedFrame
    void updateEnabled(boolean) -> updateEnabled
    void setResizeWeight(javax.swing.JSplitPane,double) -> setResizeWeight
    java.lang.String readFile(java.lang.String) -> readFile
    void updateSourceText(org.mozilla.javascript.tools.debugger.Dim$SourceInfo) -> updateSourceText
    void enterInterrupt(org.mozilla.javascript.tools.debugger.Dim$StackFrame,java.lang.String,java.lang.String) -> enterInterrupt
    boolean isGuiEventThread() -> isGuiEventThread
    void dispatchNextGuiEvent() -> dispatchNextGuiEvent
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
    void access$000(org.mozilla.javascript.tools.debugger.SwingGui) -> access$000
org.mozilla.javascript.tools.debugger.SwingGui$1 -> org.mozilla.javascript.tools.debugger.SwingGui$1:
    org.mozilla.javascript.tools.debugger.SwingGui this$0 -> this$0
    boolean accept(java.io.File) -> accept
    java.lang.String getDescription() -> getDescription
org.mozilla.javascript.tools.debugger.SwingGui$2 -> org.mozilla.javascript.tools.debugger.SwingGui$2:
    org.mozilla.javascript.tools.debugger.SwingGui this$0 -> this$0
    void windowClosing(java.awt.event.WindowEvent) -> windowClosing
org.mozilla.javascript.tools.debugger.VariableModel -> org.mozilla.javascript.tools.debugger.VariableModel:
    java.lang.String[] cNames -> cNames
    java.lang.Class[] cTypes -> cTypes
    org.mozilla.javascript.tools.debugger.VariableModel$VariableNode[] CHILDLESS -> CHILDLESS
    org.mozilla.javascript.tools.debugger.Dim debugger -> debugger
    org.mozilla.javascript.tools.debugger.VariableModel$VariableNode root -> root
    java.lang.Object getRoot() -> getRoot
    int getChildCount(java.lang.Object) -> getChildCount
    java.lang.Object getChild(java.lang.Object,int) -> getChild
    boolean isLeaf(java.lang.Object) -> isLeaf
    int getIndexOfChild(java.lang.Object,java.lang.Object) -> getIndexOfChild
    boolean isCellEditable(java.lang.Object,int) -> isCellEditable
    void setValueAt(java.lang.Object,java.lang.Object,int) -> setValueAt
    void addTreeModelListener(javax.swing.event.TreeModelListener) -> addTreeModelListener
    void removeTreeModelListener(javax.swing.event.TreeModelListener) -> removeTreeModelListener
    void valueForPathChanged(javax.swing.tree.TreePath,java.lang.Object) -> valueForPathChanged
    int getColumnCount() -> getColumnCount
    java.lang.String getColumnName(int) -> getColumnName
    java.lang.Class getColumnClass(int) -> getColumnClass
    java.lang.Object getValueAt(java.lang.Object,int) -> getValueAt
    org.mozilla.javascript.tools.debugger.VariableModel$VariableNode[] children(org.mozilla.javascript.tools.debugger.VariableModel$VariableNode) -> children
    java.lang.Object getValue(org.mozilla.javascript.tools.debugger.VariableModel$VariableNode) -> getValue
org.mozilla.javascript.tools.debugger.VariableModel$1 -> org.mozilla.javascript.tools.debugger.VariableModel$1:
    org.mozilla.javascript.tools.debugger.VariableModel this$0 -> this$0
    int compare(java.lang.Object,java.lang.Object) -> compare
org.mozilla.javascript.tools.debugger.VariableModel$VariableNode -> org.mozilla.javascript.tools.debugger.VariableModel$VariableNode:
    java.lang.Object object -> object
    java.lang.Object id -> id
    org.mozilla.javascript.tools.debugger.VariableModel$VariableNode[] children -> children
    java.lang.String toString() -> toString
    org.mozilla.javascript.tools.debugger.VariableModel$VariableNode[] access$000(org.mozilla.javascript.tools.debugger.VariableModel$VariableNode) -> access$000
    org.mozilla.javascript.tools.debugger.VariableModel$VariableNode[] access$002(org.mozilla.javascript.tools.debugger.VariableModel$VariableNode,org.mozilla.javascript.tools.debugger.VariableModel$VariableNode[]) -> access$002
    java.lang.Object access$100(org.mozilla.javascript.tools.debugger.VariableModel$VariableNode) -> access$100
    java.lang.Object access$200(org.mozilla.javascript.tools.debugger.VariableModel$VariableNode) -> access$200
org.mozilla.javascript.tools.debugger.treetable.AbstractCellEditor -> org.mozilla.javascript.tools.debugger.treetable.AbstractCellEditor:
    javax.swing.event.EventListenerList listenerList -> listenerList
    java.lang.Object getCellEditorValue() -> getCellEditorValue
    boolean isCellEditable(java.util.EventObject) -> isCellEditable
    boolean shouldSelectCell(java.util.EventObject) -> shouldSelectCell
    boolean stopCellEditing() -> stopCellEditing
    void cancelCellEditing() -> cancelCellEditing
    void addCellEditorListener(javax.swing.event.CellEditorListener) -> addCellEditorListener
    void removeCellEditorListener(javax.swing.event.CellEditorListener) -> removeCellEditorListener
    void fireEditingStopped() -> fireEditingStopped
    void fireEditingCanceled() -> fireEditingCanceled
org.mozilla.javascript.tools.debugger.treetable.JTreeTable -> org.mozilla.javascript.tools.debugger.treetable.JTreeTable:
    long serialVersionUID -> serialVersionUID
    org.mozilla.javascript.tools.debugger.treetable.JTreeTable$TreeTableCellRenderer tree -> tree
    void updateUI() -> updateUI
    int getEditingRow() -> getEditingRow
    void setRowHeight(int) -> setRowHeight
    javax.swing.JTree getTree() -> getTree
org.mozilla.javascript.tools.debugger.treetable.JTreeTable$ListToTreeSelectionModelWrapper -> org.mozilla.javascript.tools.debugger.treetable.JTreeTable$ListToTreeSelectionModelWrapper:
    long serialVersionUID -> serialVersionUID
    boolean updatingListSelectionModel -> updatingListSelectionModel
    org.mozilla.javascript.tools.debugger.treetable.JTreeTable this$0 -> this$0
    javax.swing.ListSelectionModel getListSelectionModel() -> getListSelectionModel
    void resetRowSelection() -> resetRowSelection
    javax.swing.event.ListSelectionListener createListSelectionListener() -> createListSelectionListener
    void updateSelectedPathsFromSelectedRows() -> updateSelectedPathsFromSelectedRows
org.mozilla.javascript.tools.debugger.treetable.JTreeTable$ListToTreeSelectionModelWrapper$ListSelectionHandler -> org.mozilla.javascript.tools.debugger.treetable.JTreeTable$ListToTreeSelectionModelWrapper$ListSelectionHandler:
    org.mozilla.javascript.tools.debugger.treetable.JTreeTable$ListToTreeSelectionModelWrapper this$1 -> this$1
    void valueChanged(javax.swing.event.ListSelectionEvent) -> valueChanged
org.mozilla.javascript.tools.debugger.treetable.JTreeTable$TreeTableCellEditor -> org.mozilla.javascript.tools.debugger.treetable.JTreeTable$TreeTableCellEditor:
    org.mozilla.javascript.tools.debugger.treetable.JTreeTable this$0 -> this$0
    java.awt.Component getTableCellEditorComponent(javax.swing.JTable,java.lang.Object,boolean,int,int) -> getTableCellEditorComponent
    boolean isCellEditable(java.util.EventObject) -> isCellEditable
org.mozilla.javascript.tools.debugger.treetable.JTreeTable$TreeTableCellRenderer -> org.mozilla.javascript.tools.debugger.treetable.JTreeTable$TreeTableCellRenderer:
    long serialVersionUID -> serialVersionUID
    int visibleRow -> visibleRow
    org.mozilla.javascript.tools.debugger.treetable.JTreeTable this$0 -> this$0
    void updateUI() -> updateUI
    void setRowHeight(int) -> setRowHeight
    void setBounds(int,int,int,int) -> setBounds
    void paint(java.awt.Graphics) -> paint
    java.awt.Component getTableCellRendererComponent(javax.swing.JTable,java.lang.Object,boolean,boolean,int,int) -> getTableCellRendererComponent
org.mozilla.javascript.tools.debugger.treetable.TreeTableModel -> org.mozilla.javascript.tools.debugger.treetable.TreeTableModel:
    int getColumnCount() -> getColumnCount
    java.lang.String getColumnName(int) -> getColumnName
    java.lang.Class getColumnClass(int) -> getColumnClass
    java.lang.Object getValueAt(java.lang.Object,int) -> getValueAt
    boolean isCellEditable(java.lang.Object,int) -> isCellEditable
    void setValueAt(java.lang.Object,java.lang.Object,int) -> setValueAt
org.mozilla.javascript.tools.debugger.treetable.TreeTableModelAdapter -> org.mozilla.javascript.tools.debugger.treetable.TreeTableModelAdapter:
    long serialVersionUID -> serialVersionUID
    javax.swing.JTree tree -> tree
    org.mozilla.javascript.tools.debugger.treetable.TreeTableModel treeTableModel -> treeTableModel
    int getColumnCount() -> getColumnCount
    java.lang.String getColumnName(int) -> getColumnName
    java.lang.Class getColumnClass(int) -> getColumnClass
    int getRowCount() -> getRowCount
    java.lang.Object nodeForRow(int) -> nodeForRow
    java.lang.Object getValueAt(int,int) -> getValueAt
    boolean isCellEditable(int,int) -> isCellEditable
    void setValueAt(java.lang.Object,int,int) -> setValueAt
    void delayedFireTableDataChanged() -> delayedFireTableDataChanged
org.mozilla.javascript.tools.debugger.treetable.TreeTableModelAdapter$1 -> org.mozilla.javascript.tools.debugger.treetable.TreeTableModelAdapter$1:
    org.mozilla.javascript.tools.debugger.treetable.TreeTableModelAdapter this$0 -> this$0
    void treeExpanded(javax.swing.event.TreeExpansionEvent) -> treeExpanded
    void treeCollapsed(javax.swing.event.TreeExpansionEvent) -> treeCollapsed
org.mozilla.javascript.tools.debugger.treetable.TreeTableModelAdapter$2 -> org.mozilla.javascript.tools.debugger.treetable.TreeTableModelAdapter$2:
    org.mozilla.javascript.tools.debugger.treetable.TreeTableModelAdapter this$0 -> this$0
    void treeNodesChanged(javax.swing.event.TreeModelEvent) -> treeNodesChanged
    void treeNodesInserted(javax.swing.event.TreeModelEvent) -> treeNodesInserted
    void treeNodesRemoved(javax.swing.event.TreeModelEvent) -> treeNodesRemoved
    void treeStructureChanged(javax.swing.event.TreeModelEvent) -> treeStructureChanged
org.mozilla.javascript.tools.debugger.treetable.TreeTableModelAdapter$3 -> org.mozilla.javascript.tools.debugger.treetable.TreeTableModelAdapter$3:
    org.mozilla.javascript.tools.debugger.treetable.TreeTableModelAdapter this$0 -> this$0
    void run() -> run
org.mozilla.javascript.tools.idswitch.CodePrinter -> org.mozilla.javascript.tools.idswitch.CodePrinter:
    int LITERAL_CHAR_MAX_SIZE -> LITERAL_CHAR_MAX_SIZE
    java.lang.String lineTerminator -> lineTerminator
    int indentStep -> indentStep
    int indentTabSize -> indentTabSize
    char[] buffer -> buffer
    int offset -> offset
    java.lang.String getLineTerminator() -> getLineTerminator
    void setLineTerminator(java.lang.String) -> setLineTerminator
    int getIndentStep() -> getIndentStep
    void setIndentStep(int) -> setIndentStep
    int getIndentTabSize() -> getIndentTabSize
    void setIndentTabSize(int) -> setIndentTabSize
    void clear() -> clear
    int ensure_area(int) -> ensure_area
    int add_area(int) -> add_area
    int getOffset() -> getOffset
    int getLastChar() -> getLastChar
    void p(char) -> p
    void p(java.lang.String) -> p
    void p(char[]) -> p
    void p(char[],int,int) -> p
    void p(int) -> p
    void qchar(int) -> qchar
    void qstring(java.lang.String) -> qstring
    int put_string_literal_char(int,int,boolean) -> put_string_literal_char
    char digit_to_hex_letter(int) -> digit_to_hex_letter
    void indent(int) -> indent
    void nl() -> nl
    void line(int,java.lang.String) -> line
    void erase(int,int) -> erase
    java.lang.String toString() -> toString
org.mozilla.javascript.tools.idswitch.FileBody -> org.mozilla.javascript.tools.idswitch.FileBody:
    char[] buffer -> buffer
    int bufferEnd -> bufferEnd
    int lineBegin -> lineBegin
    int lineEnd -> lineEnd
    int nextLineStart -> nextLineStart
    int lineNumber -> lineNumber
    org.mozilla.javascript.tools.idswitch.FileBody$ReplaceItem firstReplace -> firstReplace
    org.mozilla.javascript.tools.idswitch.FileBody$ReplaceItem lastReplace -> lastReplace
    char[] getBuffer() -> getBuffer
    void readData(java.io.Reader) -> readData
    void writeInitialData(java.io.Writer) -> writeInitialData
    void writeData(java.io.Writer) -> writeData
    boolean wasModified() -> wasModified
    boolean setReplacement(int,int,java.lang.String) -> setReplacement
    int getLineNumber() -> getLineNumber
    int getLineBegin() -> getLineBegin
    int getLineEnd() -> getLineEnd
    void startLineLoop() -> startLineLoop
    boolean nextLine() -> nextLine
    boolean equals(java.lang.String,char[],int,int) -> equals
org.mozilla.javascript.tools.idswitch.FileBody$ReplaceItem -> org.mozilla.javascript.tools.idswitch.FileBody$ReplaceItem:
    org.mozilla.javascript.tools.idswitch.FileBody$ReplaceItem next -> next
    int begin -> begin
    int end -> end
    java.lang.String replacement -> replacement
org.mozilla.javascript.tools.idswitch.IdValuePair -> org.mozilla.javascript.tools.idswitch.IdValuePair:
    int idLength -> idLength
    java.lang.String id -> id
    java.lang.String value -> value
    int lineNumber -> lineNumber
    int getLineNumber() -> getLineNumber
    void setLineNumber(int) -> setLineNumber
org.mozilla.javascript.tools.idswitch.Main -> org.mozilla.javascript.tools.idswitch.Main:
    java.lang.String SWITCH_TAG_STR -> SWITCH_TAG_STR
    java.lang.String GENERATED_TAG_STR -> GENERATED_TAG_STR
    java.lang.String STRING_TAG_STR -> STRING_TAG_STR
    int NORMAL_LINE -> NORMAL_LINE
    int SWITCH_TAG -> SWITCH_TAG
    int GENERATED_TAG -> GENERATED_TAG
    int STRING_TAG -> STRING_TAG
    java.util.List all_pairs -> all_pairs
    org.mozilla.javascript.tools.ToolErrorReporter R -> R
    org.mozilla.javascript.tools.idswitch.CodePrinter P -> P
    org.mozilla.javascript.tools.idswitch.FileBody body -> body
    java.lang.String source_file -> source_file
    int tag_definition_end -> tag_definition_end
    int tag_value_start -> tag_value_start
    int tag_value_end -> tag_value_end
    boolean is_value_type(int) -> is_value_type
    java.lang.String tag_name(int) -> tag_name
    void process_file(java.lang.String) -> process_file
    void process_file() -> process_file
    java.lang.String get_time_stamp() -> get_time_stamp
    void generate_java_code() -> generate_java_code
    int extract_line_tag_id(char[],int,int) -> extract_line_tag_id
    int look_for_slash_slash(char[],int,int) -> look_for_slash_slash
    int extract_tag_value(char[],int,int,int) -> extract_tag_value
    int get_tag_id(char[],int,int,boolean) -> get_tag_id
    void look_for_id_definitions(char[],int,int,boolean) -> look_for_id_definitions
    void add_id(char[],int,int,int,int) -> add_id
    boolean is_white_space(int) -> is_white_space
    int skip_white_space(char[],int,int) -> skip_white_space
    int skip_matched_prefix(java.lang.String,char[],int,int) -> skip_matched_prefix
    boolean equals(java.lang.String,char[],int,int) -> equals
    int skip_name_char(char[],int,int) -> skip_name_char
    void main(java.lang.String[]) -> main
    int exec(java.lang.String[]) -> exec
    int process_options(java.lang.String[]) -> process_options
    void show_usage() -> show_usage
    void show_version() -> show_version
    void option_error(java.lang.String) -> option_error
    void print_error(java.lang.String) -> print_error
    int remove_nulls(java.lang.String[]) -> remove_nulls
org.mozilla.javascript.tools.idswitch.SwitchGenerator -> org.mozilla.javascript.tools.idswitch.SwitchGenerator:
    java.lang.String v_switch_label -> v_switch_label
    java.lang.String v_label -> v_label
    java.lang.String v_s -> v_s
    java.lang.String v_c -> v_c
    java.lang.String v_guess -> v_guess
    java.lang.String v_id -> v_id
    java.lang.String v_length_suffix -> v_length_suffix
    int use_if_threshold -> use_if_threshold
    int char_tail_test_threshold -> char_tail_test_threshold
    org.mozilla.javascript.tools.idswitch.IdValuePair[] pairs -> pairs
    java.lang.String default_value -> default_value
    int[] columns -> columns
    boolean c_was_defined -> c_was_defined
    org.mozilla.javascript.tools.idswitch.CodePrinter P -> P
    org.mozilla.javascript.tools.ToolErrorReporter R -> R
    java.lang.String source_file -> source_file
    org.mozilla.javascript.tools.idswitch.CodePrinter getCodePrinter() -> getCodePrinter
    void setCodePrinter(org.mozilla.javascript.tools.idswitch.CodePrinter) -> setCodePrinter
    org.mozilla.javascript.tools.ToolErrorReporter getReporter() -> getReporter
    void setReporter(org.mozilla.javascript.tools.ToolErrorReporter) -> setReporter
    java.lang.String getSourceFileName() -> getSourceFileName
    void setSourceFileName(java.lang.String) -> setSourceFileName
    void generateSwitch(java.lang.String[],java.lang.String) -> generateSwitch
    void generateSwitch(org.mozilla.javascript.tools.idswitch.IdValuePair[],java.lang.String) -> generateSwitch
    void generate_body(int,int,int) -> generate_body
    void generate_length_switch(int,int,int) -> generate_length_switch
    void generate_letter_switch(int,int,int,boolean,boolean) -> generate_letter_switch
    boolean generate_letter_switch_r(int,int,int,int,boolean,boolean) -> generate_letter_switch_r
    int count_different_lengths(int,int) -> count_different_lengths
    int find_max_different_column(int,int,int) -> find_max_different_column
    int count_different_chars(int,int,int) -> count_different_chars
    void check_all_is_different(int,int) -> check_all_is_different
    org.mozilla.javascript.EvaluatorException on_same_pair_fail(org.mozilla.javascript.tools.idswitch.IdValuePair,org.mozilla.javascript.tools.idswitch.IdValuePair) -> on_same_pair_fail
    void sort_pairs(int,int,int) -> sort_pairs
    boolean bigger(org.mozilla.javascript.tools.idswitch.IdValuePair,org.mozilla.javascript.tools.idswitch.IdValuePair,int) -> bigger
    void heap4Sort(org.mozilla.javascript.tools.idswitch.IdValuePair[],int,int,int) -> heap4Sort
    void makeHeap4(org.mozilla.javascript.tools.idswitch.IdValuePair[],int,int,int) -> makeHeap4
    void heapify4(org.mozilla.javascript.tools.idswitch.IdValuePair[],int,int,int,int) -> heapify4
org.mozilla.javascript.tools.jsc.Main -> org.mozilla.javascript.tools.jsc.Main:
    boolean printHelp -> printHelp
    org.mozilla.javascript.tools.ToolErrorReporter reporter -> reporter
    org.mozilla.javascript.CompilerEnvirons compilerEnv -> compilerEnv
    org.mozilla.javascript.optimizer.ClassCompiler compiler -> compiler
    java.lang.String targetName -> targetName
    java.lang.String targetPackage -> targetPackage
    java.lang.String destinationDir -> destinationDir
    java.lang.String characterEncoding -> characterEncoding
    void main(java.lang.String[]) -> main
    java.lang.String[] processOptions(java.lang.String[]) -> processOptions
    void badUsage(java.lang.String) -> badUsage
    void processSource(java.lang.String[]) -> processSource
    java.lang.String readSource(java.io.File) -> readSource
    java.io.File getOutputFile(java.io.File,java.lang.String) -> getOutputFile
    java.lang.String getClassName(java.lang.String) -> getClassName
    void p(java.lang.String) -> p
    void addError(java.lang.String,java.lang.String) -> addError
    void addFormatedError(java.lang.String) -> addFormatedError
org.mozilla.javascript.tools.shell.ConsoleTextArea -> org.mozilla.javascript.tools.shell.ConsoleTextArea:
    long serialVersionUID -> serialVersionUID
    org.mozilla.javascript.tools.shell.ConsoleWriter console1 -> console1
    org.mozilla.javascript.tools.shell.ConsoleWriter console2 -> console2
    java.io.PrintStream out -> out
    java.io.PrintStream err -> err
    java.io.PrintWriter inPipe -> inPipe
    java.io.PipedInputStream in -> in
    java.util.List history -> history
    int historyIndex -> historyIndex
    int outputMark -> outputMark
    void select(int,int) -> select
    void returnPressed() -> returnPressed
    void eval(java.lang.String) -> eval
    void keyPressed(java.awt.event.KeyEvent) -> keyPressed
    void keyTyped(java.awt.event.KeyEvent) -> keyTyped
    void keyReleased(java.awt.event.KeyEvent) -> keyReleased
    void write(java.lang.String) -> write
    void insertUpdate(javax.swing.event.DocumentEvent) -> insertUpdate
    void removeUpdate(javax.swing.event.DocumentEvent) -> removeUpdate
    void postUpdateUI() -> postUpdateUI
    void changedUpdate(javax.swing.event.DocumentEvent) -> changedUpdate
    java.io.InputStream getIn() -> getIn
    java.io.PrintStream getOut() -> getOut
    java.io.PrintStream getErr() -> getErr
org.mozilla.javascript.tools.shell.ConsoleWrite -> org.mozilla.javascript.tools.shell.ConsoleWrite:
    org.mozilla.javascript.tools.shell.ConsoleTextArea textArea -> textArea
    java.lang.String str -> str
    void run() -> run
org.mozilla.javascript.tools.shell.ConsoleWriter -> org.mozilla.javascript.tools.shell.ConsoleWriter:
    org.mozilla.javascript.tools.shell.ConsoleTextArea textArea -> textArea
    java.lang.StringBuffer buffer -> buffer
    void write(int) -> write
    void write(char[],int,int) -> write
    void flush() -> flush
    void close() -> close
    void flushBuffer() -> flushBuffer
org.mozilla.javascript.tools.shell.Environment -> org.mozilla.javascript.tools.shell.Environment:
    long serialVersionUID -> serialVersionUID
    org.mozilla.javascript.tools.shell.Environment thePrototypeInstance -> thePrototypeInstance
    void defineClass(org.mozilla.javascript.ScriptableObject) -> defineClass
    java.lang.String getClassName() -> getClassName
    boolean has(java.lang.String,org.mozilla.javascript.Scriptable) -> has
    java.lang.Object get(java.lang.String,org.mozilla.javascript.Scriptable) -> get
    void put(java.lang.String,org.mozilla.javascript.Scriptable,java.lang.Object) -> put
    java.lang.Object[] collectIds() -> collectIds
    java.lang.Object[] getIds() -> getIds
    java.lang.Object[] getAllIds() -> getAllIds
org.mozilla.javascript.tools.shell.FlexibleCompletor -> org.mozilla.javascript.tools.shell.FlexibleCompletor:
    java.lang.reflect.Method completeMethod -> completeMethod
    org.mozilla.javascript.Scriptable global -> global
    java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> invoke
    int complete(java.lang.String,int,java.util.List) -> complete
org.mozilla.javascript.tools.shell.Global -> org.mozilla.javascript.tools.shell.Global:
    long serialVersionUID -> serialVersionUID
    org.mozilla.javascript.NativeArray history -> history
    boolean attemptedJLineLoad -> attemptedJLineLoad
    java.io.InputStream inStream -> inStream
    java.io.PrintStream outStream -> outStream
    java.io.PrintStream errStream -> errStream
    boolean sealedStdLib -> sealedStdLib
    boolean initialized -> initialized
    org.mozilla.javascript.tools.shell.QuitAction quitAction -> quitAction
    java.lang.String[] prompts -> prompts
    java.util.HashMap doctestCanonicalizations -> doctestCanonicalizations
    boolean isInitialized() -> isInitialized
    void initQuitAction(org.mozilla.javascript.tools.shell.QuitAction) -> initQuitAction
    void init(org.mozilla.javascript.ContextFactory) -> init
    void init(org.mozilla.javascript.Context) -> init
    org.mozilla.javascript.commonjs.module.Require installRequire(org.mozilla.javascript.Context,java.util.List,boolean) -> installRequire
    void help(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object[],org.mozilla.javascript.Function) -> help
    void gc(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object[],org.mozilla.javascript.Function) -> gc
    java.lang.Object print(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object[],org.mozilla.javascript.Function) -> print
    void quit(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object[],org.mozilla.javascript.Function) -> quit
    double version(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object[],org.mozilla.javascript.Function) -> version
    void load(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object[],org.mozilla.javascript.Function) -> load
    void defineClass(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object[],org.mozilla.javascript.Function) -> defineClass
    void loadClass(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object[],org.mozilla.javascript.Function) -> loadClass
    java.lang.Class getClass(java.lang.Object[]) -> getClass
    void serialize(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object[],org.mozilla.javascript.Function) -> serialize
    java.lang.Object deserialize(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object[],org.mozilla.javascript.Function) -> deserialize
    java.lang.String[] getPrompts(org.mozilla.javascript.Context) -> getPrompts
    java.lang.Object doctest(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object[],org.mozilla.javascript.Function) -> doctest
    int runDoctest(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.String,java.lang.String,int) -> runDoctest
    boolean doctestOutputMatches(java.lang.String,java.lang.String) -> doctestOutputMatches
    java.lang.Object spawn(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object[],org.mozilla.javascript.Function) -> spawn
    java.lang.Object sync(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object[],org.mozilla.javascript.Function) -> sync
    java.lang.Object runCommand(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object[],org.mozilla.javascript.Function) -> runCommand
    void seal(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object[],org.mozilla.javascript.Function) -> seal
    java.lang.Object readFile(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object[],org.mozilla.javascript.Function) -> readFile
    java.lang.Object readUrl(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object[],org.mozilla.javascript.Function) -> readUrl
    java.lang.Object toint32(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object[],org.mozilla.javascript.Function) -> toint32
    java.io.InputStream getIn() -> getIn
    void setIn(java.io.InputStream) -> setIn
    java.io.PrintStream getOut() -> getOut
    void setOut(java.io.PrintStream) -> setOut
    java.io.PrintStream getErr() -> getErr
    void setErr(java.io.PrintStream) -> setErr
    void setSealedStdLib(boolean) -> setSealedStdLib
    org.mozilla.javascript.tools.shell.Global getInstance(org.mozilla.javascript.Function) -> getInstance
    int runProcess(java.lang.String[],java.lang.String[],java.io.InputStream,java.io.OutputStream,java.io.OutputStream) -> runProcess
    void pipe(boolean,java.io.InputStream,java.io.OutputStream) -> pipe
    java.io.InputStream toInputStream(java.lang.Object) -> toInputStream
    java.io.OutputStream toOutputStream(java.lang.Object) -> toOutputStream
    java.lang.String readUrl(java.lang.String,java.lang.String,boolean) -> readUrl
    java.lang.String getCharCodingFromType(java.lang.String) -> getCharCodingFromType
    java.lang.String readReader(java.io.Reader) -> readReader
    java.lang.String readReader(java.io.Reader,int) -> readReader
    java.lang.RuntimeException reportRuntimeError(java.lang.String) -> reportRuntimeError
    java.lang.RuntimeException reportRuntimeError(java.lang.String,java.lang.String) -> reportRuntimeError
org.mozilla.javascript.tools.shell.Global$1 -> org.mozilla.javascript.tools.shell.Global$1:
    org.mozilla.javascript.tools.shell.Global this$0 -> this$0
    java.lang.Object run(org.mozilla.javascript.Context) -> run
org.mozilla.javascript.tools.shell.JSConsole -> org.mozilla.javascript.tools.shell.JSConsole:
    long serialVersionUID -> serialVersionUID
    java.io.File CWD -> CWD
    javax.swing.JFileChooser dlg -> dlg
    org.mozilla.javascript.tools.shell.ConsoleTextArea consoleTextArea -> consoleTextArea
    java.lang.String chooseFile() -> chooseFile
    void main(java.lang.String[]) -> main
    void createFileChooser() -> createFileChooser
    void actionPerformed(java.awt.event.ActionEvent) -> actionPerformed
org.mozilla.javascript.tools.shell.JSConsole$1 -> org.mozilla.javascript.tools.shell.JSConsole$1:
    org.mozilla.javascript.tools.shell.JSConsole this$0 -> this$0
    boolean accept(java.io.File) -> accept
    java.lang.String getDescription() -> getDescription
org.mozilla.javascript.tools.shell.JSConsole$2 -> org.mozilla.javascript.tools.shell.JSConsole$2:
    org.mozilla.javascript.tools.shell.JSConsole this$0 -> this$0
    void windowClosing(java.awt.event.WindowEvent) -> windowClosing
org.mozilla.javascript.tools.shell.JavaPolicySecurity -> org.mozilla.javascript.tools.shell.JavaPolicySecurity:
    java.lang.Class getStaticSecurityDomainClassInternal() -> getStaticSecurityDomainClassInternal
    void callProcessFileSecure(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.String) -> callProcessFileSecure
    java.net.URL getUrlObj(java.lang.String) -> getUrlObj
    java.security.ProtectionDomain getUrlDomain(java.net.URL) -> getUrlDomain
    org.mozilla.javascript.GeneratedClassLoader createClassLoader(java.lang.ClassLoader,java.lang.Object) -> createClassLoader
    java.lang.Object getDynamicSecurityDomain(java.lang.Object) -> getDynamicSecurityDomain
    java.security.ProtectionDomain getDynamicDomain(java.security.ProtectionDomain) -> getDynamicDomain
    java.lang.Object callWithDomain(java.lang.Object,org.mozilla.javascript.Context,org.mozilla.javascript.Callable,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> callWithDomain
    java.net.URL access$000(org.mozilla.javascript.tools.shell.JavaPolicySecurity,java.lang.String) -> access$000
    java.security.ProtectionDomain access$100(org.mozilla.javascript.tools.shell.JavaPolicySecurity,java.net.URL) -> access$100
org.mozilla.javascript.tools.shell.JavaPolicySecurity$1 -> org.mozilla.javascript.tools.shell.JavaPolicySecurity$1:
    java.lang.String val$filename -> val$filename
    org.mozilla.javascript.Context val$cx -> val$cx
    org.mozilla.javascript.Scriptable val$scope -> val$scope
    org.mozilla.javascript.tools.shell.JavaPolicySecurity this$0 -> this$0
    java.lang.Object run() -> run
org.mozilla.javascript.tools.shell.JavaPolicySecurity$2 -> org.mozilla.javascript.tools.shell.JavaPolicySecurity$2:
    java.lang.ClassLoader val$parentLoader -> val$parentLoader
    java.security.ProtectionDomain val$domain -> val$domain
    org.mozilla.javascript.tools.shell.JavaPolicySecurity this$0 -> this$0
    org.mozilla.javascript.tools.shell.JavaPolicySecurity$Loader run() -> run
    java.lang.Object run() -> run
org.mozilla.javascript.tools.shell.JavaPolicySecurity$3 -> org.mozilla.javascript.tools.shell.JavaPolicySecurity$3:
    org.mozilla.javascript.Callable val$callable -> val$callable
    org.mozilla.javascript.Context val$cx -> val$cx
    org.mozilla.javascript.Scriptable val$scope -> val$scope
    org.mozilla.javascript.Scriptable val$thisObj -> val$thisObj
    java.lang.Object[] val$args -> val$args
    org.mozilla.javascript.tools.shell.JavaPolicySecurity this$0 -> this$0
    java.lang.Object run() -> run
org.mozilla.javascript.tools.shell.JavaPolicySecurity$ContextPermissions -> org.mozilla.javascript.tools.shell.JavaPolicySecurity$ContextPermissions:
    long serialVersionUID -> serialVersionUID
    java.security.AccessControlContext _context -> _context
    java.security.PermissionCollection _statisPermissions -> _statisPermissions
    void add(java.security.Permission) -> add
    boolean implies(java.security.Permission) -> implies
    java.util.Enumeration elements() -> elements
    java.lang.String toString() -> toString
org.mozilla.javascript.tools.shell.JavaPolicySecurity$ContextPermissions$1 -> org.mozilla.javascript.tools.shell.JavaPolicySecurity$ContextPermissions$1:
    org.mozilla.javascript.tools.shell.JavaPolicySecurity$ContextPermissions this$0 -> this$0
    boolean hasMoreElements() -> hasMoreElements
    java.security.Permission nextElement() -> nextElement
    java.lang.Object nextElement() -> nextElement
org.mozilla.javascript.tools.shell.JavaPolicySecurity$Loader -> org.mozilla.javascript.tools.shell.JavaPolicySecurity$Loader:
    java.security.ProtectionDomain domain -> domain
    java.lang.Class defineClass(java.lang.String,byte[]) -> defineClass
    void linkClass(java.lang.Class) -> linkClass
org.mozilla.javascript.tools.shell.Main -> org.mozilla.javascript.tools.shell.Main:
    org.mozilla.javascript.tools.shell.ShellContextFactory shellContextFactory -> shellContextFactory
    org.mozilla.javascript.tools.shell.Global global -> global
    org.mozilla.javascript.tools.ToolErrorReporter errorReporter -> errorReporter
    int exitCode -> exitCode
    int EXITCODE_RUNTIME_ERROR -> EXITCODE_RUNTIME_ERROR
    int EXITCODE_FILE_NOT_FOUND -> EXITCODE_FILE_NOT_FOUND
    boolean processStdin -> processStdin
    java.util.List fileList -> fileList
    java.util.List modulePath -> modulePath
    java.lang.String mainModule -> mainModule
    boolean sandboxed -> sandboxed
    boolean useRequire -> useRequire
    org.mozilla.javascript.commonjs.module.Require require -> require
    org.mozilla.javascript.tools.shell.SecurityProxy securityImpl -> securityImpl
    org.mozilla.javascript.tools.shell.Main$ScriptCache scriptCache -> scriptCache
    void main(java.lang.String[]) -> main
    int exec(java.lang.String[]) -> exec
    void processFiles(org.mozilla.javascript.Context,java.lang.String[]) -> processFiles
    void evalInlineScript(org.mozilla.javascript.Context,java.lang.String) -> evalInlineScript
    org.mozilla.javascript.tools.shell.Global getGlobal() -> getGlobal
    org.mozilla.javascript.Scriptable getShellScope() -> getShellScope
    org.mozilla.javascript.Scriptable getScope(java.lang.String) -> getScope
    java.lang.String[] processOptions(java.lang.String[]) -> processOptions
    void initJavaPolicySecuritySupport() -> initJavaPolicySecuritySupport
    void processSource(org.mozilla.javascript.Context,java.lang.String) -> processSource
    void processFileNoThrow(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.String) -> processFileNoThrow
    void processFile(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.String) -> processFile
    void processFileSecure(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.String,java.lang.Object) -> processFileSecure
    byte[] getDigest(java.lang.Object) -> getDigest
    org.mozilla.javascript.Script loadCompiledScript(org.mozilla.javascript.Context,java.lang.String,byte[],java.lang.Object) -> loadCompiledScript
    java.io.InputStream getIn() -> getIn
    void setIn(java.io.InputStream) -> setIn
    java.io.PrintStream getOut() -> getOut
    void setOut(java.io.PrintStream) -> setOut
    java.io.PrintStream getErr() -> getErr
    void setErr(java.io.PrintStream) -> setErr
    java.lang.Object readFileOrUrl(java.lang.String,boolean) -> readFileOrUrl
org.mozilla.javascript.tools.shell.Main$IProxy -> org.mozilla.javascript.tools.shell.Main$IProxy:
    int PROCESS_FILES -> PROCESS_FILES
    int EVAL_INLINE_SCRIPT -> EVAL_INLINE_SCRIPT
    int SYSTEM_EXIT -> SYSTEM_EXIT
    int type -> type
    java.lang.String[] args -> args
    java.lang.String scriptText -> scriptText
    java.lang.Object run(org.mozilla.javascript.Context) -> run
    void quit(org.mozilla.javascript.Context,int) -> quit
org.mozilla.javascript.tools.shell.Main$ScriptCache -> org.mozilla.javascript.tools.shell.Main$ScriptCache:
    java.lang.ref.ReferenceQueue queue -> queue
    int capacity -> capacity
    boolean removeEldestEntry(java.util.Map$Entry) -> removeEldestEntry
    org.mozilla.javascript.tools.shell.Main$ScriptReference get(java.lang.String,byte[]) -> get
    void put(java.lang.String,byte[],org.mozilla.javascript.Script) -> put
org.mozilla.javascript.tools.shell.Main$ScriptReference -> org.mozilla.javascript.tools.shell.Main$ScriptReference:
    java.lang.String path -> path
    byte[] digest -> digest
org.mozilla.javascript.tools.shell.PipeThread -> org.mozilla.javascript.tools.shell.PipeThread:
    boolean fromProcess -> fromProcess
    java.io.InputStream from -> from
    java.io.OutputStream to -> to
    void run() -> run
org.mozilla.javascript.tools.shell.QuitAction -> org.mozilla.javascript.tools.shell.QuitAction:
    void quit(org.mozilla.javascript.Context,int) -> quit
org.mozilla.javascript.tools.shell.Runner -> org.mozilla.javascript.tools.shell.Runner:
    org.mozilla.javascript.ContextFactory factory -> factory
    org.mozilla.javascript.Scriptable scope -> scope
    org.mozilla.javascript.Function f -> f
    org.mozilla.javascript.Script s -> s
    java.lang.Object[] args -> args
    void run() -> run
    java.lang.Object run(org.mozilla.javascript.Context) -> run
org.mozilla.javascript.tools.shell.SecurityProxy -> org.mozilla.javascript.tools.shell.SecurityProxy:
    void callProcessFileSecure(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.String) -> callProcessFileSecure
org.mozilla.javascript.tools.shell.ShellContextFactory -> org.mozilla.javascript.tools.shell.ShellContextFactory:
    boolean strictMode -> strictMode
    boolean warningAsError -> warningAsError
    int languageVersion -> languageVersion
    int optimizationLevel -> optimizationLevel
    boolean generatingDebug -> generatingDebug
    boolean allowReservedKeywords -> allowReservedKeywords
    org.mozilla.javascript.ErrorReporter errorReporter -> errorReporter
    java.lang.String characterEncoding -> characterEncoding
    boolean hasFeature(org.mozilla.javascript.Context,int) -> hasFeature
    void onContextCreated(org.mozilla.javascript.Context) -> onContextCreated
    void setStrictMode(boolean) -> setStrictMode
    void setWarningAsError(boolean) -> setWarningAsError
    void setLanguageVersion(int) -> setLanguageVersion
    void setOptimizationLevel(int) -> setOptimizationLevel
    void setErrorReporter(org.mozilla.javascript.ErrorReporter) -> setErrorReporter
    void setGeneratingDebug(boolean) -> setGeneratingDebug
    java.lang.String getCharacterEncoding() -> getCharacterEncoding
    void setCharacterEncoding(java.lang.String) -> setCharacterEncoding
    void setAllowReservedKeywords(boolean) -> setAllowReservedKeywords
org.mozilla.javascript.tools.shell.ShellLine -> org.mozilla.javascript.tools.shell.ShellLine:
    java.io.InputStream getStream(org.mozilla.javascript.Scriptable) -> getStream
org.mozilla.javascript.v8dtoa.CachedPowers -> org.mozilla.javascript.v8dtoa.CachedPowers:
    double kD_1_LOG2_10 -> kD_1_LOG2_10
    int CACHED_POWERS_SPACING -> CACHED_POWERS_SPACING
    org.mozilla.javascript.v8dtoa.CachedPowers$CachedPower[] CACHED_POWERS -> CACHED_POWERS
    int GRISU_CACHE_MAX_DISTANCE -> GRISU_CACHE_MAX_DISTANCE
    int GRISU_CACHE_OFFSET -> GRISU_CACHE_OFFSET
    boolean $assertionsDisabled -> $assertionsDisabled
    int getCachedPower(int,int,int,org.mozilla.javascript.v8dtoa.DiyFp) -> getCachedPower
org.mozilla.javascript.v8dtoa.CachedPowers$CachedPower -> org.mozilla.javascript.v8dtoa.CachedPowers$CachedPower:
    long significand -> significand
    short binaryExponent -> binaryExponent
    short decimalExponent -> decimalExponent
org.mozilla.javascript.v8dtoa.DiyFp -> org.mozilla.javascript.v8dtoa.DiyFp:
    long f -> f
    int e -> e
    int kSignificandSize -> kSignificandSize
    long kUint64MSB -> kUint64MSB
    boolean $assertionsDisabled -> $assertionsDisabled
    boolean uint64_gte(long,long) -> uint64_gte
    void subtract(org.mozilla.javascript.v8dtoa.DiyFp) -> subtract
    org.mozilla.javascript.v8dtoa.DiyFp minus(org.mozilla.javascript.v8dtoa.DiyFp,org.mozilla.javascript.v8dtoa.DiyFp) -> minus
    void multiply(org.mozilla.javascript.v8dtoa.DiyFp) -> multiply
    org.mozilla.javascript.v8dtoa.DiyFp times(org.mozilla.javascript.v8dtoa.DiyFp,org.mozilla.javascript.v8dtoa.DiyFp) -> times
    void normalize() -> normalize
    org.mozilla.javascript.v8dtoa.DiyFp normalize(org.mozilla.javascript.v8dtoa.DiyFp) -> normalize
    long f() -> f
    int e() -> e
    void setF(long) -> setF
    void setE(int) -> setE
    java.lang.String toString() -> toString
org.mozilla.javascript.v8dtoa.DoubleHelper -> org.mozilla.javascript.v8dtoa.DoubleHelper:
    long kSignMask -> kSignMask
    long kExponentMask -> kExponentMask
    long kSignificandMask -> kSignificandMask
    long kHiddenBit -> kHiddenBit
    int kSignificandSize -> kSignificandSize
    int kExponentBias -> kExponentBias
    int kDenormalExponent -> kDenormalExponent
    boolean $assertionsDisabled -> $assertionsDisabled
    org.mozilla.javascript.v8dtoa.DiyFp asDiyFp(long) -> asDiyFp
    org.mozilla.javascript.v8dtoa.DiyFp asNormalizedDiyFp(long) -> asNormalizedDiyFp
    int exponent(long) -> exponent
    long significand(long) -> significand
    boolean isDenormal(long) -> isDenormal
    boolean isSpecial(long) -> isSpecial
    boolean isNan(long) -> isNan
    boolean isInfinite(long) -> isInfinite
    int sign(long) -> sign
    void normalizedBoundaries(long,org.mozilla.javascript.v8dtoa.DiyFp,org.mozilla.javascript.v8dtoa.DiyFp) -> normalizedBoundaries
org.mozilla.javascript.v8dtoa.FastDtoa -> org.mozilla.javascript.v8dtoa.FastDtoa:
    int kFastDtoaMaximalLength -> kFastDtoaMaximalLength
    int minimal_target_exponent -> minimal_target_exponent
    int maximal_target_exponent -> maximal_target_exponent
    int kTen4 -> kTen4
    int kTen5 -> kTen5
    int kTen6 -> kTen6
    int kTen7 -> kTen7
    int kTen8 -> kTen8
    int kTen9 -> kTen9
    boolean $assertionsDisabled -> $assertionsDisabled
    boolean roundWeed(org.mozilla.javascript.v8dtoa.FastDtoaBuilder,long,long,long,long,long) -> roundWeed
    long biggestPowerTen(int,int) -> biggestPowerTen
    boolean uint64_lte(long,long) -> uint64_lte
    boolean digitGen(org.mozilla.javascript.v8dtoa.DiyFp,org.mozilla.javascript.v8dtoa.DiyFp,org.mozilla.javascript.v8dtoa.DiyFp,org.mozilla.javascript.v8dtoa.FastDtoaBuilder,int) -> digitGen
    boolean grisu3(double,org.mozilla.javascript.v8dtoa.FastDtoaBuilder) -> grisu3
    boolean dtoa(double,org.mozilla.javascript.v8dtoa.FastDtoaBuilder) -> dtoa
    java.lang.String numberToString(double) -> numberToString
    boolean numberToString(double,org.mozilla.javascript.v8dtoa.FastDtoaBuilder) -> numberToString
org.mozilla.javascript.v8dtoa.FastDtoaBuilder -> org.mozilla.javascript.v8dtoa.FastDtoaBuilder:
    char[] chars -> chars
    int end -> end
    int point -> point
    boolean formatted -> formatted
    char[] digits -> digits
    void append(char) -> append
    void decreaseLast() -> decreaseLast
    void reset() -> reset
    java.lang.String toString() -> toString
    java.lang.String format() -> format
    void toFixedFormat(int,int) -> toFixedFormat
    void toExponentialFormat(int,int) -> toExponentialFormat
org.mozilla.javascript.xml.XMLLib -> org.mozilla.javascript.xml.XMLLib:
    java.lang.Object XML_LIB_KEY -> XML_LIB_KEY
    org.mozilla.javascript.xml.XMLLib extractFromScopeOrNull(org.mozilla.javascript.Scriptable) -> extractFromScopeOrNull
    org.mozilla.javascript.xml.XMLLib extractFromScope(org.mozilla.javascript.Scriptable) -> extractFromScope
    org.mozilla.javascript.xml.XMLLib bindToScope(org.mozilla.javascript.Scriptable) -> bindToScope
    boolean isXMLName(org.mozilla.javascript.Context,java.lang.Object) -> isXMLName
    org.mozilla.javascript.Ref nameRef(org.mozilla.javascript.Context,java.lang.Object,org.mozilla.javascript.Scriptable,int) -> nameRef
    org.mozilla.javascript.Ref nameRef(org.mozilla.javascript.Context,java.lang.Object,java.lang.Object,org.mozilla.javascript.Scriptable,int) -> nameRef
    java.lang.String escapeAttributeValue(java.lang.Object) -> escapeAttributeValue
    java.lang.String escapeTextValue(java.lang.Object) -> escapeTextValue
    java.lang.Object toDefaultXmlNamespace(org.mozilla.javascript.Context,java.lang.Object) -> toDefaultXmlNamespace
    void setIgnoreComments(boolean) -> setIgnoreComments
    void setIgnoreWhitespace(boolean) -> setIgnoreWhitespace
    void setIgnoreProcessingInstructions(boolean) -> setIgnoreProcessingInstructions
    void setPrettyPrinting(boolean) -> setPrettyPrinting
    void setPrettyIndent(int) -> setPrettyIndent
    boolean isIgnoreComments() -> isIgnoreComments
    boolean isIgnoreProcessingInstructions() -> isIgnoreProcessingInstructions
    boolean isIgnoreWhitespace() -> isIgnoreWhitespace
    boolean isPrettyPrinting() -> isPrettyPrinting
    int getPrettyIndent() -> getPrettyIndent
org.mozilla.javascript.xml.XMLLib$Factory -> org.mozilla.javascript.xml.XMLLib$Factory:
    org.mozilla.javascript.xml.XMLLib$Factory create(java.lang.String) -> create
    java.lang.String getImplementationClassName() -> getImplementationClassName
org.mozilla.javascript.xml.XMLLib$Factory$1 -> org.mozilla.javascript.xml.XMLLib$Factory$1:
    java.lang.String val$className -> val$className
    java.lang.String getImplementationClassName() -> getImplementationClassName
org.mozilla.javascript.xml.XMLObject -> org.mozilla.javascript.xml.XMLObject:
    long serialVersionUID -> serialVersionUID
    boolean has(org.mozilla.javascript.Context,java.lang.Object) -> has
    java.lang.Object get(org.mozilla.javascript.Context,java.lang.Object) -> get
    void put(org.mozilla.javascript.Context,java.lang.Object,java.lang.Object) -> put
    boolean delete(org.mozilla.javascript.Context,java.lang.Object) -> delete
    java.lang.Object getFunctionProperty(org.mozilla.javascript.Context,java.lang.String) -> getFunctionProperty
    java.lang.Object getFunctionProperty(org.mozilla.javascript.Context,int) -> getFunctionProperty
    org.mozilla.javascript.Scriptable getExtraMethodSource(org.mozilla.javascript.Context) -> getExtraMethodSource
    org.mozilla.javascript.Ref memberRef(org.mozilla.javascript.Context,java.lang.Object,int) -> memberRef
    org.mozilla.javascript.Ref memberRef(org.mozilla.javascript.Context,java.lang.Object,java.lang.Object,int) -> memberRef
    org.mozilla.javascript.NativeWith enterWith(org.mozilla.javascript.Scriptable) -> enterWith
    org.mozilla.javascript.NativeWith enterDotQuery(org.mozilla.javascript.Scriptable) -> enterDotQuery
    java.lang.Object addValues(org.mozilla.javascript.Context,boolean,java.lang.Object) -> addValues
    java.lang.String getTypeOf() -> getTypeOf
org.mozilla.javascript.xml.impl.xmlbeans.LogicalEquality -> org.mozilla.javascript.xml.impl.xmlbeans.LogicalEquality:
    boolean nodesEqual(org.apache.xmlbeans.XmlCursor,org.apache.xmlbeans.XmlCursor) -> nodesEqual
    boolean elementsEqual(org.apache.xmlbeans.XmlCursor,org.apache.xmlbeans.XmlCursor) -> elementsEqual
    boolean attributeListsEqual(org.apache.xmlbeans.XmlCursor,org.apache.xmlbeans.XmlCursor) -> attributeListsEqual
    java.util.TreeMap loadAttributeMap(org.apache.xmlbeans.XmlCursor) -> loadAttributeMap
    boolean attributesEqual(org.apache.xmlbeans.XmlCursor,org.apache.xmlbeans.XmlCursor) -> attributesEqual
    boolean textNodesEqual(org.apache.xmlbeans.XmlCursor,org.apache.xmlbeans.XmlCursor) -> textNodesEqual
    boolean commentsEqual(org.apache.xmlbeans.XmlCursor,org.apache.xmlbeans.XmlCursor) -> commentsEqual
    boolean processingInstructionsEqual(org.apache.xmlbeans.XmlCursor,org.apache.xmlbeans.XmlCursor) -> processingInstructionsEqual
    boolean qnamesEqual(javax.xml.namespace.QName,javax.xml.namespace.QName) -> qnamesEqual
    void nextToken(org.apache.xmlbeans.XmlCursor) -> nextToken
org.mozilla.javascript.xml.impl.xmlbeans.Namespace -> org.mozilla.javascript.xml.impl.xmlbeans.Namespace:
    long serialVersionUID -> serialVersionUID
    java.lang.Object NAMESPACE_TAG -> NAMESPACE_TAG
    org.mozilla.javascript.xml.impl.xmlbeans.XMLLibImpl lib -> lib
    java.lang.String prefix -> prefix
    java.lang.String uri -> uri
    int Id_prefix -> Id_prefix
    int Id_uri -> Id_uri
    int MAX_INSTANCE_ID -> MAX_INSTANCE_ID
    int Id_constructor -> Id_constructor
    int Id_toString -> Id_toString
    int Id_toSource -> Id_toSource
    int MAX_PROTOTYPE_ID -> MAX_PROTOTYPE_ID
    void exportAsJSClass(boolean) -> exportAsJSClass
    java.lang.String uri() -> uri
    java.lang.String prefix() -> prefix
    java.lang.String toString() -> toString
    java.lang.String toLocaleString() -> toLocaleString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.Object equivalentValues(java.lang.Object) -> equivalentValues
    boolean equals(org.mozilla.javascript.xml.impl.xmlbeans.Namespace) -> equals
    java.lang.String getClassName() -> getClassName
    java.lang.Object getDefaultValue(java.lang.Class) -> getDefaultValue
    int getMaxInstanceId() -> getMaxInstanceId
    int findInstanceIdInfo(java.lang.String) -> findInstanceIdInfo
    java.lang.String getInstanceIdName(int) -> getInstanceIdName
    java.lang.Object getInstanceIdValue(int) -> getInstanceIdValue
    int findPrototypeId(java.lang.String) -> findPrototypeId
    void initPrototypeId(int) -> initPrototypeId
    java.lang.Object execIdCall(org.mozilla.javascript.IdFunctionObject,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> execIdCall
    org.mozilla.javascript.xml.impl.xmlbeans.Namespace realThis(org.mozilla.javascript.Scriptable,org.mozilla.javascript.IdFunctionObject) -> realThis
    java.lang.Object jsConstructor(org.mozilla.javascript.Context,boolean,java.lang.Object[]) -> jsConstructor
    java.lang.String js_toSource() -> js_toSource
    void toSourceImpl(java.lang.String,java.lang.String,java.lang.StringBuffer) -> toSourceImpl
org.mozilla.javascript.xml.impl.xmlbeans.NamespaceHelper -> org.mozilla.javascript.xml.impl.xmlbeans.NamespaceHelper:
    org.mozilla.javascript.xml.impl.xmlbeans.XMLLibImpl lib -> lib
    java.util.Map prefixToURI -> prefixToURI
    java.util.Map uriToPrefix -> uriToPrefix
    java.util.Set undeclared -> undeclared
    void declareNamespace(java.lang.String,java.lang.String,org.mozilla.javascript.ObjArray) -> declareNamespace
    void processName(org.apache.xmlbeans.XmlCursor,org.mozilla.javascript.ObjArray) -> processName
    void update(org.apache.xmlbeans.XmlCursor,org.mozilla.javascript.ObjArray) -> update
    java.lang.Object[] inScopeNamespaces(org.mozilla.javascript.xml.impl.xmlbeans.XMLLibImpl,org.apache.xmlbeans.XmlCursor) -> inScopeNamespaces
    org.mozilla.javascript.xml.impl.xmlbeans.Namespace getNamespace(org.mozilla.javascript.xml.impl.xmlbeans.XMLLibImpl,org.apache.xmlbeans.XmlCursor,java.lang.Object[]) -> getNamespace
    java.lang.Object[] namespaceDeclarations(org.mozilla.javascript.xml.impl.xmlbeans.XMLLibImpl,org.apache.xmlbeans.XmlCursor) -> namespaceDeclarations
    java.util.Map getAllNamespaces(org.mozilla.javascript.xml.impl.xmlbeans.XMLLibImpl,org.apache.xmlbeans.XmlCursor) -> getAllNamespaces
    void getNamespaces(org.apache.xmlbeans.XmlCursor,java.util.Map) -> getNamespaces
    void removeNamespace(org.apache.xmlbeans.XmlCursor,java.lang.String) -> removeNamespace
org.mozilla.javascript.xml.impl.xmlbeans.QName -> org.mozilla.javascript.xml.impl.xmlbeans.QName:
    long serialVersionUID -> serialVersionUID
    java.lang.Object QNAME_TAG -> QNAME_TAG
    org.mozilla.javascript.xml.impl.xmlbeans.XMLLibImpl lib -> lib
    java.lang.String prefix -> prefix
    java.lang.String localName -> localName
    java.lang.String uri -> uri
    int Id_localName -> Id_localName
    int Id_uri -> Id_uri
    int MAX_INSTANCE_ID -> MAX_INSTANCE_ID
    int Id_constructor -> Id_constructor
    int Id_toString -> Id_toString
    int Id_toSource -> Id_toSource
    int MAX_PROTOTYPE_ID -> MAX_PROTOTYPE_ID
    void exportAsJSClass(boolean) -> exportAsJSClass
    java.lang.String toString() -> toString
    java.lang.String localName() -> localName
    java.lang.String prefix() -> prefix
    java.lang.String uri() -> uri
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.Object equivalentValues(java.lang.Object) -> equivalentValues
    boolean equals(org.mozilla.javascript.xml.impl.xmlbeans.QName) -> equals
    java.lang.String getClassName() -> getClassName
    java.lang.Object getDefaultValue(java.lang.Class) -> getDefaultValue
    int getMaxInstanceId() -> getMaxInstanceId
    int findInstanceIdInfo(java.lang.String) -> findInstanceIdInfo
    java.lang.String getInstanceIdName(int) -> getInstanceIdName
    java.lang.Object getInstanceIdValue(int) -> getInstanceIdValue
    int findPrototypeId(java.lang.String) -> findPrototypeId
    void initPrototypeId(int) -> initPrototypeId
    java.lang.Object execIdCall(org.mozilla.javascript.IdFunctionObject,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> execIdCall
    org.mozilla.javascript.xml.impl.xmlbeans.QName realThis(org.mozilla.javascript.Scriptable,org.mozilla.javascript.IdFunctionObject) -> realThis
    java.lang.Object jsConstructor(org.mozilla.javascript.Context,boolean,java.lang.Object[]) -> jsConstructor
    java.lang.String js_toSource() -> js_toSource
    void toSourceImpl(java.lang.String,java.lang.String,java.lang.String,java.lang.StringBuffer) -> toSourceImpl
org.mozilla.javascript.xml.impl.xmlbeans.XML -> org.mozilla.javascript.xml.impl.xmlbeans.XML:
    long serialVersionUID -> serialVersionUID
    org.mozilla.javascript.xml.impl.xmlbeans.XML$XScriptAnnotation _anno -> _anno
    int APPEND_CHILD -> APPEND_CHILD
    int PREPEND_CHILD -> PREPEND_CHILD
    org.mozilla.javascript.xml.impl.xmlbeans.XML createEmptyXML(org.mozilla.javascript.xml.impl.xmlbeans.XMLLibImpl) -> createEmptyXML
    org.mozilla.javascript.xml.impl.xmlbeans.XML createXML(org.mozilla.javascript.xml.impl.xmlbeans.XMLLibImpl,org.apache.xmlbeans.XmlCursor) -> createXML
    org.mozilla.javascript.xml.impl.xmlbeans.XML createAttributeXML(org.mozilla.javascript.xml.impl.xmlbeans.XMLLibImpl,org.apache.xmlbeans.XmlCursor) -> createAttributeXML
    org.mozilla.javascript.xml.impl.xmlbeans.XML createTextElement(org.mozilla.javascript.xml.impl.xmlbeans.XMLLibImpl,javax.xml.namespace.QName,java.lang.String) -> createTextElement
    org.mozilla.javascript.xml.impl.xmlbeans.XML createFromXmlObject(org.mozilla.javascript.xml.impl.xmlbeans.XMLLibImpl,org.apache.xmlbeans.XmlObject) -> createFromXmlObject
    org.mozilla.javascript.xml.impl.xmlbeans.XML createFromJS(org.mozilla.javascript.xml.impl.xmlbeans.XMLLibImpl,java.lang.Object) -> createFromJS
    org.mozilla.javascript.xml.impl.xmlbeans.XML getFromAnnotation(org.mozilla.javascript.xml.impl.xmlbeans.XMLLibImpl,org.mozilla.javascript.xml.impl.xmlbeans.XML$XScriptAnnotation) -> getFromAnnotation
    org.apache.xmlbeans.XmlCursor$TokenType skipNonElements(org.apache.xmlbeans.XmlCursor) -> skipNonElements
    org.mozilla.javascript.xml.impl.xmlbeans.XML$XScriptAnnotation findAnnotation(org.apache.xmlbeans.XmlCursor) -> findAnnotation
    org.apache.xmlbeans.XmlOptions getOptions() -> getOptions
    java.lang.String dumpNode(org.apache.xmlbeans.XmlCursor,org.apache.xmlbeans.XmlOptions) -> dumpNode
    org.apache.xmlbeans.XmlCursor newCursor() -> newCursor
    boolean moveToChild(org.apache.xmlbeans.XmlCursor,long,boolean,boolean) -> moveToChild
    org.apache.xmlbeans.XmlCursor$TokenType tokenType() -> tokenType
    boolean moveSrcToDest(org.apache.xmlbeans.XmlCursor,org.apache.xmlbeans.XmlCursor,boolean) -> moveSrcToDest
    org.apache.xmlbeans.XmlCursor copy(org.apache.xmlbeans.XmlCursor) -> copy
    void insertChild(org.apache.xmlbeans.XmlCursor,java.lang.Object) -> insertChild
    void insertChild(org.mozilla.javascript.xml.impl.xmlbeans.XML,java.lang.Object,int) -> insertChild
    void removeToken(org.apache.xmlbeans.XmlCursor) -> removeToken
    void removeChild(long) -> removeChild
    javax.xml.namespace.QName computeQName(java.lang.Object) -> computeQName
    void replace(org.apache.xmlbeans.XmlCursor,org.mozilla.javascript.xml.impl.xmlbeans.XML) -> replace
    boolean doPut(org.mozilla.javascript.xml.impl.xmlbeans.XMLName,org.mozilla.javascript.xml.impl.xmlbeans.XML,org.mozilla.javascript.xml.impl.xmlbeans.XMLObjectImpl) -> doPut
    org.mozilla.javascript.xml.impl.xmlbeans.XML makeXmlFromString(org.mozilla.javascript.xml.impl.xmlbeans.XMLLibImpl,org.mozilla.javascript.xml.impl.xmlbeans.XMLName,java.lang.String) -> makeXmlFromString
    org.mozilla.javascript.xml.impl.xmlbeans.XMLList matchAttributes(org.mozilla.javascript.xml.impl.xmlbeans.XMLName) -> matchAttributes
    org.mozilla.javascript.xml.impl.xmlbeans.XML createAttributeObject(org.apache.xmlbeans.XmlCursor) -> createAttributeObject
    java.lang.String getClassName() -> getClassName
    java.lang.Object get(int,org.mozilla.javascript.Scriptable) -> get
    boolean hasXMLProperty(org.mozilla.javascript.xml.impl.xmlbeans.XMLName) -> hasXMLProperty
    boolean has(int,org.mozilla.javascript.Scriptable) -> has
    java.lang.Object[] getIds() -> getIds
    java.lang.Object[] getIdsForDebug() -> getIdsForDebug
    java.lang.Object getXMLProperty(org.mozilla.javascript.xml.impl.xmlbeans.XMLName) -> getXMLProperty
    void putXMLProperty(org.mozilla.javascript.xml.impl.xmlbeans.XMLName,java.lang.Object) -> putXMLProperty
    void put(int,org.mozilla.javascript.Scriptable,java.lang.Object) -> put
    void deleteXMLProperty(org.mozilla.javascript.xml.impl.xmlbeans.XMLName) -> deleteXMLProperty
    void delete(int) -> delete
    org.mozilla.javascript.xml.impl.xmlbeans.XML$XScriptAnnotation getAnnotation() -> getAnnotation
    void changeNS(java.lang.String,java.lang.String) -> changeNS
    void remove() -> remove
    void replaceAll(org.mozilla.javascript.xml.impl.xmlbeans.XML) -> replaceAll
    void setAttribute(org.mozilla.javascript.xml.impl.xmlbeans.XMLName,java.lang.Object) -> setAttribute
    org.mozilla.javascript.xml.impl.xmlbeans.XMLList allChildNodes(java.lang.String) -> allChildNodes
    org.mozilla.javascript.xml.impl.xmlbeans.XMLList matchDescendantAttributes(org.mozilla.javascript.xml.impl.xmlbeans.XMLName) -> matchDescendantAttributes
    org.mozilla.javascript.xml.impl.xmlbeans.XMLList matchDescendantChildren(org.mozilla.javascript.xml.impl.xmlbeans.XMLName) -> matchDescendantChildren
    org.mozilla.javascript.xml.impl.xmlbeans.XMLList matchChildren(org.apache.xmlbeans.XmlCursor$TokenType) -> matchChildren
    org.mozilla.javascript.xml.impl.xmlbeans.XMLList matchChildren(org.apache.xmlbeans.XmlCursor$TokenType,org.mozilla.javascript.xml.impl.xmlbeans.XMLName) -> matchChildren
    boolean qnameMatches(org.mozilla.javascript.xml.impl.xmlbeans.XMLName,javax.xml.namespace.QName) -> qnameMatches
    org.mozilla.javascript.xml.impl.xmlbeans.XML addNamespace(org.mozilla.javascript.xml.impl.xmlbeans.Namespace) -> addNamespace
    org.mozilla.javascript.xml.impl.xmlbeans.XML appendChild(java.lang.Object) -> appendChild
    org.mozilla.javascript.xml.impl.xmlbeans.XMLList attribute(org.mozilla.javascript.xml.impl.xmlbeans.XMLName) -> attribute
    org.mozilla.javascript.xml.impl.xmlbeans.XMLList attributes() -> attributes
    org.mozilla.javascript.xml.impl.xmlbeans.XMLList child(long) -> child
    org.mozilla.javascript.xml.impl.xmlbeans.XMLList child(org.mozilla.javascript.xml.impl.xmlbeans.XMLName) -> child
    org.mozilla.javascript.xml.impl.xmlbeans.XML getXmlChild(long) -> getXmlChild
    int childIndex() -> childIndex
    org.mozilla.javascript.xml.impl.xmlbeans.XMLList children() -> children
    org.mozilla.javascript.xml.impl.xmlbeans.XMLList comments() -> comments
    boolean contains(java.lang.Object) -> contains
    java.lang.Object copy() -> copy
    org.mozilla.javascript.xml.impl.xmlbeans.XMLList descendants(org.mozilla.javascript.xml.impl.xmlbeans.XMLName) -> descendants
    java.lang.Object[] inScopeNamespaces() -> inScopeNamespaces
    org.mozilla.javascript.xml.impl.xmlbeans.XML insertChildAfter(java.lang.Object,java.lang.Object) -> insertChildAfter
    org.mozilla.javascript.xml.impl.xmlbeans.XML insertChildBefore(java.lang.Object,java.lang.Object) -> insertChildBefore
    boolean hasOwnProperty(org.mozilla.javascript.xml.impl.xmlbeans.XMLName) -> hasOwnProperty
    boolean hasComplexContent() -> hasComplexContent
    boolean hasSimpleContent() -> hasSimpleContent
    int length() -> length
    java.lang.String localName() -> localName
    org.mozilla.javascript.xml.impl.xmlbeans.QName name() -> name
    java.lang.Object namespace(java.lang.String) -> namespace
    java.lang.Object[] namespaceDeclarations() -> namespaceDeclarations
    java.lang.Object nodeKind() -> nodeKind
    void normalize() -> normalize
    java.lang.Object parent() -> parent
    org.mozilla.javascript.xml.impl.xmlbeans.XML prependChild(java.lang.Object) -> prependChild
    java.lang.Object processingInstructions(org.mozilla.javascript.xml.impl.xmlbeans.XMLName) -> processingInstructions
    boolean propertyIsEnumerable(java.lang.Object) -> propertyIsEnumerable
    org.mozilla.javascript.xml.impl.xmlbeans.XML removeNamespace(org.mozilla.javascript.xml.impl.xmlbeans.Namespace) -> removeNamespace
    org.mozilla.javascript.xml.impl.xmlbeans.XML replace(long,java.lang.Object) -> replace
    org.mozilla.javascript.xml.impl.xmlbeans.XML replace(org.mozilla.javascript.xml.impl.xmlbeans.XMLName,java.lang.Object) -> replace
    org.mozilla.javascript.xml.impl.xmlbeans.XML setChildren(java.lang.Object) -> setChildren
    void setLocalName(java.lang.String) -> setLocalName
    void setName(org.mozilla.javascript.xml.impl.xmlbeans.QName) -> setName
    void setNamespace(org.mozilla.javascript.xml.impl.xmlbeans.Namespace) -> setNamespace
    org.mozilla.javascript.xml.impl.xmlbeans.XMLList text() -> text
    java.lang.String toString() -> toString
    java.lang.String toSource(int) -> toSource
    java.lang.String toXMLString(int) -> toXMLString
    java.lang.Object valueOf() -> valueOf
    boolean equivalentXml(java.lang.Object) -> equivalentXml
    org.mozilla.javascript.xml.impl.xmlbeans.XMLList getPropertyList(org.mozilla.javascript.xml.impl.xmlbeans.XMLName) -> getPropertyList
    java.lang.Object jsConstructor(org.mozilla.javascript.Context,boolean,java.lang.Object[]) -> jsConstructor
    org.mozilla.javascript.Scriptable getExtraMethodSource(org.mozilla.javascript.Context) -> getExtraMethodSource
    org.apache.xmlbeans.XmlObject getXmlObject() -> getXmlObject
    org.apache.xmlbeans.XmlCursor$TokenType access$000(org.apache.xmlbeans.XmlCursor) -> access$000
org.mozilla.javascript.xml.impl.xmlbeans.XML$NamespaceDeclarations -> org.mozilla.javascript.xml.impl.xmlbeans.XML$NamespaceDeclarations:
    int _prefixIdx -> _prefixIdx
    java.lang.StringBuffer _namespaceDecls -> _namespaceDecls
    java.lang.String _defaultNSURI -> _defaultNSURI
    void addDecl(java.lang.String,java.lang.String) -> addDecl
    java.lang.String getNextPrefix(java.lang.String) -> getNextPrefix
    boolean isAnyDefaultNamespace() -> isAnyDefaultNamespace
    java.lang.String getDeclarations() -> getDeclarations
org.mozilla.javascript.xml.impl.xmlbeans.XML$XScriptAnnotation -> org.mozilla.javascript.xml.impl.xmlbeans.XML$XScriptAnnotation:
    long serialVersionUID -> serialVersionUID
    javax.xml.namespace.QName _name -> _name
    org.mozilla.javascript.xml.impl.xmlbeans.XML _xScriptXML -> _xScriptXML
org.mozilla.javascript.xml.impl.xmlbeans.XMLCtor -> org.mozilla.javascript.xml.impl.xmlbeans.XMLCtor:
    long serialVersionUID -> serialVersionUID
    java.lang.Object XMLCTOR_TAG -> XMLCTOR_TAG
    org.mozilla.javascript.xml.impl.xmlbeans.XMLLibImpl lib -> lib
    int Id_ignoreComments -> Id_ignoreComments
    int Id_ignoreProcessingInstructions -> Id_ignoreProcessingInstructions
    int Id_ignoreWhitespace -> Id_ignoreWhitespace
    int Id_prettyIndent -> Id_prettyIndent
    int Id_prettyPrinting -> Id_prettyPrinting
    int MAX_INSTANCE_ID -> MAX_INSTANCE_ID
    int Id_defaultSettings -> Id_defaultSettings
    int Id_settings -> Id_settings
    int Id_setSettings -> Id_setSettings
    int MAX_FUNCTION_ID -> MAX_FUNCTION_ID
    void writeSetting(org.mozilla.javascript.Scriptable) -> writeSetting
    void readSettings(org.mozilla.javascript.Scriptable) -> readSettings
    int getMaxInstanceId() -> getMaxInstanceId
    int findInstanceIdInfo(java.lang.String) -> findInstanceIdInfo
    java.lang.String getInstanceIdName(int) -> getInstanceIdName
    java.lang.Object getInstanceIdValue(int) -> getInstanceIdValue
    void setInstanceIdValue(int,java.lang.Object) -> setInstanceIdValue
    int findPrototypeId(java.lang.String) -> findPrototypeId
    void initPrototypeId(int) -> initPrototypeId
    java.lang.Object execIdCall(org.mozilla.javascript.IdFunctionObject,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> execIdCall
org.mozilla.javascript.xml.impl.xmlbeans.XMLLibImpl -> org.mozilla.javascript.xml.impl.xmlbeans.XMLLibImpl:
    long serialVersionUID -> serialVersionUID
    org.mozilla.javascript.Scriptable globalScope -> globalScope
    org.mozilla.javascript.xml.impl.xmlbeans.XML xmlPrototype -> xmlPrototype
    org.mozilla.javascript.xml.impl.xmlbeans.XMLList xmlListPrototype -> xmlListPrototype
    org.mozilla.javascript.xml.impl.xmlbeans.Namespace namespacePrototype -> namespacePrototype
    org.mozilla.javascript.xml.impl.xmlbeans.QName qnamePrototype -> qnamePrototype
    boolean ignoreComments -> ignoreComments
    boolean ignoreProcessingInstructions -> ignoreProcessingInstructions
    boolean ignoreWhitespace -> ignoreWhitespace
    boolean prettyPrinting -> prettyPrinting
    int prettyIndent -> prettyIndent
    org.mozilla.javascript.Scriptable globalScope() -> globalScope
    void init(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,boolean) -> init
    void exportToScope(boolean) -> exportToScope
    void defaultSettings() -> defaultSettings
    org.mozilla.javascript.xml.impl.xmlbeans.XMLName toAttributeName(org.mozilla.javascript.Context,java.lang.Object) -> toAttributeName
    java.lang.RuntimeException badXMLName(java.lang.Object) -> badXMLName
    org.mozilla.javascript.xml.impl.xmlbeans.XMLName toXMLName(org.mozilla.javascript.Context,java.lang.Object) -> toXMLName
    org.mozilla.javascript.xml.impl.xmlbeans.XMLName toXMLNameOrIndex(org.mozilla.javascript.Context,java.lang.Object) -> toXMLNameOrIndex
    org.mozilla.javascript.xml.impl.xmlbeans.XMLName toXMLNameFromString(org.mozilla.javascript.Context,java.lang.String) -> toXMLNameFromString
    org.mozilla.javascript.xml.impl.xmlbeans.Namespace constructNamespace(org.mozilla.javascript.Context,java.lang.Object) -> constructNamespace
    org.mozilla.javascript.xml.impl.xmlbeans.Namespace castToNamespace(org.mozilla.javascript.Context,java.lang.Object) -> castToNamespace
    org.mozilla.javascript.xml.impl.xmlbeans.Namespace constructNamespace(org.mozilla.javascript.Context) -> constructNamespace
    org.mozilla.javascript.xml.impl.xmlbeans.Namespace constructNamespace(org.mozilla.javascript.Context,java.lang.Object,java.lang.Object) -> constructNamespace
    java.lang.String getDefaultNamespaceURI(org.mozilla.javascript.Context) -> getDefaultNamespaceURI
    org.mozilla.javascript.xml.impl.xmlbeans.Namespace getDefaultNamespace(org.mozilla.javascript.Context) -> getDefaultNamespace
    org.mozilla.javascript.xml.impl.xmlbeans.QName castToQName(org.mozilla.javascript.Context,java.lang.Object) -> castToQName
    org.mozilla.javascript.xml.impl.xmlbeans.QName constructQName(org.mozilla.javascript.Context,java.lang.Object) -> constructQName
    org.mozilla.javascript.xml.impl.xmlbeans.QName constructQNameFromString(org.mozilla.javascript.Context,java.lang.String) -> constructQNameFromString
    org.mozilla.javascript.xml.impl.xmlbeans.QName constructQName(org.mozilla.javascript.Context,java.lang.Object,java.lang.Object) -> constructQName
    java.lang.Object addXMLObjects(org.mozilla.javascript.Context,org.mozilla.javascript.xml.XMLObject,org.mozilla.javascript.xml.XMLObject) -> addXMLObjects
    boolean isXMLName(org.mozilla.javascript.Context,java.lang.Object) -> isXMLName
    boolean isNCNameStartChar(int) -> isNCNameStartChar
    boolean isNCNameChar(int) -> isNCNameChar
    org.mozilla.javascript.xml.impl.xmlbeans.XMLName toQualifiedName(org.mozilla.javascript.Context,java.lang.Object,java.lang.Object) -> toQualifiedName
    org.mozilla.javascript.Ref nameRef(org.mozilla.javascript.Context,java.lang.Object,org.mozilla.javascript.Scriptable,int) -> nameRef
    org.mozilla.javascript.Ref nameRef(org.mozilla.javascript.Context,java.lang.Object,java.lang.Object,org.mozilla.javascript.Scriptable,int) -> nameRef
    org.mozilla.javascript.Ref xmlPrimaryReference(org.mozilla.javascript.Context,org.mozilla.javascript.xml.impl.xmlbeans.XMLName,org.mozilla.javascript.Scriptable) -> xmlPrimaryReference
    java.lang.String escapeAttributeValue(java.lang.Object) -> escapeAttributeValue
    java.lang.String escapeTextValue(java.lang.Object) -> escapeTextValue
    java.lang.Object toDefaultXmlNamespace(org.mozilla.javascript.Context,java.lang.Object) -> toDefaultXmlNamespace
org.mozilla.javascript.xml.impl.xmlbeans.XMLList -> org.mozilla.javascript.xml.impl.xmlbeans.XMLList:
    long serialVersionUID -> serialVersionUID
    org.mozilla.javascript.xml.impl.xmlbeans.XMLList$AnnotationList _annos -> _annos
    org.mozilla.javascript.xml.impl.xmlbeans.XMLObjectImpl targetObject -> targetObject
    javax.xml.namespace.QName targetProperty -> targetProperty
    void setTargets(org.mozilla.javascript.xml.impl.xmlbeans.XMLObjectImpl,javax.xml.namespace.QName) -> setTargets
    org.mozilla.javascript.xml.impl.xmlbeans.XML getXmlFromAnnotation(int) -> getXmlFromAnnotation
    void internalRemoveFromList(int) -> internalRemoveFromList
    void replace(int,org.mozilla.javascript.xml.impl.xmlbeans.XML) -> replace
    void insert(int,org.mozilla.javascript.xml.impl.xmlbeans.XML) -> insert
    java.lang.String getClassName() -> getClassName
    java.lang.Object get(int,org.mozilla.javascript.Scriptable) -> get
    boolean hasXMLProperty(org.mozilla.javascript.xml.impl.xmlbeans.XMLName) -> hasXMLProperty
    boolean has(int,org.mozilla.javascript.Scriptable) -> has
    void putXMLProperty(org.mozilla.javascript.xml.impl.xmlbeans.XMLName,java.lang.Object) -> putXMLProperty
    java.lang.Object getXMLProperty(org.mozilla.javascript.xml.impl.xmlbeans.XMLName) -> getXMLProperty
    void put(int,org.mozilla.javascript.Scriptable,java.lang.Object) -> put
    void deleteXMLProperty(org.mozilla.javascript.xml.impl.xmlbeans.XMLName) -> deleteXMLProperty
    void delete(int) -> delete
    java.lang.Object[] getIds() -> getIds
    java.lang.Object[] getIdsForDebug() -> getIdsForDebug
    void remove() -> remove
    org.mozilla.javascript.xml.impl.xmlbeans.XML item(int) -> item
    void setAttribute(org.mozilla.javascript.xml.impl.xmlbeans.XMLName,java.lang.Object) -> setAttribute
    void addToList(java.lang.Object) -> addToList
    org.mozilla.javascript.xml.impl.xmlbeans.XML addNamespace(org.mozilla.javascript.xml.impl.xmlbeans.Namespace) -> addNamespace
    org.mozilla.javascript.xml.impl.xmlbeans.XML appendChild(java.lang.Object) -> appendChild
    org.mozilla.javascript.xml.impl.xmlbeans.XMLList attribute(org.mozilla.javascript.xml.impl.xmlbeans.XMLName) -> attribute
    org.mozilla.javascript.xml.impl.xmlbeans.XMLList attributes() -> attributes
    org.mozilla.javascript.xml.impl.xmlbeans.XMLList child(long) -> child
    org.mozilla.javascript.xml.impl.xmlbeans.XMLList child(org.mozilla.javascript.xml.impl.xmlbeans.XMLName) -> child
    int childIndex() -> childIndex
    org.mozilla.javascript.xml.impl.xmlbeans.XMLList children() -> children
    org.mozilla.javascript.xml.impl.xmlbeans.XMLList comments() -> comments
    boolean contains(java.lang.Object) -> contains
    java.lang.Object copy() -> copy
    org.mozilla.javascript.xml.impl.xmlbeans.XMLList descendants(org.mozilla.javascript.xml.impl.xmlbeans.XMLName) -> descendants
    java.lang.Object[] inScopeNamespaces() -> inScopeNamespaces
    org.mozilla.javascript.xml.impl.xmlbeans.XML insertChildAfter(java.lang.Object,java.lang.Object) -> insertChildAfter
    org.mozilla.javascript.xml.impl.xmlbeans.XML insertChildBefore(java.lang.Object,java.lang.Object) -> insertChildBefore
    boolean hasOwnProperty(org.mozilla.javascript.xml.impl.xmlbeans.XMLName) -> hasOwnProperty
    boolean hasComplexContent() -> hasComplexContent
    boolean hasSimpleContent() -> hasSimpleContent
    int length() -> length
    java.lang.String localName() -> localName
    org.mozilla.javascript.xml.impl.xmlbeans.QName name() -> name
    java.lang.Object namespace(java.lang.String) -> namespace
    java.lang.Object[] namespaceDeclarations() -> namespaceDeclarations
    java.lang.Object nodeKind() -> nodeKind
    void normalize() -> normalize
    java.lang.Object parent() -> parent
    org.mozilla.javascript.xml.impl.xmlbeans.XML prependChild(java.lang.Object) -> prependChild
    java.lang.Object processingInstructions(org.mozilla.javascript.xml.impl.xmlbeans.XMLName) -> processingInstructions
    boolean propertyIsEnumerable(java.lang.Object) -> propertyIsEnumerable
    org.mozilla.javascript.xml.impl.xmlbeans.XML removeNamespace(org.mozilla.javascript.xml.impl.xmlbeans.Namespace) -> removeNamespace
    org.mozilla.javascript.xml.impl.xmlbeans.XML replace(long,java.lang.Object) -> replace
    org.mozilla.javascript.xml.impl.xmlbeans.XML replace(org.mozilla.javascript.xml.impl.xmlbeans.XMLName,java.lang.Object) -> replace
    org.mozilla.javascript.xml.impl.xmlbeans.XML setChildren(java.lang.Object) -> setChildren
    void setLocalName(java.lang.String) -> setLocalName
    void setName(org.mozilla.javascript.xml.impl.xmlbeans.QName) -> setName
    void setNamespace(org.mozilla.javascript.xml.impl.xmlbeans.Namespace) -> setNamespace
    org.mozilla.javascript.xml.impl.xmlbeans.XMLList text() -> text
    java.lang.String toString() -> toString
    java.lang.String toSource(int) -> toSource
    java.lang.String toXMLString(int) -> toXMLString
    java.lang.Object valueOf() -> valueOf
    boolean equivalentXml(java.lang.Object) -> equivalentXml
    org.mozilla.javascript.xml.impl.xmlbeans.XMLList getPropertyList(org.mozilla.javascript.xml.impl.xmlbeans.XMLName) -> getPropertyList
    java.lang.Object applyOrCall(boolean,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> applyOrCall
    java.lang.Object jsConstructor(org.mozilla.javascript.Context,boolean,java.lang.Object[]) -> jsConstructor
    org.apache.xmlbeans.XmlObject getXmlObject() -> getXmlObject
    org.mozilla.javascript.Scriptable getExtraMethodSource(org.mozilla.javascript.Context) -> getExtraMethodSource
    java.lang.Object call(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> call
    org.mozilla.javascript.Scriptable construct(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> construct
org.mozilla.javascript.xml.impl.xmlbeans.XMLList$AnnotationList -> org.mozilla.javascript.xml.impl.xmlbeans.XMLList$AnnotationList:
    java.util.Vector v -> v
    void add(org.mozilla.javascript.xml.impl.xmlbeans.XML$XScriptAnnotation) -> add
    org.mozilla.javascript.xml.impl.xmlbeans.XML$XScriptAnnotation item(int) -> item
    void remove(int) -> remove
    int length() -> length
org.mozilla.javascript.xml.impl.xmlbeans.XMLName -> org.mozilla.javascript.xml.impl.xmlbeans.XMLName:
    long serialVersionUID -> serialVersionUID
    java.lang.String uri -> uri
    java.lang.String localName -> localName
    boolean isAttributeName -> isAttributeName
    boolean isDescendants -> isDescendants
    org.mozilla.javascript.xml.impl.xmlbeans.XMLObjectImpl xmlObject -> xmlObject
    org.mozilla.javascript.xml.impl.xmlbeans.XMLName formStar() -> formStar
    org.mozilla.javascript.xml.impl.xmlbeans.XMLName formProperty(java.lang.String,java.lang.String) -> formProperty
    void initXMLObject(org.mozilla.javascript.xml.impl.xmlbeans.XMLObjectImpl) -> initXMLObject
    java.lang.String uri() -> uri
    java.lang.String localName() -> localName
    boolean isAttributeName() -> isAttributeName
    void setAttributeName() -> setAttributeName
    boolean isDescendants() -> isDescendants
    void setIsDescendants() -> setIsDescendants
    boolean has(org.mozilla.javascript.Context) -> has
    java.lang.Object get(org.mozilla.javascript.Context) -> get
    java.lang.Object set(org.mozilla.javascript.Context,java.lang.Object) -> set
    boolean delete(org.mozilla.javascript.Context) -> delete
    java.lang.String toString() -> toString
org.mozilla.javascript.xml.impl.xmlbeans.XMLObjectImpl -> org.mozilla.javascript.xml.impl.xmlbeans.XMLObjectImpl:
    java.lang.Object XMLOBJECT_TAG -> XMLOBJECT_TAG
    org.mozilla.javascript.xml.impl.xmlbeans.XMLLibImpl lib -> lib
    boolean prototypeFlag -> prototypeFlag
    int Id_constructor -> Id_constructor
    int Id_addNamespace -> Id_addNamespace
    int Id_appendChild -> Id_appendChild
    int Id_attribute -> Id_attribute
    int Id_attributes -> Id_attributes
    int Id_child -> Id_child
    int Id_childIndex -> Id_childIndex
    int Id_children -> Id_children
    int Id_comments -> Id_comments
    int Id_contains -> Id_contains
    int Id_copy -> Id_copy
    int Id_descendants -> Id_descendants
    int Id_inScopeNamespaces -> Id_inScopeNamespaces
    int Id_insertChildAfter -> Id_insertChildAfter
    int Id_insertChildBefore -> Id_insertChildBefore
    int Id_hasOwnProperty -> Id_hasOwnProperty
    int Id_hasComplexContent -> Id_hasComplexContent
    int Id_hasSimpleContent -> Id_hasSimpleContent
    int Id_length -> Id_length
    int Id_localName -> Id_localName
    int Id_name -> Id_name
    int Id_namespace -> Id_namespace
    int Id_namespaceDeclarations -> Id_namespaceDeclarations
    int Id_nodeKind -> Id_nodeKind
    int Id_normalize -> Id_normalize
    int Id_parent -> Id_parent
    int Id_prependChild -> Id_prependChild
    int Id_processingInstructions -> Id_processingInstructions
    int Id_propertyIsEnumerable -> Id_propertyIsEnumerable
    int Id_removeNamespace -> Id_removeNamespace
    int Id_replace -> Id_replace
    int Id_setChildren -> Id_setChildren
    int Id_setLocalName -> Id_setLocalName
    int Id_setName -> Id_setName
    int Id_setNamespace -> Id_setNamespace
    int Id_text -> Id_text
    int Id_toString -> Id_toString
    int Id_toSource -> Id_toSource
    int Id_toXMLString -> Id_toXMLString
    int Id_valueOf -> Id_valueOf
    int Id_getXmlObject -> Id_getXmlObject
    int MAX_PROTOTYPE_ID -> MAX_PROTOTYPE_ID
    boolean hasXMLProperty(org.mozilla.javascript.xml.impl.xmlbeans.XMLName) -> hasXMLProperty
    java.lang.Object getXMLProperty(org.mozilla.javascript.xml.impl.xmlbeans.XMLName) -> getXMLProperty
    void putXMLProperty(org.mozilla.javascript.xml.impl.xmlbeans.XMLName,java.lang.Object) -> putXMLProperty
    void deleteXMLProperty(org.mozilla.javascript.xml.impl.xmlbeans.XMLName) -> deleteXMLProperty
    boolean equivalentXml(java.lang.Object) -> equivalentXml
    org.mozilla.javascript.xml.impl.xmlbeans.XML addNamespace(org.mozilla.javascript.xml.impl.xmlbeans.Namespace) -> addNamespace
    org.mozilla.javascript.xml.impl.xmlbeans.XML appendChild(java.lang.Object) -> appendChild
    org.mozilla.javascript.xml.impl.xmlbeans.XMLList attribute(org.mozilla.javascript.xml.impl.xmlbeans.XMLName) -> attribute
    org.mozilla.javascript.xml.impl.xmlbeans.XMLList attributes() -> attributes
    org.mozilla.javascript.xml.impl.xmlbeans.XMLList child(long) -> child
    org.mozilla.javascript.xml.impl.xmlbeans.XMLList child(org.mozilla.javascript.xml.impl.xmlbeans.XMLName) -> child
    int childIndex() -> childIndex
    org.mozilla.javascript.xml.impl.xmlbeans.XMLList children() -> children
    org.mozilla.javascript.xml.impl.xmlbeans.XMLList comments() -> comments
    boolean contains(java.lang.Object) -> contains
    java.lang.Object copy() -> copy
    org.mozilla.javascript.xml.impl.xmlbeans.XMLList descendants(org.mozilla.javascript.xml.impl.xmlbeans.XMLName) -> descendants
    java.lang.Object[] inScopeNamespaces() -> inScopeNamespaces
    org.mozilla.javascript.xml.impl.xmlbeans.XML insertChildAfter(java.lang.Object,java.lang.Object) -> insertChildAfter
    org.mozilla.javascript.xml.impl.xmlbeans.XML insertChildBefore(java.lang.Object,java.lang.Object) -> insertChildBefore
    boolean hasOwnProperty(org.mozilla.javascript.xml.impl.xmlbeans.XMLName) -> hasOwnProperty
    boolean hasComplexContent() -> hasComplexContent
    boolean hasSimpleContent() -> hasSimpleContent
    int length() -> length
    java.lang.String localName() -> localName
    org.mozilla.javascript.xml.impl.xmlbeans.QName name() -> name
    java.lang.Object namespace(java.lang.String) -> namespace
    java.lang.Object[] namespaceDeclarations() -> namespaceDeclarations
    java.lang.Object nodeKind() -> nodeKind
    void normalize() -> normalize
    java.lang.Object parent() -> parent
    org.mozilla.javascript.xml.impl.xmlbeans.XML prependChild(java.lang.Object) -> prependChild
    java.lang.Object processingInstructions(org.mozilla.javascript.xml.impl.xmlbeans.XMLName) -> processingInstructions
    boolean propertyIsEnumerable(java.lang.Object) -> propertyIsEnumerable
    org.mozilla.javascript.xml.impl.xmlbeans.XML removeNamespace(org.mozilla.javascript.xml.impl.xmlbeans.Namespace) -> removeNamespace
    org.mozilla.javascript.xml.impl.xmlbeans.XML replace(long,java.lang.Object) -> replace
    org.mozilla.javascript.xml.impl.xmlbeans.XML replace(org.mozilla.javascript.xml.impl.xmlbeans.XMLName,java.lang.Object) -> replace
    org.mozilla.javascript.xml.impl.xmlbeans.XML setChildren(java.lang.Object) -> setChildren
    void setLocalName(java.lang.String) -> setLocalName
    void setName(org.mozilla.javascript.xml.impl.xmlbeans.QName) -> setName
    void setNamespace(org.mozilla.javascript.xml.impl.xmlbeans.Namespace) -> setNamespace
    org.mozilla.javascript.xml.impl.xmlbeans.XMLList text() -> text
    java.lang.String toString() -> toString
    java.lang.String toSource(int) -> toSource
    java.lang.String toXMLString(int) -> toXMLString
    java.lang.Object valueOf() -> valueOf
    org.apache.xmlbeans.XmlObject getXmlObject() -> getXmlObject
    java.lang.Object jsConstructor(org.mozilla.javascript.Context,boolean,java.lang.Object[]) -> jsConstructor
    java.lang.Object getDefaultValue(java.lang.Class) -> getDefaultValue
    java.lang.Object equivalentValues(java.lang.Object) -> equivalentValues
    org.mozilla.javascript.xml.XMLLib lib() -> lib
    boolean has(org.mozilla.javascript.Context,java.lang.Object) -> has
    boolean has(java.lang.String,org.mozilla.javascript.Scriptable) -> has
    java.lang.Object get(org.mozilla.javascript.Context,java.lang.Object) -> get
    java.lang.Object get(java.lang.String,org.mozilla.javascript.Scriptable) -> get
    void put(org.mozilla.javascript.Context,java.lang.Object,java.lang.Object) -> put
    void put(java.lang.String,org.mozilla.javascript.Scriptable,java.lang.Object) -> put
    boolean delete(org.mozilla.javascript.Context,java.lang.Object) -> delete
    void delete(java.lang.String) -> delete
    java.lang.Object getFunctionProperty(org.mozilla.javascript.Context,int) -> getFunctionProperty
    java.lang.Object getFunctionProperty(org.mozilla.javascript.Context,java.lang.String) -> getFunctionProperty
    org.mozilla.javascript.Ref memberRef(org.mozilla.javascript.Context,java.lang.Object,int) -> memberRef
    org.mozilla.javascript.Ref memberRef(org.mozilla.javascript.Context,java.lang.Object,java.lang.Object,int) -> memberRef
    org.mozilla.javascript.NativeWith enterWith(org.mozilla.javascript.Scriptable) -> enterWith
    org.mozilla.javascript.NativeWith enterDotQuery(org.mozilla.javascript.Scriptable) -> enterDotQuery
    java.lang.Object addValues(org.mozilla.javascript.Context,boolean,java.lang.Object) -> addValues
    void exportAsJSClass(boolean) -> exportAsJSClass
    int findPrototypeId(java.lang.String) -> findPrototypeId
    void initPrototypeId(int) -> initPrototypeId
    java.lang.Object execIdCall(org.mozilla.javascript.IdFunctionObject,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> execIdCall
    java.lang.Object arg(java.lang.Object[],int) -> arg
org.mozilla.javascript.xml.impl.xmlbeans.XMLWithScope -> org.mozilla.javascript.xml.impl.xmlbeans.XMLWithScope:
    long serialVersionUID -> serialVersionUID
    org.mozilla.javascript.xml.impl.xmlbeans.XMLLibImpl lib -> lib
    int _currIndex -> _currIndex
    org.mozilla.javascript.xml.impl.xmlbeans.XMLList _xmlList -> _xmlList
    org.mozilla.javascript.xml.XMLObject _dqPrototype -> _dqPrototype
    void initAsDotQuery() -> initAsDotQuery
    java.lang.Object updateDotQuery(boolean) -> updateDotQuery
org.mozilla.javascript.xmlimpl.Namespace -> org.mozilla.javascript.xmlimpl.Namespace:
    long serialVersionUID -> serialVersionUID
    java.lang.Object NAMESPACE_TAG -> NAMESPACE_TAG
    org.mozilla.javascript.xmlimpl.Namespace prototype -> prototype
    org.mozilla.javascript.xmlimpl.XmlNode$Namespace ns -> ns
    int Id_prefix -> Id_prefix
    int Id_uri -> Id_uri
    int MAX_INSTANCE_ID -> MAX_INSTANCE_ID
    int Id_constructor -> Id_constructor
    int Id_toString -> Id_toString
    int Id_toSource -> Id_toSource
    int MAX_PROTOTYPE_ID -> MAX_PROTOTYPE_ID
    org.mozilla.javascript.xmlimpl.Namespace create(org.mozilla.javascript.Scriptable,org.mozilla.javascript.xmlimpl.Namespace,org.mozilla.javascript.xmlimpl.XmlNode$Namespace) -> create
    org.mozilla.javascript.xmlimpl.XmlNode$Namespace getDelegate() -> getDelegate
    void exportAsJSClass(boolean) -> exportAsJSClass
    java.lang.String uri() -> uri
    java.lang.String prefix() -> prefix
    java.lang.String toString() -> toString
    java.lang.String toLocaleString() -> toLocaleString
    boolean equals(org.mozilla.javascript.xmlimpl.Namespace) -> equals
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.Object equivalentValues(java.lang.Object) -> equivalentValues
    java.lang.String getClassName() -> getClassName
    java.lang.Object getDefaultValue(java.lang.Class) -> getDefaultValue
    int getMaxInstanceId() -> getMaxInstanceId
    int findInstanceIdInfo(java.lang.String) -> findInstanceIdInfo
    java.lang.String getInstanceIdName(int) -> getInstanceIdName
    java.lang.Object getInstanceIdValue(int) -> getInstanceIdValue
    int findPrototypeId(java.lang.String) -> findPrototypeId
    void initPrototypeId(int) -> initPrototypeId
    java.lang.Object execIdCall(org.mozilla.javascript.IdFunctionObject,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> execIdCall
    org.mozilla.javascript.xmlimpl.Namespace realThis(org.mozilla.javascript.Scriptable,org.mozilla.javascript.IdFunctionObject) -> realThis
    org.mozilla.javascript.xmlimpl.Namespace newNamespace(java.lang.String) -> newNamespace
    org.mozilla.javascript.xmlimpl.Namespace newNamespace(java.lang.String,java.lang.String) -> newNamespace
    org.mozilla.javascript.xmlimpl.Namespace constructNamespace(java.lang.Object) -> constructNamespace
    org.mozilla.javascript.xmlimpl.Namespace castToNamespace(java.lang.Object) -> castToNamespace
    org.mozilla.javascript.xmlimpl.Namespace constructNamespace(java.lang.Object,java.lang.Object) -> constructNamespace
    org.mozilla.javascript.xmlimpl.Namespace constructNamespace() -> constructNamespace
    java.lang.Object jsConstructor(org.mozilla.javascript.Context,boolean,java.lang.Object[]) -> jsConstructor
    java.lang.String js_toSource() -> js_toSource
    void toSourceImpl(java.lang.String,java.lang.String,java.lang.StringBuffer) -> toSourceImpl
org.mozilla.javascript.xmlimpl.QName -> org.mozilla.javascript.xmlimpl.QName:
    long serialVersionUID -> serialVersionUID
    java.lang.Object QNAME_TAG -> QNAME_TAG
    org.mozilla.javascript.xmlimpl.XMLLibImpl lib -> lib
    org.mozilla.javascript.xmlimpl.QName prototype -> prototype
    org.mozilla.javascript.xmlimpl.XmlNode$QName delegate -> delegate
    int Id_localName -> Id_localName
    int Id_uri -> Id_uri
    int MAX_INSTANCE_ID -> MAX_INSTANCE_ID
    int Id_constructor -> Id_constructor
    int Id_toString -> Id_toString
    int Id_toSource -> Id_toSource
    int MAX_PROTOTYPE_ID -> MAX_PROTOTYPE_ID
    org.mozilla.javascript.xmlimpl.QName create(org.mozilla.javascript.xmlimpl.XMLLibImpl,org.mozilla.javascript.Scriptable,org.mozilla.javascript.xmlimpl.QName,org.mozilla.javascript.xmlimpl.XmlNode$QName) -> create
    void exportAsJSClass(boolean) -> exportAsJSClass
    java.lang.String toString() -> toString
    java.lang.String localName() -> localName
    java.lang.String prefix() -> prefix
    java.lang.String uri() -> uri
    org.mozilla.javascript.xmlimpl.XmlNode$QName toNodeQname() -> toNodeQname
    org.mozilla.javascript.xmlimpl.XmlNode$QName getDelegate() -> getDelegate
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.Object equivalentValues(java.lang.Object) -> equivalentValues
    boolean equals(org.mozilla.javascript.xmlimpl.QName) -> equals
    java.lang.String getClassName() -> getClassName
    java.lang.Object getDefaultValue(java.lang.Class) -> getDefaultValue
    int getMaxInstanceId() -> getMaxInstanceId
    int findInstanceIdInfo(java.lang.String) -> findInstanceIdInfo
    java.lang.String getInstanceIdName(int) -> getInstanceIdName
    java.lang.Object getInstanceIdValue(int) -> getInstanceIdValue
    int findPrototypeId(java.lang.String) -> findPrototypeId
    void initPrototypeId(int) -> initPrototypeId
    java.lang.Object execIdCall(org.mozilla.javascript.IdFunctionObject,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> execIdCall
    org.mozilla.javascript.xmlimpl.QName realThis(org.mozilla.javascript.Scriptable,org.mozilla.javascript.IdFunctionObject) -> realThis
    org.mozilla.javascript.xmlimpl.QName newQName(org.mozilla.javascript.xmlimpl.XMLLibImpl,java.lang.String,java.lang.String,java.lang.String) -> newQName
    org.mozilla.javascript.xmlimpl.QName constructQName(org.mozilla.javascript.xmlimpl.XMLLibImpl,org.mozilla.javascript.Context,java.lang.Object,java.lang.Object) -> constructQName
    org.mozilla.javascript.xmlimpl.QName constructQName(org.mozilla.javascript.xmlimpl.XMLLibImpl,org.mozilla.javascript.Context,java.lang.Object) -> constructQName
    org.mozilla.javascript.xmlimpl.QName castToQName(org.mozilla.javascript.xmlimpl.XMLLibImpl,org.mozilla.javascript.Context,java.lang.Object) -> castToQName
    java.lang.Object jsConstructor(org.mozilla.javascript.Context,boolean,java.lang.Object[]) -> jsConstructor
    java.lang.String js_toSource() -> js_toSource
    void toSourceImpl(java.lang.String,java.lang.String,java.lang.String,java.lang.StringBuffer) -> toSourceImpl
org.mozilla.javascript.xmlimpl.XML -> org.mozilla.javascript.xmlimpl.XML:
    long serialVersionUID -> serialVersionUID
    org.mozilla.javascript.xmlimpl.XmlNode node -> node
    void initialize(org.mozilla.javascript.xmlimpl.XmlNode) -> initialize
    org.mozilla.javascript.xmlimpl.XML getXML() -> getXML
    void replaceWith(org.mozilla.javascript.xmlimpl.XML) -> replaceWith
    org.mozilla.javascript.xmlimpl.XML makeXmlFromString(org.mozilla.javascript.xmlimpl.XMLName,java.lang.String) -> makeXmlFromString
    org.mozilla.javascript.xmlimpl.XmlNode getAnnotation() -> getAnnotation
    java.lang.Object get(int,org.mozilla.javascript.Scriptable) -> get
    boolean has(int,org.mozilla.javascript.Scriptable) -> has
    void put(int,org.mozilla.javascript.Scriptable,java.lang.Object) -> put
    java.lang.Object[] getIds() -> getIds
    void delete(int) -> delete
    boolean hasXMLProperty(org.mozilla.javascript.xmlimpl.XMLName) -> hasXMLProperty
    java.lang.Object getXMLProperty(org.mozilla.javascript.xmlimpl.XMLName) -> getXMLProperty
    org.mozilla.javascript.xmlimpl.XmlNode$QName getNodeQname() -> getNodeQname
    org.mozilla.javascript.xmlimpl.XML[] getChildren() -> getChildren
    org.mozilla.javascript.xmlimpl.XML[] getAttributes() -> getAttributes
    org.mozilla.javascript.xmlimpl.XMLList getPropertyList(org.mozilla.javascript.xmlimpl.XMLName) -> getPropertyList
    void deleteXMLProperty(org.mozilla.javascript.xmlimpl.XMLName) -> deleteXMLProperty
    void putXMLProperty(org.mozilla.javascript.xmlimpl.XMLName,java.lang.Object) -> putXMLProperty
    boolean hasOwnProperty(org.mozilla.javascript.xmlimpl.XMLName) -> hasOwnProperty
    java.lang.Object jsConstructor(org.mozilla.javascript.Context,boolean,java.lang.Object[]) -> jsConstructor
    org.mozilla.javascript.Scriptable getExtraMethodSource(org.mozilla.javascript.Context) -> getExtraMethodSource
    void removeChild(int) -> removeChild
    void normalize() -> normalize
    org.mozilla.javascript.xmlimpl.XML toXML(org.mozilla.javascript.xmlimpl.XmlNode) -> toXML
    void setAttribute(org.mozilla.javascript.xmlimpl.XMLName,java.lang.Object) -> setAttribute
    void remove() -> remove
    void addMatches(org.mozilla.javascript.xmlimpl.XMLList,org.mozilla.javascript.xmlimpl.XMLName) -> addMatches
    org.mozilla.javascript.xmlimpl.XMLList elements(org.mozilla.javascript.xmlimpl.XMLName) -> elements
    org.mozilla.javascript.xmlimpl.XMLList child(org.mozilla.javascript.xmlimpl.XMLName) -> child
    org.mozilla.javascript.xmlimpl.XML replace(org.mozilla.javascript.xmlimpl.XMLName,java.lang.Object) -> replace
    org.mozilla.javascript.xmlimpl.XMLList children() -> children
    org.mozilla.javascript.xmlimpl.XMLList child(int) -> child
    org.mozilla.javascript.xmlimpl.XML getXmlChild(int) -> getXmlChild
    org.mozilla.javascript.xmlimpl.XML getLastXmlChild() -> getLastXmlChild
    int childIndex() -> childIndex
    boolean contains(java.lang.Object) -> contains
    boolean equivalentXml(java.lang.Object) -> equivalentXml
    org.mozilla.javascript.xmlimpl.XMLObjectImpl copy() -> copy
    boolean hasSimpleContent() -> hasSimpleContent
    boolean hasComplexContent() -> hasComplexContent
    int length() -> length
    boolean is(org.mozilla.javascript.xmlimpl.XML) -> is
    java.lang.Object nodeKind() -> nodeKind
    java.lang.Object parent() -> parent
    boolean propertyIsEnumerable(java.lang.Object) -> propertyIsEnumerable
    java.lang.Object valueOf() -> valueOf
    org.mozilla.javascript.xmlimpl.XMLList comments() -> comments
    org.mozilla.javascript.xmlimpl.XMLList text() -> text
    org.mozilla.javascript.xmlimpl.XMLList processingInstructions(org.mozilla.javascript.xmlimpl.XMLName) -> processingInstructions
    org.mozilla.javascript.xmlimpl.XmlNode[] getNodesForInsert(java.lang.Object) -> getNodesForInsert
    org.mozilla.javascript.xmlimpl.XML replace(int,java.lang.Object) -> replace
    org.mozilla.javascript.xmlimpl.XML prependChild(java.lang.Object) -> prependChild
    org.mozilla.javascript.xmlimpl.XML appendChild(java.lang.Object) -> appendChild
    int getChildIndexOf(org.mozilla.javascript.xmlimpl.XML) -> getChildIndexOf
    org.mozilla.javascript.xmlimpl.XML insertChildBefore(org.mozilla.javascript.xmlimpl.XML,java.lang.Object) -> insertChildBefore
    org.mozilla.javascript.xmlimpl.XML insertChildAfter(org.mozilla.javascript.xmlimpl.XML,java.lang.Object) -> insertChildAfter
    org.mozilla.javascript.xmlimpl.XML setChildren(java.lang.Object) -> setChildren
    void addInScopeNamespace(org.mozilla.javascript.xmlimpl.Namespace) -> addInScopeNamespace
    org.mozilla.javascript.xmlimpl.Namespace[] inScopeNamespaces() -> inScopeNamespaces
    org.mozilla.javascript.xmlimpl.XmlNode$Namespace adapt(org.mozilla.javascript.xmlimpl.Namespace) -> adapt
    org.mozilla.javascript.xmlimpl.XML removeNamespace(org.mozilla.javascript.xmlimpl.Namespace) -> removeNamespace
    org.mozilla.javascript.xmlimpl.XML addNamespace(org.mozilla.javascript.xmlimpl.Namespace) -> addNamespace
    org.mozilla.javascript.xmlimpl.QName name() -> name
    org.mozilla.javascript.xmlimpl.Namespace[] namespaceDeclarations() -> namespaceDeclarations
    org.mozilla.javascript.xmlimpl.Namespace namespace(java.lang.String) -> namespace
    java.lang.String localName() -> localName
    void setLocalName(java.lang.String) -> setLocalName
    void setName(org.mozilla.javascript.xmlimpl.QName) -> setName
    void setNamespace(org.mozilla.javascript.xmlimpl.Namespace) -> setNamespace
    java.lang.String ecmaClass() -> ecmaClass
    java.lang.String getClassName() -> getClassName
    java.lang.String ecmaValue() -> ecmaValue
    java.lang.String ecmaToString() -> ecmaToString
    java.lang.String toString() -> toString
    java.lang.String toSource(int) -> toSource
    java.lang.String toXMLString() -> toXMLString
    boolean isAttribute() -> isAttribute
    boolean isComment() -> isComment
    boolean isText() -> isText
    boolean isElement() -> isElement
    boolean isProcessingInstruction() -> isProcessingInstruction
    org.w3c.dom.Node toDomNode() -> toDomNode
org.mozilla.javascript.xmlimpl.XMLCtor -> org.mozilla.javascript.xmlimpl.XMLCtor:
    long serialVersionUID -> serialVersionUID
    java.lang.Object XMLCTOR_TAG -> XMLCTOR_TAG
    org.mozilla.javascript.xmlimpl.XmlProcessor options -> options
    int Id_ignoreComments -> Id_ignoreComments
    int Id_ignoreProcessingInstructions -> Id_ignoreProcessingInstructions
    int Id_ignoreWhitespace -> Id_ignoreWhitespace
    int Id_prettyIndent -> Id_prettyIndent
    int Id_prettyPrinting -> Id_prettyPrinting
    int MAX_INSTANCE_ID -> MAX_INSTANCE_ID
    int Id_defaultSettings -> Id_defaultSettings
    int Id_settings -> Id_settings
    int Id_setSettings -> Id_setSettings
    int MAX_FUNCTION_ID -> MAX_FUNCTION_ID
    void writeSetting(org.mozilla.javascript.Scriptable) -> writeSetting
    void readSettings(org.mozilla.javascript.Scriptable) -> readSettings
    int getMaxInstanceId() -> getMaxInstanceId
    int findInstanceIdInfo(java.lang.String) -> findInstanceIdInfo
    java.lang.String getInstanceIdName(int) -> getInstanceIdName
    java.lang.Object getInstanceIdValue(int) -> getInstanceIdValue
    void setInstanceIdValue(int,java.lang.Object) -> setInstanceIdValue
    int findPrototypeId(java.lang.String) -> findPrototypeId
    void initPrototypeId(int) -> initPrototypeId
    java.lang.Object execIdCall(org.mozilla.javascript.IdFunctionObject,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> execIdCall
    boolean hasInstance(org.mozilla.javascript.Scriptable) -> hasInstance
org.mozilla.javascript.xmlimpl.XMLLibImpl -> org.mozilla.javascript.xmlimpl.XMLLibImpl:
    long serialVersionUID -> serialVersionUID
    org.mozilla.javascript.Scriptable globalScope -> globalScope
    org.mozilla.javascript.xmlimpl.XML xmlPrototype -> xmlPrototype
    org.mozilla.javascript.xmlimpl.XMLList xmlListPrototype -> xmlListPrototype
    org.mozilla.javascript.xmlimpl.Namespace namespacePrototype -> namespacePrototype
    org.mozilla.javascript.xmlimpl.QName qnamePrototype -> qnamePrototype
    org.mozilla.javascript.xmlimpl.XmlProcessor options -> options
    org.w3c.dom.Node toDomNode(java.lang.Object) -> toDomNode
    void init(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,boolean) -> init
    void setIgnoreComments(boolean) -> setIgnoreComments
    void setIgnoreWhitespace(boolean) -> setIgnoreWhitespace
    void setIgnoreProcessingInstructions(boolean) -> setIgnoreProcessingInstructions
    void setPrettyPrinting(boolean) -> setPrettyPrinting
    void setPrettyIndent(int) -> setPrettyIndent
    boolean isIgnoreComments() -> isIgnoreComments
    boolean isIgnoreProcessingInstructions() -> isIgnoreProcessingInstructions
    boolean isIgnoreWhitespace() -> isIgnoreWhitespace
    boolean isPrettyPrinting() -> isPrettyPrinting
    int getPrettyIndent() -> getPrettyIndent
    org.mozilla.javascript.xmlimpl.QName qnamePrototype() -> qnamePrototype
    org.mozilla.javascript.Scriptable globalScope() -> globalScope
    org.mozilla.javascript.xmlimpl.XmlProcessor getProcessor() -> getProcessor
    void exportToScope(boolean) -> exportToScope
    org.mozilla.javascript.xmlimpl.XMLName toAttributeName(org.mozilla.javascript.Context,java.lang.Object) -> toAttributeName
    java.lang.RuntimeException badXMLName(java.lang.Object) -> badXMLName
    org.mozilla.javascript.xmlimpl.XMLName toXMLNameFromString(org.mozilla.javascript.Context,java.lang.String) -> toXMLNameFromString
    org.mozilla.javascript.xmlimpl.XMLName toXMLName(org.mozilla.javascript.Context,java.lang.Object) -> toXMLName
    org.mozilla.javascript.xmlimpl.XMLName toXMLNameOrIndex(org.mozilla.javascript.Context,java.lang.Object) -> toXMLNameOrIndex
    java.lang.Object addXMLObjects(org.mozilla.javascript.Context,org.mozilla.javascript.xml.XMLObject,org.mozilla.javascript.xml.XMLObject) -> addXMLObjects
    org.mozilla.javascript.Ref xmlPrimaryReference(org.mozilla.javascript.Context,org.mozilla.javascript.xmlimpl.XMLName,org.mozilla.javascript.Scriptable) -> xmlPrimaryReference
    org.mozilla.javascript.xmlimpl.Namespace castToNamespace(org.mozilla.javascript.Context,java.lang.Object) -> castToNamespace
    java.lang.String getDefaultNamespaceURI(org.mozilla.javascript.Context) -> getDefaultNamespaceURI
    org.mozilla.javascript.xmlimpl.Namespace newNamespace(java.lang.String) -> newNamespace
    org.mozilla.javascript.xmlimpl.Namespace getDefaultNamespace(org.mozilla.javascript.Context) -> getDefaultNamespace
    org.mozilla.javascript.xmlimpl.Namespace[] createNamespaces(org.mozilla.javascript.xmlimpl.XmlNode$Namespace[]) -> createNamespaces
    org.mozilla.javascript.xmlimpl.QName constructQName(org.mozilla.javascript.Context,java.lang.Object,java.lang.Object) -> constructQName
    org.mozilla.javascript.xmlimpl.QName newQName(java.lang.String,java.lang.String,java.lang.String) -> newQName
    org.mozilla.javascript.xmlimpl.QName constructQName(org.mozilla.javascript.Context,java.lang.Object) -> constructQName
    org.mozilla.javascript.xmlimpl.QName castToQName(org.mozilla.javascript.Context,java.lang.Object) -> castToQName
    org.mozilla.javascript.xmlimpl.QName newQName(org.mozilla.javascript.xmlimpl.XmlNode$QName) -> newQName
    org.mozilla.javascript.xmlimpl.XML newXML(org.mozilla.javascript.xmlimpl.XmlNode) -> newXML
    org.mozilla.javascript.xmlimpl.XML newXMLFromJs(java.lang.Object) -> newXMLFromJs
    org.mozilla.javascript.xmlimpl.XML parse(java.lang.String) -> parse
    org.mozilla.javascript.xmlimpl.XML ecmaToXml(java.lang.Object) -> ecmaToXml
    org.mozilla.javascript.xmlimpl.XML newTextElementXML(org.mozilla.javascript.xmlimpl.XmlNode,org.mozilla.javascript.xmlimpl.XmlNode$QName,java.lang.String) -> newTextElementXML
    org.mozilla.javascript.xmlimpl.XMLList newXMLList() -> newXMLList
    org.mozilla.javascript.xmlimpl.XMLList newXMLListFrom(java.lang.Object) -> newXMLListFrom
    org.mozilla.javascript.xmlimpl.XmlNode$QName toNodeQName(org.mozilla.javascript.Context,java.lang.Object,java.lang.Object) -> toNodeQName
    org.mozilla.javascript.xmlimpl.XmlNode$QName toNodeQName(org.mozilla.javascript.Context,java.lang.String,boolean) -> toNodeQName
    org.mozilla.javascript.xmlimpl.XmlNode$QName toNodeQName(org.mozilla.javascript.Context,java.lang.Object,boolean) -> toNodeQName
    boolean isXMLName(org.mozilla.javascript.Context,java.lang.Object) -> isXMLName
    java.lang.Object toDefaultXmlNamespace(org.mozilla.javascript.Context,java.lang.Object) -> toDefaultXmlNamespace
    java.lang.String escapeTextValue(java.lang.Object) -> escapeTextValue
    java.lang.String escapeAttributeValue(java.lang.Object) -> escapeAttributeValue
    org.mozilla.javascript.Ref nameRef(org.mozilla.javascript.Context,java.lang.Object,org.mozilla.javascript.Scriptable,int) -> nameRef
    org.mozilla.javascript.Ref nameRef(org.mozilla.javascript.Context,java.lang.Object,java.lang.Object,org.mozilla.javascript.Scriptable,int) -> nameRef
org.mozilla.javascript.xmlimpl.XMLList -> org.mozilla.javascript.xmlimpl.XMLList:
    long serialVersionUID -> serialVersionUID
    org.mozilla.javascript.xmlimpl.XmlNode$InternalList _annos -> _annos
    org.mozilla.javascript.xmlimpl.XMLObjectImpl targetObject -> targetObject
    org.mozilla.javascript.xmlimpl.XmlNode$QName targetProperty -> targetProperty
    org.mozilla.javascript.xmlimpl.XmlNode$InternalList getNodeList() -> getNodeList
    void setTargets(org.mozilla.javascript.xmlimpl.XMLObjectImpl,org.mozilla.javascript.xmlimpl.XmlNode$QName) -> setTargets
    org.mozilla.javascript.xmlimpl.XML getXmlFromAnnotation(int) -> getXmlFromAnnotation
    org.mozilla.javascript.xmlimpl.XML getXML() -> getXML
    void internalRemoveFromList(int) -> internalRemoveFromList
    void replace(int,org.mozilla.javascript.xmlimpl.XML) -> replace
    void insert(int,org.mozilla.javascript.xmlimpl.XML) -> insert
    java.lang.String getClassName() -> getClassName
    java.lang.Object get(int,org.mozilla.javascript.Scriptable) -> get
    boolean hasXMLProperty(org.mozilla.javascript.xmlimpl.XMLName) -> hasXMLProperty
    boolean has(int,org.mozilla.javascript.Scriptable) -> has
    void putXMLProperty(org.mozilla.javascript.xmlimpl.XMLName,java.lang.Object) -> putXMLProperty
    java.lang.Object getXMLProperty(org.mozilla.javascript.xmlimpl.XMLName) -> getXMLProperty
    void replaceNode(org.mozilla.javascript.xmlimpl.XML,org.mozilla.javascript.xmlimpl.XML) -> replaceNode
    void put(int,org.mozilla.javascript.Scriptable,java.lang.Object) -> put
    org.mozilla.javascript.xmlimpl.XML getXML(org.mozilla.javascript.xmlimpl.XmlNode$InternalList,int) -> getXML
    void deleteXMLProperty(org.mozilla.javascript.xmlimpl.XMLName) -> deleteXMLProperty
    void delete(int) -> delete
    java.lang.Object[] getIds() -> getIds
    java.lang.Object[] getIdsForDebug() -> getIdsForDebug
    void remove() -> remove
    org.mozilla.javascript.xmlimpl.XML item(int) -> item
    void setAttribute(org.mozilla.javascript.xmlimpl.XMLName,java.lang.Object) -> setAttribute
    void addToList(java.lang.Object) -> addToList
    org.mozilla.javascript.xmlimpl.XMLList child(int) -> child
    org.mozilla.javascript.xmlimpl.XMLList child(org.mozilla.javascript.xmlimpl.XMLName) -> child
    void addMatches(org.mozilla.javascript.xmlimpl.XMLList,org.mozilla.javascript.xmlimpl.XMLName) -> addMatches
    org.mozilla.javascript.xmlimpl.XMLList children() -> children
    org.mozilla.javascript.xmlimpl.XMLList comments() -> comments
    org.mozilla.javascript.xmlimpl.XMLList elements(org.mozilla.javascript.xmlimpl.XMLName) -> elements
    boolean contains(java.lang.Object) -> contains
    org.mozilla.javascript.xmlimpl.XMLObjectImpl copy() -> copy
    boolean hasOwnProperty(org.mozilla.javascript.xmlimpl.XMLName) -> hasOwnProperty
    boolean hasComplexContent() -> hasComplexContent
    boolean hasSimpleContent() -> hasSimpleContent
    int length() -> length
    void normalize() -> normalize
    java.lang.Object parent() -> parent
    org.mozilla.javascript.xmlimpl.XMLList processingInstructions(org.mozilla.javascript.xmlimpl.XMLName) -> processingInstructions
    boolean propertyIsEnumerable(java.lang.Object) -> propertyIsEnumerable
    org.mozilla.javascript.xmlimpl.XMLList text() -> text
    java.lang.String toString() -> toString
    java.lang.String toSource(int) -> toSource
    java.lang.String toXMLString() -> toXMLString
    java.lang.Object valueOf() -> valueOf
    boolean equivalentXml(java.lang.Object) -> equivalentXml
    org.mozilla.javascript.xmlimpl.XMLList getPropertyList(org.mozilla.javascript.xmlimpl.XMLName) -> getPropertyList
    java.lang.Object applyOrCall(boolean,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> applyOrCall
    java.lang.Object jsConstructor(org.mozilla.javascript.Context,boolean,java.lang.Object[]) -> jsConstructor
    org.mozilla.javascript.Scriptable getExtraMethodSource(org.mozilla.javascript.Context) -> getExtraMethodSource
    java.lang.Object call(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> call
    org.mozilla.javascript.Scriptable construct(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> construct
org.mozilla.javascript.xmlimpl.XMLName -> org.mozilla.javascript.xmlimpl.XMLName:
    long serialVersionUID -> serialVersionUID
    org.mozilla.javascript.xmlimpl.XmlNode$QName qname -> qname
    boolean isAttributeName -> isAttributeName
    boolean isDescendants -> isDescendants
    org.mozilla.javascript.xmlimpl.XMLObjectImpl xmlObject -> xmlObject
    boolean isNCNameStartChar(int) -> isNCNameStartChar
    boolean isNCNameChar(int) -> isNCNameChar
    boolean accept(java.lang.Object) -> accept
    org.mozilla.javascript.xmlimpl.XMLName formStar() -> formStar
    org.mozilla.javascript.xmlimpl.XMLName formProperty(org.mozilla.javascript.xmlimpl.XmlNode$Namespace,java.lang.String) -> formProperty
    org.mozilla.javascript.xmlimpl.XMLName formProperty(java.lang.String,java.lang.String) -> formProperty
    org.mozilla.javascript.xmlimpl.XMLName create(java.lang.String,java.lang.String) -> create
    org.mozilla.javascript.xmlimpl.XMLName create(org.mozilla.javascript.xmlimpl.XmlNode$QName,boolean,boolean) -> create
    org.mozilla.javascript.xmlimpl.XMLName create(org.mozilla.javascript.xmlimpl.XmlNode$QName) -> create
    void initXMLObject(org.mozilla.javascript.xmlimpl.XMLObjectImpl) -> initXMLObject
    java.lang.String uri() -> uri
    java.lang.String localName() -> localName
    void addDescendantChildren(org.mozilla.javascript.xmlimpl.XMLList,org.mozilla.javascript.xmlimpl.XML) -> addDescendantChildren
    void addMatchingAttributes(org.mozilla.javascript.xmlimpl.XMLList,org.mozilla.javascript.xmlimpl.XML) -> addMatchingAttributes
    void addDescendantAttributes(org.mozilla.javascript.xmlimpl.XMLList,org.mozilla.javascript.xmlimpl.XML) -> addDescendantAttributes
    org.mozilla.javascript.xmlimpl.XMLList matchDescendantAttributes(org.mozilla.javascript.xmlimpl.XMLList,org.mozilla.javascript.xmlimpl.XML) -> matchDescendantAttributes
    org.mozilla.javascript.xmlimpl.XMLList matchDescendantChildren(org.mozilla.javascript.xmlimpl.XMLList,org.mozilla.javascript.xmlimpl.XML) -> matchDescendantChildren
    void addDescendants(org.mozilla.javascript.xmlimpl.XMLList,org.mozilla.javascript.xmlimpl.XML) -> addDescendants
    void addAttributes(org.mozilla.javascript.xmlimpl.XMLList,org.mozilla.javascript.xmlimpl.XML) -> addAttributes
    void addMatches(org.mozilla.javascript.xmlimpl.XMLList,org.mozilla.javascript.xmlimpl.XML) -> addMatches
    org.mozilla.javascript.xmlimpl.XMLList getMyValueOn(org.mozilla.javascript.xmlimpl.XML) -> getMyValueOn
    void setMyValueOn(org.mozilla.javascript.xmlimpl.XML,java.lang.Object) -> setMyValueOn
    boolean has(org.mozilla.javascript.Context) -> has
    java.lang.Object get(org.mozilla.javascript.Context) -> get
    java.lang.Object set(org.mozilla.javascript.Context,java.lang.Object) -> set
    boolean delete(org.mozilla.javascript.Context) -> delete
    java.lang.String toString() -> toString
    org.mozilla.javascript.xmlimpl.XmlNode$QName toQname() -> toQname
    boolean matchesLocalName(java.lang.String) -> matchesLocalName
    boolean matchesElement(org.mozilla.javascript.xmlimpl.XmlNode$QName) -> matchesElement
    boolean matches(org.mozilla.javascript.xmlimpl.XML) -> matches
    boolean isAttributeName() -> isAttributeName
    void setAttributeName() -> setAttributeName
    boolean isDescendants() -> isDescendants
    void setIsDescendants() -> setIsDescendants
org.mozilla.javascript.xmlimpl.XMLObjectImpl -> org.mozilla.javascript.xmlimpl.XMLObjectImpl:
    java.lang.Object XMLOBJECT_TAG -> XMLOBJECT_TAG
    org.mozilla.javascript.xmlimpl.XMLLibImpl lib -> lib
    boolean prototypeFlag -> prototypeFlag
    int Id_constructor -> Id_constructor
    int Id_addNamespace -> Id_addNamespace
    int Id_appendChild -> Id_appendChild
    int Id_attribute -> Id_attribute
    int Id_attributes -> Id_attributes
    int Id_child -> Id_child
    int Id_childIndex -> Id_childIndex
    int Id_children -> Id_children
    int Id_comments -> Id_comments
    int Id_contains -> Id_contains
    int Id_copy -> Id_copy
    int Id_descendants -> Id_descendants
    int Id_elements -> Id_elements
    int Id_inScopeNamespaces -> Id_inScopeNamespaces
    int Id_insertChildAfter -> Id_insertChildAfter
    int Id_insertChildBefore -> Id_insertChildBefore
    int Id_hasOwnProperty -> Id_hasOwnProperty
    int Id_hasComplexContent -> Id_hasComplexContent
    int Id_hasSimpleContent -> Id_hasSimpleContent
    int Id_length -> Id_length
    int Id_localName -> Id_localName
    int Id_name -> Id_name
    int Id_namespace -> Id_namespace
    int Id_namespaceDeclarations -> Id_namespaceDeclarations
    int Id_nodeKind -> Id_nodeKind
    int Id_normalize -> Id_normalize
    int Id_parent -> Id_parent
    int Id_prependChild -> Id_prependChild
    int Id_processingInstructions -> Id_processingInstructions
    int Id_propertyIsEnumerable -> Id_propertyIsEnumerable
    int Id_removeNamespace -> Id_removeNamespace
    int Id_replace -> Id_replace
    int Id_setChildren -> Id_setChildren
    int Id_setLocalName -> Id_setLocalName
    int Id_setName -> Id_setName
    int Id_setNamespace -> Id_setNamespace
    int Id_text -> Id_text
    int Id_toString -> Id_toString
    int Id_toSource -> Id_toSource
    int Id_toXMLString -> Id_toXMLString
    int Id_valueOf -> Id_valueOf
    int MAX_PROTOTYPE_ID -> MAX_PROTOTYPE_ID
    void initialize(org.mozilla.javascript.xmlimpl.XMLLibImpl,org.mozilla.javascript.Scriptable,org.mozilla.javascript.xml.XMLObject) -> initialize
    boolean isPrototype() -> isPrototype
    org.mozilla.javascript.xmlimpl.XMLLibImpl getLib() -> getLib
    org.mozilla.javascript.xmlimpl.XML newXML(org.mozilla.javascript.xmlimpl.XmlNode) -> newXML
    org.mozilla.javascript.xmlimpl.XML xmlFromNode(org.mozilla.javascript.xmlimpl.XmlNode) -> xmlFromNode
    org.mozilla.javascript.xmlimpl.XMLList newXMLList() -> newXMLList
    org.mozilla.javascript.xmlimpl.XMLList newXMLListFrom(java.lang.Object) -> newXMLListFrom
    org.mozilla.javascript.xmlimpl.XmlProcessor getProcessor() -> getProcessor
    org.mozilla.javascript.xmlimpl.QName newQName(java.lang.String,java.lang.String,java.lang.String) -> newQName
    org.mozilla.javascript.xmlimpl.QName newQName(org.mozilla.javascript.xmlimpl.XmlNode$QName) -> newQName
    org.mozilla.javascript.xmlimpl.Namespace createNamespace(org.mozilla.javascript.xmlimpl.XmlNode$Namespace) -> createNamespace
    org.mozilla.javascript.xmlimpl.Namespace[] createNamespaces(org.mozilla.javascript.xmlimpl.XmlNode$Namespace[]) -> createNamespaces
    org.mozilla.javascript.Scriptable getPrototype() -> getPrototype
    void setPrototype(org.mozilla.javascript.Scriptable) -> setPrototype
    org.mozilla.javascript.Scriptable getParentScope() -> getParentScope
    void setParentScope(org.mozilla.javascript.Scriptable) -> setParentScope
    java.lang.Object getDefaultValue(java.lang.Class) -> getDefaultValue
    boolean hasInstance(org.mozilla.javascript.Scriptable) -> hasInstance
    boolean hasXMLProperty(org.mozilla.javascript.xmlimpl.XMLName) -> hasXMLProperty
    java.lang.Object getXMLProperty(org.mozilla.javascript.xmlimpl.XMLName) -> getXMLProperty
    void putXMLProperty(org.mozilla.javascript.xmlimpl.XMLName,java.lang.Object) -> putXMLProperty
    void deleteXMLProperty(org.mozilla.javascript.xmlimpl.XMLName) -> deleteXMLProperty
    boolean equivalentXml(java.lang.Object) -> equivalentXml
    void addMatches(org.mozilla.javascript.xmlimpl.XMLList,org.mozilla.javascript.xmlimpl.XMLName) -> addMatches
    org.mozilla.javascript.xmlimpl.XMLList getMatches(org.mozilla.javascript.xmlimpl.XMLName) -> getMatches
    org.mozilla.javascript.xmlimpl.XML getXML() -> getXML
    org.mozilla.javascript.xmlimpl.XMLList child(int) -> child
    org.mozilla.javascript.xmlimpl.XMLList child(org.mozilla.javascript.xmlimpl.XMLName) -> child
    org.mozilla.javascript.xmlimpl.XMLList children() -> children
    org.mozilla.javascript.xmlimpl.XMLList comments() -> comments
    boolean contains(java.lang.Object) -> contains
    org.mozilla.javascript.xmlimpl.XMLObjectImpl copy() -> copy
    org.mozilla.javascript.xmlimpl.XMLList elements(org.mozilla.javascript.xmlimpl.XMLName) -> elements
    boolean hasOwnProperty(org.mozilla.javascript.xmlimpl.XMLName) -> hasOwnProperty
    boolean hasComplexContent() -> hasComplexContent
    boolean hasSimpleContent() -> hasSimpleContent
    int length() -> length
    void normalize() -> normalize
    java.lang.Object parent() -> parent
    org.mozilla.javascript.xmlimpl.XMLList processingInstructions(org.mozilla.javascript.xmlimpl.XMLName) -> processingInstructions
    boolean propertyIsEnumerable(java.lang.Object) -> propertyIsEnumerable
    org.mozilla.javascript.xmlimpl.XMLList text() -> text
    java.lang.String toString() -> toString
    java.lang.String toSource(int) -> toSource
    java.lang.String toXMLString() -> toXMLString
    java.lang.Object valueOf() -> valueOf
    java.lang.Object jsConstructor(org.mozilla.javascript.Context,boolean,java.lang.Object[]) -> jsConstructor
    java.lang.Object equivalentValues(java.lang.Object) -> equivalentValues
    boolean has(org.mozilla.javascript.Context,java.lang.Object) -> has
    boolean has(java.lang.String,org.mozilla.javascript.Scriptable) -> has
    java.lang.Object get(org.mozilla.javascript.Context,java.lang.Object) -> get
    java.lang.Object get(java.lang.String,org.mozilla.javascript.Scriptable) -> get
    void put(org.mozilla.javascript.Context,java.lang.Object,java.lang.Object) -> put
    void put(java.lang.String,org.mozilla.javascript.Scriptable,java.lang.Object) -> put
    boolean delete(org.mozilla.javascript.Context,java.lang.Object) -> delete
    void delete(java.lang.String) -> delete
    java.lang.Object getFunctionProperty(org.mozilla.javascript.Context,int) -> getFunctionProperty
    java.lang.Object getFunctionProperty(org.mozilla.javascript.Context,java.lang.String) -> getFunctionProperty
    org.mozilla.javascript.Ref memberRef(org.mozilla.javascript.Context,java.lang.Object,int) -> memberRef
    org.mozilla.javascript.Ref memberRef(org.mozilla.javascript.Context,java.lang.Object,java.lang.Object,int) -> memberRef
    org.mozilla.javascript.NativeWith enterWith(org.mozilla.javascript.Scriptable) -> enterWith
    org.mozilla.javascript.NativeWith enterDotQuery(org.mozilla.javascript.Scriptable) -> enterDotQuery
    java.lang.Object addValues(org.mozilla.javascript.Context,boolean,java.lang.Object) -> addValues
    void exportAsJSClass(boolean) -> exportAsJSClass
    int findPrototypeId(java.lang.String) -> findPrototypeId
    void initPrototypeId(int) -> initPrototypeId
    java.lang.Object[] toObjectArray(java.lang.Object[]) -> toObjectArray
    void xmlMethodNotFound(java.lang.Object,java.lang.String) -> xmlMethodNotFound
    java.lang.Object execIdCall(org.mozilla.javascript.IdFunctionObject,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[]) -> execIdCall
    java.lang.Object arg(java.lang.Object[],int) -> arg
    org.mozilla.javascript.xmlimpl.XML newTextElementXML(org.mozilla.javascript.xmlimpl.XmlNode,org.mozilla.javascript.xmlimpl.XmlNode$QName,java.lang.String) -> newTextElementXML
    org.mozilla.javascript.xmlimpl.XML newXMLFromJs(java.lang.Object) -> newXMLFromJs
    org.mozilla.javascript.xmlimpl.XML ecmaToXml(java.lang.Object) -> ecmaToXml
    java.lang.String ecmaEscapeAttributeValue(java.lang.String) -> ecmaEscapeAttributeValue
    org.mozilla.javascript.xmlimpl.XML createEmptyXML() -> createEmptyXML
org.mozilla.javascript.xmlimpl.XMLWithScope -> org.mozilla.javascript.xmlimpl.XMLWithScope:
    long serialVersionUID -> serialVersionUID
    org.mozilla.javascript.xmlimpl.XMLLibImpl lib -> lib
    int _currIndex -> _currIndex
    org.mozilla.javascript.xmlimpl.XMLList _xmlList -> _xmlList
    org.mozilla.javascript.xml.XMLObject _dqPrototype -> _dqPrototype
    void initAsDotQuery() -> initAsDotQuery
    java.lang.Object updateDotQuery(boolean) -> updateDotQuery
org.mozilla.javascript.xmlimpl.XmlNode -> org.mozilla.javascript.xmlimpl.XmlNode:
    java.lang.String XML_NAMESPACES_NAMESPACE_URI -> XML_NAMESPACES_NAMESPACE_URI
    java.lang.String USER_DATA_XMLNODE_KEY -> USER_DATA_XMLNODE_KEY
    boolean DOM_LEVEL_3 -> DOM_LEVEL_3
    long serialVersionUID -> serialVersionUID
    org.w3c.dom.UserDataHandler events -> events
    org.w3c.dom.Node dom -> dom
    org.mozilla.javascript.xmlimpl.XML xml -> xml
    org.mozilla.javascript.xmlimpl.XmlNode getUserData(org.w3c.dom.Node) -> getUserData
    void setUserData(org.w3c.dom.Node,org.mozilla.javascript.xmlimpl.XmlNode) -> setUserData
    org.mozilla.javascript.xmlimpl.XmlNode createImpl(org.w3c.dom.Node) -> createImpl
    org.mozilla.javascript.xmlimpl.XmlNode newElementWithText(org.mozilla.javascript.xmlimpl.XmlProcessor,org.mozilla.javascript.xmlimpl.XmlNode,org.mozilla.javascript.xmlimpl.XmlNode$QName,java.lang.String) -> newElementWithText
    org.mozilla.javascript.xmlimpl.XmlNode createText(org.mozilla.javascript.xmlimpl.XmlProcessor,java.lang.String) -> createText
    org.mozilla.javascript.xmlimpl.XmlNode createElementFromNode(org.w3c.dom.Node) -> createElementFromNode
    org.mozilla.javascript.xmlimpl.XmlNode createElement(org.mozilla.javascript.xmlimpl.XmlProcessor,java.lang.String,java.lang.String) -> createElement
    org.mozilla.javascript.xmlimpl.XmlNode createEmpty(org.mozilla.javascript.xmlimpl.XmlProcessor) -> createEmpty
    org.mozilla.javascript.xmlimpl.XmlNode copy(org.mozilla.javascript.xmlimpl.XmlNode) -> copy
    java.lang.String debug() -> debug
    java.lang.String toString() -> toString
    org.mozilla.javascript.xmlimpl.XML getXml() -> getXml
    void setXml(org.mozilla.javascript.xmlimpl.XML) -> setXml
    int getChildCount() -> getChildCount
    org.mozilla.javascript.xmlimpl.XmlNode parent() -> parent
    int getChildIndex() -> getChildIndex
    void removeChild(int) -> removeChild
    java.lang.String toXmlString(org.mozilla.javascript.xmlimpl.XmlProcessor) -> toXmlString
    java.lang.String ecmaValue() -> ecmaValue
    void deleteMe() -> deleteMe
    void normalize() -> normalize
    void insertChildAt(int,org.mozilla.javascript.xmlimpl.XmlNode) -> insertChildAt
    void insertChildrenAt(int,org.mozilla.javascript.xmlimpl.XmlNode[]) -> insertChildrenAt
    org.mozilla.javascript.xmlimpl.XmlNode getChild(int) -> getChild
    boolean hasChildElement() -> hasChildElement
    boolean isSameNode(org.mozilla.javascript.xmlimpl.XmlNode) -> isSameNode
    java.lang.String toUri(java.lang.String) -> toUri
    void addNamespaces(org.mozilla.javascript.xmlimpl.XmlNode$Namespaces,org.w3c.dom.Element) -> addNamespaces
    org.mozilla.javascript.xmlimpl.XmlNode$Namespaces getAllNamespaces() -> getAllNamespaces
    org.mozilla.javascript.xmlimpl.XmlNode$Namespace[] getInScopeNamespaces() -> getInScopeNamespaces
    org.mozilla.javascript.xmlimpl.XmlNode$Namespace[] getNamespaceDeclarations() -> getNamespaceDeclarations
    org.mozilla.javascript.xmlimpl.XmlNode$Namespace getNamespaceDeclaration(java.lang.String) -> getNamespaceDeclaration
    org.mozilla.javascript.xmlimpl.XmlNode$Namespace getNamespaceDeclaration() -> getNamespaceDeclaration
    org.mozilla.javascript.xmlimpl.XmlNode copy() -> copy
    boolean isParentType() -> isParentType
    boolean isTextType() -> isTextType
    boolean isAttributeType() -> isAttributeType
    boolean isProcessingInstructionType() -> isProcessingInstructionType
    boolean isCommentType() -> isCommentType
    boolean isElementType() -> isElementType
    void renameNode(org.mozilla.javascript.xmlimpl.XmlNode$QName) -> renameNode
    void invalidateNamespacePrefix() -> invalidateNamespacePrefix
    void declareNamespace(org.w3c.dom.Element,java.lang.String,java.lang.String) -> declareNamespace
    void declareNamespace(java.lang.String,java.lang.String) -> declareNamespace
    org.mozilla.javascript.xmlimpl.XmlNode$Namespace getDefaultNamespace() -> getDefaultNamespace
    java.lang.String getExistingPrefixFor(org.mozilla.javascript.xmlimpl.XmlNode$Namespace) -> getExistingPrefixFor
    org.mozilla.javascript.xmlimpl.XmlNode$Namespace getNodeNamespace() -> getNodeNamespace
    org.mozilla.javascript.xmlimpl.XmlNode$Namespace getNamespace() -> getNamespace
    void removeNamespace(org.mozilla.javascript.xmlimpl.XmlNode$Namespace) -> removeNamespace
    void setProcessingInstructionName(java.lang.String) -> setProcessingInstructionName
    void setLocalName(java.lang.String) -> setLocalName
    org.mozilla.javascript.xmlimpl.XmlNode$QName getQname() -> getQname
    void addMatchingChildren(org.mozilla.javascript.xmlimpl.XMLList,org.mozilla.javascript.xmlimpl.XmlNode$Filter) -> addMatchingChildren
    org.mozilla.javascript.xmlimpl.XmlNode[] getMatchingChildren(org.mozilla.javascript.xmlimpl.XmlNode$Filter) -> getMatchingChildren
    org.mozilla.javascript.xmlimpl.XmlNode[] getAttributes() -> getAttributes
    java.lang.String getAttributeValue() -> getAttributeValue
    void setAttribute(org.mozilla.javascript.xmlimpl.XmlNode$QName,java.lang.String) -> setAttribute
    void replaceWith(org.mozilla.javascript.xmlimpl.XmlNode) -> replaceWith
    java.lang.String ecmaToXMLString(org.mozilla.javascript.xmlimpl.XmlProcessor) -> ecmaToXMLString
    org.w3c.dom.Node toDomNode() -> toDomNode
org.mozilla.javascript.xmlimpl.XmlNode$Filter -> org.mozilla.javascript.xmlimpl.XmlNode$Filter:
    org.mozilla.javascript.xmlimpl.XmlNode$Filter COMMENT -> COMMENT
    org.mozilla.javascript.xmlimpl.XmlNode$Filter TEXT -> TEXT
    org.mozilla.javascript.xmlimpl.XmlNode$Filter ELEMENT -> ELEMENT
    org.mozilla.javascript.xmlimpl.XmlNode$Filter TRUE -> TRUE
    org.mozilla.javascript.xmlimpl.XmlNode$Filter PROCESSING_INSTRUCTION(org.mozilla.javascript.xmlimpl.XMLName) -> PROCESSING_INSTRUCTION
    boolean accept(org.w3c.dom.Node) -> accept
org.mozilla.javascript.xmlimpl.XmlNode$Filter$1 -> org.mozilla.javascript.xmlimpl.XmlNode$Filter$1:
    boolean accept(org.w3c.dom.Node) -> accept
org.mozilla.javascript.xmlimpl.XmlNode$Filter$2 -> org.mozilla.javascript.xmlimpl.XmlNode$Filter$2:
    boolean accept(org.w3c.dom.Node) -> accept
org.mozilla.javascript.xmlimpl.XmlNode$Filter$3 -> org.mozilla.javascript.xmlimpl.XmlNode$Filter$3:
    org.mozilla.javascript.xmlimpl.XMLName val$name -> val$name
    boolean accept(org.w3c.dom.Node) -> accept
org.mozilla.javascript.xmlimpl.XmlNode$Filter$4 -> org.mozilla.javascript.xmlimpl.XmlNode$Filter$4:
    boolean accept(org.w3c.dom.Node) -> accept
org.mozilla.javascript.xmlimpl.XmlNode$Filter$5 -> org.mozilla.javascript.xmlimpl.XmlNode$Filter$5:
    boolean accept(org.w3c.dom.Node) -> accept
org.mozilla.javascript.xmlimpl.XmlNode$InternalList -> org.mozilla.javascript.xmlimpl.XmlNode$InternalList:
    long serialVersionUID -> serialVersionUID
    java.util.List list -> list
    void _add(org.mozilla.javascript.xmlimpl.XmlNode) -> _add
    org.mozilla.javascript.xmlimpl.XmlNode item(int) -> item
    void remove(int) -> remove
    void add(org.mozilla.javascript.xmlimpl.XmlNode$InternalList) -> add
    void add(org.mozilla.javascript.xmlimpl.XmlNode$InternalList,int,int) -> add
    void add(org.mozilla.javascript.xmlimpl.XmlNode) -> add
    void add(org.mozilla.javascript.xmlimpl.XML) -> add
    void addToList(java.lang.Object) -> addToList
    int length() -> length
org.mozilla.javascript.xmlimpl.XmlNode$Namespace -> org.mozilla.javascript.xmlimpl.XmlNode$Namespace:
    long serialVersionUID -> serialVersionUID
    org.mozilla.javascript.xmlimpl.XmlNode$Namespace GLOBAL -> GLOBAL
    java.lang.String prefix -> prefix
    java.lang.String uri -> uri
    org.mozilla.javascript.xmlimpl.XmlNode$Namespace create(java.lang.String,java.lang.String) -> create
    org.mozilla.javascript.xmlimpl.XmlNode$Namespace create(java.lang.String) -> create
    java.lang.String toString() -> toString
    boolean isUnspecifiedPrefix() -> isUnspecifiedPrefix
    boolean is(org.mozilla.javascript.xmlimpl.XmlNode$Namespace) -> is
    boolean isEmpty() -> isEmpty
    boolean isDefault() -> isDefault
    boolean isGlobal() -> isGlobal
    void setPrefix(java.lang.String) -> setPrefix
    java.lang.String getPrefix() -> getPrefix
    java.lang.String getUri() -> getUri
    java.lang.String access$000(org.mozilla.javascript.xmlimpl.XmlNode$Namespace) -> access$000
    java.lang.String access$100(org.mozilla.javascript.xmlimpl.XmlNode$Namespace) -> access$100
    void access$200(org.mozilla.javascript.xmlimpl.XmlNode$Namespace,java.lang.String) -> access$200
org.mozilla.javascript.xmlimpl.XmlNode$Namespaces -> org.mozilla.javascript.xmlimpl.XmlNode$Namespaces:
    java.util.Map map -> map
    java.util.Map uriToPrefix -> uriToPrefix
    void declare(org.mozilla.javascript.xmlimpl.XmlNode$Namespace) -> declare
    org.mozilla.javascript.xmlimpl.XmlNode$Namespace getNamespaceByUri(java.lang.String) -> getNamespaceByUri
    org.mozilla.javascript.xmlimpl.XmlNode$Namespace getNamespace(java.lang.String) -> getNamespace
    org.mozilla.javascript.xmlimpl.XmlNode$Namespace[] getNamespaces() -> getNamespaces
org.mozilla.javascript.xmlimpl.XmlNode$QName -> org.mozilla.javascript.xmlimpl.XmlNode$QName:
    long serialVersionUID -> serialVersionUID
    org.mozilla.javascript.xmlimpl.XmlNode$Namespace namespace -> namespace
    java.lang.String localName -> localName
    org.mozilla.javascript.xmlimpl.XmlNode$QName create(org.mozilla.javascript.xmlimpl.XmlNode$Namespace,java.lang.String) -> create
    org.mozilla.javascript.xmlimpl.XmlNode$QName create(java.lang.String,java.lang.String,java.lang.String) -> create
    java.lang.String qualify(java.lang.String,java.lang.String) -> qualify
    java.lang.String toString() -> toString
    boolean equals(java.lang.String,java.lang.String) -> equals
    boolean namespacesEqual(org.mozilla.javascript.xmlimpl.XmlNode$Namespace,org.mozilla.javascript.xmlimpl.XmlNode$Namespace) -> namespacesEqual
    boolean equals(org.mozilla.javascript.xmlimpl.XmlNode$QName) -> equals
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    void lookupPrefix(org.w3c.dom.Node) -> lookupPrefix
    java.lang.String qualify(org.w3c.dom.Node) -> qualify
    void setAttribute(org.w3c.dom.Element,java.lang.String) -> setAttribute
    org.mozilla.javascript.xmlimpl.XmlNode$Namespace getNamespace() -> getNamespace
    java.lang.String getLocalName() -> getLocalName
org.mozilla.javascript.xmlimpl.XmlNode$XmlNodeUserDataHandler -> org.mozilla.javascript.xmlimpl.XmlNode$XmlNodeUserDataHandler:
    long serialVersionUID -> serialVersionUID
    void handle(short,java.lang.String,java.lang.Object,org.w3c.dom.Node,org.w3c.dom.Node) -> handle
org.mozilla.javascript.xmlimpl.XmlProcessor -> org.mozilla.javascript.xmlimpl.XmlProcessor:
    long serialVersionUID -> serialVersionUID
    boolean ignoreComments -> ignoreComments
    boolean ignoreProcessingInstructions -> ignoreProcessingInstructions
    boolean ignoreWhitespace -> ignoreWhitespace
    boolean prettyPrint -> prettyPrint
    int prettyIndent -> prettyIndent
    javax.xml.parsers.DocumentBuilderFactory dom -> dom
    javax.xml.transform.TransformerFactory xform -> xform
    java.util.concurrent.LinkedBlockingDeque documentBuilderPool -> documentBuilderPool
    org.mozilla.javascript.xmlimpl.XmlProcessor$RhinoSAXErrorHandler errorHandler -> errorHandler
    void readObject(java.io.ObjectInputStream) -> readObject
    void setDefault() -> setDefault
    void setIgnoreComments(boolean) -> setIgnoreComments
    void setIgnoreWhitespace(boolean) -> setIgnoreWhitespace
    void setIgnoreProcessingInstructions(boolean) -> setIgnoreProcessingInstructions
    void setPrettyPrinting(boolean) -> setPrettyPrinting
    void setPrettyIndent(int) -> setPrettyIndent
    boolean isIgnoreComments() -> isIgnoreComments
    boolean isIgnoreProcessingInstructions() -> isIgnoreProcessingInstructions
    boolean isIgnoreWhitespace() -> isIgnoreWhitespace
    boolean isPrettyPrinting() -> isPrettyPrinting
    int getPrettyIndent() -> getPrettyIndent
    java.lang.String toXmlNewlines(java.lang.String) -> toXmlNewlines
    javax.xml.parsers.DocumentBuilderFactory getDomFactory() -> getDomFactory
    javax.xml.parsers.DocumentBuilder getDocumentBuilderFromPool() -> getDocumentBuilderFromPool
    void returnDocumentBuilderToPool(javax.xml.parsers.DocumentBuilder) -> returnDocumentBuilderToPool
    void addProcessingInstructionsTo(java.util.List,org.w3c.dom.Node) -> addProcessingInstructionsTo
    void addCommentsTo(java.util.List,org.w3c.dom.Node) -> addCommentsTo
    void addTextNodesToRemoveAndTrim(java.util.List,org.w3c.dom.Node) -> addTextNodesToRemoveAndTrim
    org.w3c.dom.Node toXml(java.lang.String,java.lang.String) -> toXml
    org.w3c.dom.Document newDocument() -> newDocument
    java.lang.String toString(org.w3c.dom.Node) -> toString
    java.lang.String escapeAttributeValue(java.lang.Object) -> escapeAttributeValue
    java.lang.String escapeTextValue(java.lang.Object) -> escapeTextValue
    java.lang.String escapeElementValue(java.lang.String) -> escapeElementValue
    java.lang.String elementToXmlString(org.w3c.dom.Element) -> elementToXmlString
    java.lang.String ecmaToXmlString(org.w3c.dom.Node) -> ecmaToXmlString
    void beautifyElement(org.w3c.dom.Element,int) -> beautifyElement
org.mozilla.javascript.xmlimpl.XmlProcessor$1 -> org.mozilla.javascript.xmlimpl.XmlProcessor$1:
org.mozilla.javascript.xmlimpl.XmlProcessor$RhinoSAXErrorHandler -> org.mozilla.javascript.xmlimpl.XmlProcessor$RhinoSAXErrorHandler:
    long serialVersionUID -> serialVersionUID
    void throwError(org.xml.sax.SAXParseException) -> throwError
    void error(org.xml.sax.SAXParseException) -> error
    void fatalError(org.xml.sax.SAXParseException) -> fatalError
    void warning(org.xml.sax.SAXParseException) -> warning
